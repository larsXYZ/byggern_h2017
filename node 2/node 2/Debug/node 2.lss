
node 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000072  00800200  0000133a  000013ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000133a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001b  00800272  00800272  00001440  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001440  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000268  00000000  00000000  0000149c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001a4c  00000000  00000000  00001704  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000cb1  00000000  00000000  00003150  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000012bb  00000000  00000000  00003e01  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000578  00000000  00000000  000050bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006f9  00000000  00000000  00005634  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000d0d  00000000  00000000  00005d2d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001e0  00000000  00000000  00006a3a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c2 c0       	rjmp	.+388    	; 0x186 <__ctors_end>
       2:	00 00       	nop
       4:	e0 c0       	rjmp	.+448    	; 0x1c6 <__bad_interrupt>
       6:	00 00       	nop
       8:	de c0       	rjmp	.+444    	; 0x1c6 <__bad_interrupt>
       a:	00 00       	nop
       c:	dc c0       	rjmp	.+440    	; 0x1c6 <__bad_interrupt>
       e:	00 00       	nop
      10:	da c0       	rjmp	.+436    	; 0x1c6 <__bad_interrupt>
      12:	00 00       	nop
      14:	d8 c0       	rjmp	.+432    	; 0x1c6 <__bad_interrupt>
      16:	00 00       	nop
      18:	f8 c0       	rjmp	.+496    	; 0x20a <__vector_6>
      1a:	00 00       	nop
      1c:	d4 c0       	rjmp	.+424    	; 0x1c6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d2 c0       	rjmp	.+420    	; 0x1c6 <__bad_interrupt>
      22:	00 00       	nop
      24:	d0 c0       	rjmp	.+416    	; 0x1c6 <__bad_interrupt>
      26:	00 00       	nop
      28:	ce c0       	rjmp	.+412    	; 0x1c6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	cc c0       	rjmp	.+408    	; 0x1c6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ca c0       	rjmp	.+404    	; 0x1c6 <__bad_interrupt>
      32:	00 00       	nop
      34:	c8 c0       	rjmp	.+400    	; 0x1c6 <__bad_interrupt>
      36:	00 00       	nop
      38:	c6 c0       	rjmp	.+396    	; 0x1c6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c4 c0       	rjmp	.+392    	; 0x1c6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	c2 c0       	rjmp	.+388    	; 0x1c6 <__bad_interrupt>
      42:	00 00       	nop
      44:	c0 c0       	rjmp	.+384    	; 0x1c6 <__bad_interrupt>
      46:	00 00       	nop
      48:	be c0       	rjmp	.+380    	; 0x1c6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	bc c0       	rjmp	.+376    	; 0x1c6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ba c0       	rjmp	.+372    	; 0x1c6 <__bad_interrupt>
      52:	00 00       	nop
      54:	b8 c0       	rjmp	.+368    	; 0x1c6 <__bad_interrupt>
      56:	00 00       	nop
      58:	b6 c0       	rjmp	.+364    	; 0x1c6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b4 c0       	rjmp	.+360    	; 0x1c6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b2 c0       	rjmp	.+356    	; 0x1c6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b0 c0       	rjmp	.+352    	; 0x1c6 <__bad_interrupt>
      66:	00 00       	nop
      68:	ae c0       	rjmp	.+348    	; 0x1c6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ac c0       	rjmp	.+344    	; 0x1c6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	aa c0       	rjmp	.+340    	; 0x1c6 <__bad_interrupt>
      72:	00 00       	nop
      74:	a8 c0       	rjmp	.+336    	; 0x1c6 <__bad_interrupt>
      76:	00 00       	nop
      78:	a6 c0       	rjmp	.+332    	; 0x1c6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a4 c0       	rjmp	.+328    	; 0x1c6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	c0 c3       	rjmp	.+1920   	; 0x802 <__vector_32>
      82:	00 00       	nop
      84:	a0 c0       	rjmp	.+320    	; 0x1c6 <__bad_interrupt>
      86:	00 00       	nop
      88:	9e c0       	rjmp	.+316    	; 0x1c6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	9c c0       	rjmp	.+312    	; 0x1c6 <__bad_interrupt>
      8e:	00 00       	nop
      90:	9a c0       	rjmp	.+308    	; 0x1c6 <__bad_interrupt>
      92:	00 00       	nop
      94:	98 c0       	rjmp	.+304    	; 0x1c6 <__bad_interrupt>
      96:	00 00       	nop
      98:	96 c0       	rjmp	.+300    	; 0x1c6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	05 c4       	rjmp	.+2058   	; 0x8a8 <__vector_39>
      9e:	00 00       	nop
      a0:	92 c0       	rjmp	.+292    	; 0x1c6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	90 c0       	rjmp	.+288    	; 0x1c6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	8e c0       	rjmp	.+284    	; 0x1c6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	8c c0       	rjmp	.+280    	; 0x1c6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	8a c0       	rjmp	.+276    	; 0x1c6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	88 c0       	rjmp	.+272    	; 0x1c6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	86 c0       	rjmp	.+268    	; 0x1c6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	84 c0       	rjmp	.+264    	; 0x1c6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	82 c0       	rjmp	.+260    	; 0x1c6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	80 c0       	rjmp	.+256    	; 0x1c6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	7e c0       	rjmp	.+252    	; 0x1c6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	7c c0       	rjmp	.+248    	; 0x1c6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	7a c0       	rjmp	.+244    	; 0x1c6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	78 c0       	rjmp	.+240    	; 0x1c6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	76 c0       	rjmp	.+236    	; 0x1c6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	74 c0       	rjmp	.+232    	; 0x1c6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	72 c0       	rjmp	.+228    	; 0x1c6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	6f 04       	cpc	r6, r15
      e6:	c1 04       	cpc	r12, r1
      e8:	c1 04       	cpc	r12, r1
      ea:	c1 04       	cpc	r12, r1
      ec:	c1 04       	cpc	r12, r1
      ee:	c1 04       	cpc	r12, r1
      f0:	c1 04       	cpc	r12, r1
      f2:	c1 04       	cpc	r12, r1
      f4:	6f 04       	cpc	r6, r15
      f6:	c1 04       	cpc	r12, r1
      f8:	c1 04       	cpc	r12, r1
      fa:	c1 04       	cpc	r12, r1
      fc:	c1 04       	cpc	r12, r1
      fe:	c1 04       	cpc	r12, r1
     100:	c1 04       	cpc	r12, r1
     102:	c1 04       	cpc	r12, r1
     104:	71 04       	cpc	r7, r1
     106:	c1 04       	cpc	r12, r1
     108:	c1 04       	cpc	r12, r1
     10a:	c1 04       	cpc	r12, r1
     10c:	c1 04       	cpc	r12, r1
     10e:	c1 04       	cpc	r12, r1
     110:	c1 04       	cpc	r12, r1
     112:	c1 04       	cpc	r12, r1
     114:	c1 04       	cpc	r12, r1
     116:	c1 04       	cpc	r12, r1
     118:	c1 04       	cpc	r12, r1
     11a:	c1 04       	cpc	r12, r1
     11c:	c1 04       	cpc	r12, r1
     11e:	c1 04       	cpc	r12, r1
     120:	c1 04       	cpc	r12, r1
     122:	c1 04       	cpc	r12, r1
     124:	71 04       	cpc	r7, r1
     126:	c1 04       	cpc	r12, r1
     128:	c1 04       	cpc	r12, r1
     12a:	c1 04       	cpc	r12, r1
     12c:	c1 04       	cpc	r12, r1
     12e:	c1 04       	cpc	r12, r1
     130:	c1 04       	cpc	r12, r1
     132:	c1 04       	cpc	r12, r1
     134:	c1 04       	cpc	r12, r1
     136:	c1 04       	cpc	r12, r1
     138:	c1 04       	cpc	r12, r1
     13a:	c1 04       	cpc	r12, r1
     13c:	c1 04       	cpc	r12, r1
     13e:	c1 04       	cpc	r12, r1
     140:	c1 04       	cpc	r12, r1
     142:	c1 04       	cpc	r12, r1
     144:	bd 04       	cpc	r11, r13
     146:	c1 04       	cpc	r12, r1
     148:	c1 04       	cpc	r12, r1
     14a:	c1 04       	cpc	r12, r1
     14c:	c1 04       	cpc	r12, r1
     14e:	c1 04       	cpc	r12, r1
     150:	c1 04       	cpc	r12, r1
     152:	c1 04       	cpc	r12, r1
     154:	9a 04       	cpc	r9, r10
     156:	c1 04       	cpc	r12, r1
     158:	c1 04       	cpc	r12, r1
     15a:	c1 04       	cpc	r12, r1
     15c:	c1 04       	cpc	r12, r1
     15e:	c1 04       	cpc	r12, r1
     160:	c1 04       	cpc	r12, r1
     162:	c1 04       	cpc	r12, r1
     164:	c1 04       	cpc	r12, r1
     166:	c1 04       	cpc	r12, r1
     168:	c1 04       	cpc	r12, r1
     16a:	c1 04       	cpc	r12, r1
     16c:	c1 04       	cpc	r12, r1
     16e:	c1 04       	cpc	r12, r1
     170:	c1 04       	cpc	r12, r1
     172:	c1 04       	cpc	r12, r1
     174:	8e 04       	cpc	r8, r14
     176:	c1 04       	cpc	r12, r1
     178:	c1 04       	cpc	r12, r1
     17a:	c1 04       	cpc	r12, r1
     17c:	c1 04       	cpc	r12, r1
     17e:	c1 04       	cpc	r12, r1
     180:	c1 04       	cpc	r12, r1
     182:	c1 04       	cpc	r12, r1
     184:	ac 04       	cpc	r10, r12

00000186 <__ctors_end>:
     186:	11 24       	eor	r1, r1
     188:	1f be       	out	0x3f, r1	; 63
     18a:	cf ef       	ldi	r28, 0xFF	; 255
     18c:	d1 e2       	ldi	r29, 0x21	; 33
     18e:	de bf       	out	0x3e, r29	; 62
     190:	cd bf       	out	0x3d, r28	; 61
     192:	00 e0       	ldi	r16, 0x00	; 0
     194:	0c bf       	out	0x3c, r16	; 60

00000196 <__do_copy_data>:
     196:	12 e0       	ldi	r17, 0x02	; 2
     198:	a0 e0       	ldi	r26, 0x00	; 0
     19a:	b2 e0       	ldi	r27, 0x02	; 2
     19c:	ea e3       	ldi	r30, 0x3A	; 58
     19e:	f3 e1       	ldi	r31, 0x13	; 19
     1a0:	00 e0       	ldi	r16, 0x00	; 0
     1a2:	0b bf       	out	0x3b, r16	; 59
     1a4:	02 c0       	rjmp	.+4      	; 0x1aa <__do_copy_data+0x14>
     1a6:	07 90       	elpm	r0, Z+
     1a8:	0d 92       	st	X+, r0
     1aa:	a2 37       	cpi	r26, 0x72	; 114
     1ac:	b1 07       	cpc	r27, r17
     1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__do_copy_data+0x10>

000001b0 <__do_clear_bss>:
     1b0:	22 e0       	ldi	r18, 0x02	; 2
     1b2:	a2 e7       	ldi	r26, 0x72	; 114
     1b4:	b2 e0       	ldi	r27, 0x02	; 2
     1b6:	01 c0       	rjmp	.+2      	; 0x1ba <.do_clear_bss_start>

000001b8 <.do_clear_bss_loop>:
     1b8:	1d 92       	st	X+, r1

000001ba <.do_clear_bss_start>:
     1ba:	ad 38       	cpi	r26, 0x8D	; 141
     1bc:	b2 07       	cpc	r27, r18
     1be:	e1 f7       	brne	.-8      	; 0x1b8 <.do_clear_bss_loop>
     1c0:	6a d1       	rcall	.+724    	; 0x496 <main>
     1c2:	0c 94 9b 09 	jmp	0x1336	; 0x1336 <_exit>

000001c6 <__bad_interrupt>:
     1c6:	1c cf       	rjmp	.-456    	; 0x0 <__vectors>

000001c8 <CAN_init>:
	
	//Tell rest of the program we have mail
	message_received = 1;
	
	return 0;
}
     1c8:	cf 93       	push	r28
     1ca:	c8 2f       	mov	r28, r24
     1cc:	d7 d0       	rcall	.+430    	; 0x37c <MCP_init>
     1ce:	4f ef       	ldi	r20, 0xFF	; 255
     1d0:	60 e6       	ldi	r22, 0x60	; 96
     1d2:	80 e6       	ldi	r24, 0x60	; 96
     1d4:	d6 d0       	rcall	.+428    	; 0x382 <MCP_bit_modify>
     1d6:	41 e0       	ldi	r20, 0x01	; 1
     1d8:	61 e0       	ldi	r22, 0x01	; 1
     1da:	8b e2       	ldi	r24, 0x2B	; 43
     1dc:	d2 d0       	rcall	.+420    	; 0x382 <MCP_bit_modify>
     1de:	cc 23       	and	r28, r28
     1e0:	19 f0       	breq	.+6      	; 0x1e8 <CAN_init+0x20>
     1e2:	c1 30       	cpi	r28, 0x01	; 1
     1e4:	31 f0       	breq	.+12     	; 0x1f2 <CAN_init+0x2a>
     1e6:	09 c0       	rjmp	.+18     	; 0x1fa <CAN_init+0x32>
     1e8:	40 e4       	ldi	r20, 0x40	; 64
     1ea:	60 ee       	ldi	r22, 0xE0	; 224
     1ec:	8f e0       	ldi	r24, 0x0F	; 15
     1ee:	c9 d0       	rcall	.+402    	; 0x382 <MCP_bit_modify>
     1f0:	04 c0       	rjmp	.+8      	; 0x1fa <CAN_init+0x32>
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	60 ee       	ldi	r22, 0xE0	; 224
     1f6:	8f e0       	ldi	r24, 0x0F	; 15
     1f8:	c4 d0       	rcall	.+392    	; 0x382 <MCP_bit_modify>
     1fa:	ea e6       	ldi	r30, 0x6A	; 106
     1fc:	f0 e0       	ldi	r31, 0x00	; 0
     1fe:	80 81       	ld	r24, Z
     200:	88 60       	ori	r24, 0x08	; 8
     202:	80 83       	st	Z, r24
     204:	ed 9a       	sbi	0x1d, 5	; 29
     206:	cf 91       	pop	r28
     208:	08 95       	ret

0000020a <__vector_6>:
{
	CAN_int_vector();
}
#elif __AVR_ATmega2560__
ISR(INT5_vect)
{
     20a:	1f 92       	push	r1
     20c:	0f 92       	push	r0
     20e:	0f b6       	in	r0, 0x3f	; 63
     210:	0f 92       	push	r0
     212:	11 24       	eor	r1, r1
     214:	8f 93       	push	r24
     216:	9f 93       	push	r25
{

	//Reset interrupt flag, in order to allow a new message to be received into the buffer
	
	//Tell rest of the program we have mail
	message_received = 1;
     218:	81 e0       	ldi	r24, 0x01	; 1
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	90 93 73 02 	sts	0x0273, r25
     220:	80 93 72 02 	sts	0x0272, r24
}
#elif __AVR_ATmega2560__
ISR(INT5_vect)
{
	CAN_int_vector();
}
     224:	9f 91       	pop	r25
     226:	8f 91       	pop	r24
     228:	0f 90       	pop	r0
     22a:	0f be       	out	0x3f, r0	; 63
     22c:	0f 90       	pop	r0
     22e:	1f 90       	pop	r1
     230:	18 95       	reti

00000232 <CAN_receive_transmission>:
#endif

struct can_frame CAN_receive_transmission()
{
     232:	8f 92       	push	r8
     234:	9f 92       	push	r9
     236:	af 92       	push	r10
     238:	bf 92       	push	r11
     23a:	cf 92       	push	r12
     23c:	df 92       	push	r13
     23e:	ef 92       	push	r14
     240:	ff 92       	push	r15
     242:	0f 93       	push	r16
     244:	1f 93       	push	r17
     246:	cf 93       	push	r28
     248:	df 93       	push	r29
     24a:	cd b7       	in	r28, 0x3d	; 61
     24c:	de b7       	in	r29, 0x3e	; 62
     24e:	2b 97       	sbiw	r28, 0x0b	; 11
     250:	0f b6       	in	r0, 0x3f	; 63
     252:	f8 94       	cli
     254:	de bf       	out	0x3e, r29	; 62
     256:	0f be       	out	0x3f, r0	; 63
     258:	cd bf       	out	0x3d, r28	; 61
     25a:	7c 01       	movw	r14, r24
     25c:	9e 01       	movw	r18, r28
     25e:	25 5f       	subi	r18, 0xF5	; 245
     260:	3f 4f       	sbci	r19, 0xFF	; 255
     262:	fe 01       	movw	r30, r28
     264:	34 96       	adiw	r30, 0x04	; 4
	
	//Temporary message
	struct can_frame temp;
	for (int i = 0; i < 7; i++) temp.data[i] = 0;
     266:	11 92       	st	Z+, r1
     268:	e2 17       	cp	r30, r18
     26a:	f3 07       	cpc	r31, r19
     26c:	e1 f7       	brne	.-8      	; 0x266 <CAN_receive_transmission+0x34>
	temp.id = -1;
	temp.length = 0;
	
	//Checks if we've got mail
	if (!message_received) return temp;
     26e:	80 91 72 02 	lds	r24, 0x0272
     272:	90 91 73 02 	lds	r25, 0x0273
     276:	89 2b       	or	r24, r25
     278:	71 f4       	brne	.+28     	; 0x296 <CAN_receive_transmission+0x64>
     27a:	8f ef       	ldi	r24, 0xFF	; 255
     27c:	9f ef       	ldi	r25, 0xFF	; 255
     27e:	9a 83       	std	Y+2, r25	; 0x02
     280:	89 83       	std	Y+1, r24	; 0x01
     282:	1b 82       	std	Y+3, r1	; 0x03
     284:	8b e0       	ldi	r24, 0x0B	; 11
     286:	fe 01       	movw	r30, r28
     288:	31 96       	adiw	r30, 0x01	; 1
     28a:	d7 01       	movw	r26, r14
     28c:	01 90       	ld	r0, Z+
     28e:	0d 92       	st	X+, r0
     290:	8a 95       	dec	r24
     292:	e1 f7       	brne	.-8      	; 0x28c <CAN_receive_transmission+0x5a>
     294:	45 c0       	rjmp	.+138    	; 0x320 <CAN_receive_transmission+0xee>
	else
	{
		message_received = 0;
     296:	10 92 73 02 	sts	0x0273, r1
     29a:	10 92 72 02 	sts	0x0272, r1

		//Check ID
		temp.id = (MCP_read(MCP_RXB0SIDH) << 3);
     29e:	81 e6       	ldi	r24, 0x61	; 97
     2a0:	53 d0       	rcall	.+166    	; 0x348 <MCP_read>
     2a2:	a8 2e       	mov	r10, r24
		temp.id += (MCP_read(MCP_RXB0SIDL) >> 5);
     2a4:	82 e6       	ldi	r24, 0x62	; 98
     2a6:	50 d0       	rcall	.+160    	; 0x348 <MCP_read>
	else
	{
		message_received = 0;

		//Check ID
		temp.id = (MCP_read(MCP_RXB0SIDH) << 3);
     2a8:	b1 2c       	mov	r11, r1
     2aa:	aa 0c       	add	r10, r10
     2ac:	bb 1c       	adc	r11, r11
     2ae:	aa 0c       	add	r10, r10
     2b0:	bb 1c       	adc	r11, r11
     2b2:	aa 0c       	add	r10, r10
     2b4:	bb 1c       	adc	r11, r11
		temp.id += (MCP_read(MCP_RXB0SIDL) >> 5);
     2b6:	82 95       	swap	r24
     2b8:	86 95       	lsr	r24
     2ba:	87 70       	andi	r24, 0x07	; 7
     2bc:	a8 0e       	add	r10, r24
     2be:	b1 1c       	adc	r11, r1
	
		//Data Length
		temp.length = (MCP_read(MCP_RXB0DLC));
     2c0:	85 e6       	ldi	r24, 0x65	; 101
     2c2:	42 d0       	rcall	.+132    	; 0x348 <MCP_read>
     2c4:	88 2e       	mov	r8, r24
		
		//Data batch
		for (int i = 0; i < temp.length; i++) temp.data[i] = MCP_read(MCP_RXB0DM + i);
     2c6:	18 16       	cp	r1, r24
     2c8:	e4 f4       	brge	.+56     	; 0x302 <CAN_receive_transmission+0xd0>
     2ca:	cc 24       	eor	r12, r12
     2cc:	c3 94       	inc	r12
     2ce:	d1 2c       	mov	r13, r1
     2d0:	cc 0e       	add	r12, r28
     2d2:	dd 1e       	adc	r13, r29
     2d4:	83 e0       	ldi	r24, 0x03	; 3
     2d6:	c8 0e       	add	r12, r24
     2d8:	d1 1c       	adc	r13, r1
     2da:	c8 0c       	add	r12, r8
     2dc:	d1 1c       	adc	r13, r1
     2de:	87 fc       	sbrc	r8, 7
     2e0:	da 94       	dec	r13
     2e2:	8e 01       	movw	r16, r28
     2e4:	0c 5f       	subi	r16, 0xFC	; 252
     2e6:	1f 4f       	sbci	r17, 0xFF	; 255
     2e8:	0f 2e       	mov	r0, r31
     2ea:	f6 e6       	ldi	r31, 0x66	; 102
     2ec:	9f 2e       	mov	r9, r31
     2ee:	f0 2d       	mov	r31, r0
     2f0:	89 2d       	mov	r24, r9
     2f2:	2a d0       	rcall	.+84     	; 0x348 <MCP_read>
     2f4:	f8 01       	movw	r30, r16
     2f6:	81 93       	st	Z+, r24
     2f8:	8f 01       	movw	r16, r30
     2fa:	93 94       	inc	r9
     2fc:	ec 15       	cp	r30, r12
     2fe:	fd 05       	cpc	r31, r13
     300:	b9 f7       	brne	.-18     	; 0x2f0 <CAN_receive_transmission+0xbe>

		MCP_bit_modify(MCP_CANINTF,0x01, 0x00);
     302:	40 e0       	ldi	r20, 0x00	; 0
     304:	61 e0       	ldi	r22, 0x01	; 1
     306:	8c e2       	ldi	r24, 0x2C	; 44
     308:	3c d0       	rcall	.+120    	; 0x382 <MCP_bit_modify>
		return temp;
     30a:	ba 82       	std	Y+2, r11	; 0x02
     30c:	a9 82       	std	Y+1, r10	; 0x01
     30e:	8b 82       	std	Y+3, r8	; 0x03
     310:	8b e0       	ldi	r24, 0x0B	; 11
     312:	fe 01       	movw	r30, r28
     314:	31 96       	adiw	r30, 0x01	; 1
     316:	d7 01       	movw	r26, r14
     318:	01 90       	ld	r0, Z+
     31a:	0d 92       	st	X+, r0
     31c:	8a 95       	dec	r24
     31e:	e1 f7       	brne	.-8      	; 0x318 <CAN_receive_transmission+0xe6>
	}
}
     320:	c7 01       	movw	r24, r14
     322:	2b 96       	adiw	r28, 0x0b	; 11
     324:	0f b6       	in	r0, 0x3f	; 63
     326:	f8 94       	cli
     328:	de bf       	out	0x3e, r29	; 62
     32a:	0f be       	out	0x3f, r0	; 63
     32c:	cd bf       	out	0x3d, r28	; 61
     32e:	df 91       	pop	r29
     330:	cf 91       	pop	r28
     332:	1f 91       	pop	r17
     334:	0f 91       	pop	r16
     336:	ff 90       	pop	r15
     338:	ef 90       	pop	r14
     33a:	df 90       	pop	r13
     33c:	cf 90       	pop	r12
     33e:	bf 90       	pop	r11
     340:	af 90       	pop	r10
     342:	9f 90       	pop	r9
     344:	8f 90       	pop	r8
     346:	08 95       	ret

00000348 <MCP_read>:
     348:	cf 93       	push	r28
     34a:	c8 2f       	mov	r28, r24
     34c:	81 e0       	ldi	r24, 0x01	; 1
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	4e d0       	rcall	.+156    	; 0x3ee <SPI_select_slave>
     352:	83 e0       	ldi	r24, 0x03	; 3
     354:	3d d0       	rcall	.+122    	; 0x3d0 <SPI_send_byte>
     356:	8c 2f       	mov	r24, r28
     358:	3b d0       	rcall	.+118    	; 0x3d0 <SPI_send_byte>
     35a:	41 d0       	rcall	.+130    	; 0x3de <SPI_receive_byte>
     35c:	c8 2f       	mov	r28, r24
     35e:	80 e0       	ldi	r24, 0x00	; 0
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	45 d0       	rcall	.+138    	; 0x3ee <SPI_select_slave>
     364:	8c 2f       	mov	r24, r28
     366:	cf 91       	pop	r28
     368:	08 95       	ret

0000036a <MCP_reset>:
     36a:	81 e0       	ldi	r24, 0x01	; 1
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	3f d0       	rcall	.+126    	; 0x3ee <SPI_select_slave>
     370:	80 ec       	ldi	r24, 0xC0	; 192
     372:	2e d0       	rcall	.+92     	; 0x3d0 <SPI_send_byte>
     374:	80 e0       	ldi	r24, 0x00	; 0
     376:	90 e0       	ldi	r25, 0x00	; 0
     378:	3a c0       	rjmp	.+116    	; 0x3ee <SPI_select_slave>
     37a:	08 95       	ret

0000037c <MCP_init>:
     37c:	1a d0       	rcall	.+52     	; 0x3b2 <SPI_init>
     37e:	f5 cf       	rjmp	.-22     	; 0x36a <MCP_reset>
     380:	08 95       	ret

00000382 <MCP_bit_modify>:
     382:	1f 93       	push	r17
     384:	cf 93       	push	r28
     386:	df 93       	push	r29
     388:	18 2f       	mov	r17, r24
     38a:	d6 2f       	mov	r29, r22
     38c:	c4 2f       	mov	r28, r20
     38e:	81 e0       	ldi	r24, 0x01	; 1
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	2d d0       	rcall	.+90     	; 0x3ee <SPI_select_slave>
     394:	85 e0       	ldi	r24, 0x05	; 5
     396:	1c d0       	rcall	.+56     	; 0x3d0 <SPI_send_byte>
     398:	81 2f       	mov	r24, r17
     39a:	1a d0       	rcall	.+52     	; 0x3d0 <SPI_send_byte>
     39c:	8d 2f       	mov	r24, r29
     39e:	18 d0       	rcall	.+48     	; 0x3d0 <SPI_send_byte>
     3a0:	8c 2f       	mov	r24, r28
     3a2:	16 d0       	rcall	.+44     	; 0x3d0 <SPI_send_byte>
     3a4:	80 e0       	ldi	r24, 0x00	; 0
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	22 d0       	rcall	.+68     	; 0x3ee <SPI_select_slave>
     3aa:	df 91       	pop	r29
     3ac:	cf 91       	pop	r28
     3ae:	1f 91       	pop	r17
     3b0:	08 95       	ret

000003b2 <SPI_init>:
     3b2:	22 9a       	sbi	0x04, 2	; 4
     3b4:	21 9a       	sbi	0x04, 1	; 4
     3b6:	27 9a       	sbi	0x04, 7	; 4
     3b8:	20 9a       	sbi	0x04, 0	; 4
     3ba:	23 98       	cbi	0x04, 3	; 4
     3bc:	8c b5       	in	r24, 0x2c	; 44
     3be:	80 61       	ori	r24, 0x10	; 16
     3c0:	8c bd       	out	0x2c, r24	; 44
     3c2:	8c b5       	in	r24, 0x2c	; 44
     3c4:	82 60       	ori	r24, 0x02	; 2
     3c6:	8c bd       	out	0x2c, r24	; 44
     3c8:	8c b5       	in	r24, 0x2c	; 44
     3ca:	80 64       	ori	r24, 0x40	; 64
     3cc:	8c bd       	out	0x2c, r24	; 44
     3ce:	08 95       	ret

000003d0 <SPI_send_byte>:
     3d0:	8e bd       	out	0x2e, r24	; 46
     3d2:	0d b4       	in	r0, 0x2d	; 45
     3d4:	07 fe       	sbrs	r0, 7
     3d6:	fd cf       	rjmp	.-6      	; 0x3d2 <SPI_send_byte+0x2>
     3d8:	80 e0       	ldi	r24, 0x00	; 0
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	08 95       	ret

000003de <SPI_receive_byte>:
     3de:	8f ef       	ldi	r24, 0xFF	; 255
     3e0:	f7 df       	rcall	.-18     	; 0x3d0 <SPI_send_byte>
     3e2:	0d b4       	in	r0, 0x2d	; 45
     3e4:	07 fe       	sbrs	r0, 7
     3e6:	fd cf       	rjmp	.-6      	; 0x3e2 <SPI_receive_byte+0x4>
     3e8:	8e b5       	in	r24, 0x2e	; 46
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	08 95       	ret

000003ee <SPI_select_slave>:
     3ee:	81 30       	cpi	r24, 0x01	; 1
     3f0:	91 05       	cpc	r25, r1
     3f2:	11 f4       	brne	.+4      	; 0x3f8 <SPI_select_slave+0xa>
     3f4:	2f 98       	cbi	0x05, 7	; 5
     3f6:	08 95       	ret
     3f8:	89 2b       	or	r24, r25
     3fa:	09 f4       	brne	.+2      	; 0x3fe <SPI_select_slave+0x10>
     3fc:	2f 9a       	sbi	0x05, 7	; 5
     3fe:	08 95       	ret

00000400 <UART_send>:
     400:	e0 ec       	ldi	r30, 0xC0	; 192
     402:	f0 e0       	ldi	r31, 0x00	; 0
     404:	90 81       	ld	r25, Z
     406:	95 ff       	sbrs	r25, 5
     408:	fd cf       	rjmp	.-6      	; 0x404 <UART_send+0x4>
     40a:	80 93 c6 00 	sts	0x00C6, r24
     40e:	08 95       	ret

00000410 <UART_init>:
     410:	9c 01       	movw	r18, r24
     412:	44 27       	eor	r20, r20
     414:	37 fd       	sbrc	r19, 7
     416:	40 95       	com	r20
     418:	54 2f       	mov	r21, r20
     41a:	60 e4       	ldi	r22, 0x40	; 64
     41c:	72 e4       	ldi	r23, 0x42	; 66
     41e:	8f e0       	ldi	r24, 0x0F	; 15
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	d8 d2       	rcall	.+1456   	; 0x9d4 <__divmodsi4>
     424:	21 50       	subi	r18, 0x01	; 1
     426:	31 09       	sbc	r19, r1
     428:	30 93 c5 00 	sts	0x00C5, r19
     42c:	20 93 c4 00 	sts	0x00C4, r18
     430:	88 e1       	ldi	r24, 0x18	; 24
     432:	80 93 c1 00 	sts	0x00C1, r24
     436:	86 e0       	ldi	r24, 0x06	; 6
     438:	80 93 c2 00 	sts	0x00C2, r24
     43c:	80 e0       	ldi	r24, 0x00	; 0
     43e:	92 e0       	ldi	r25, 0x02	; 2
     440:	90 93 8a 02 	sts	0x028A, r25
     444:	80 93 89 02 	sts	0x0289, r24
     448:	08 95       	ret

0000044a <adc2560_init>:
#include <stdio.h>

void adc2560_init()
{
	//Enable ADC
	ADCSRA |= (1 << ADEN);
     44a:	ea e7       	ldi	r30, 0x7A	; 122
     44c:	f0 e0       	ldi	r31, 0x00	; 0
     44e:	80 81       	ld	r24, Z
     450:	80 68       	ori	r24, 0x80	; 128
     452:	80 83       	st	Z, r24

	//Set clock prescaler @128
	ADCSRA |= (3 << ADPS0);
     454:	80 81       	ld	r24, Z
     456:	83 60       	ori	r24, 0x03	; 3
     458:	80 83       	st	Z, r24
	
	ADMUX |= (1 << REFS0);
     45a:	ec e7       	ldi	r30, 0x7C	; 124
     45c:	f0 e0       	ldi	r31, 0x00	; 0
     45e:	80 81       	ld	r24, Z
     460:	80 64       	ori	r24, 0x40	; 64
     462:	80 83       	st	Z, r24
     464:	08 95       	ret

00000466 <DAC_init>:
#define DAC_SLAVE_ADDRESS 0x50

void DAC_init()
{
	//Initialize TWI driver from Atmel
	TWI_Master_Initialise();
     466:	f4 d1       	rcall	.+1000   	; 0x850 <TWI_Master_Initialise>
	
	//Enable output on I2C pins
	DDRD |= (1 << PD1) | (1 << PD0);
     468:	8a b1       	in	r24, 0x0a	; 10
     46a:	83 60       	ori	r24, 0x03	; 3
     46c:	8a b9       	out	0x0a, r24	; 10
     46e:	08 95       	ret

00000470 <DAC_write_bin>:
	
}

void DAC_write_bin(unsigned char val)
{
     470:	cf 93       	push	r28
     472:	df 93       	push	r29
     474:	00 d0       	rcall	.+0      	; 0x476 <DAC_write_bin+0x6>
     476:	cd b7       	in	r28, 0x3d	; 61
     478:	de b7       	in	r29, 0x3e	; 62
	//Preventing overflow errors
	if (val > 255) val = 255;
	else if (val < 0) val = 0;
	
	unsigned char message[3];
	message[0] = DAC_SLAVE_ADDRESS;		//Set DAC as slave
     47a:	90 e5       	ldi	r25, 0x50	; 80
     47c:	99 83       	std	Y+1, r25	; 0x01
	message[1] = 0;						//We use DAC0
     47e:	1a 82       	std	Y+2, r1	; 0x02
	message[2] = val;					//Send value
     480:	8b 83       	std	Y+3, r24	; 0x03
	
	TWI_Start_Transceiver_With_Data(message,3);
     482:	63 e0       	ldi	r22, 0x03	; 3
     484:	ce 01       	movw	r24, r28
     486:	01 96       	adiw	r24, 0x01	; 1
     488:	ed d1       	rcall	.+986    	; 0x864 <TWI_Start_Transceiver_With_Data>
}
     48a:	0f 90       	pop	r0
     48c:	0f 90       	pop	r0
     48e:	0f 90       	pop	r0
     490:	df 91       	pop	r29
     492:	cf 91       	pop	r28
     494:	08 95       	ret

00000496 <main>:
#include <util/delay.h>
#include <inttypes.h>


int main(void)
{
     496:	cf 93       	push	r28
     498:	df 93       	push	r29
     49a:	cd b7       	in	r28, 0x3d	; 61
     49c:	de b7       	in	r29, 0x3e	; 62
     49e:	2d 97       	sbiw	r28, 0x0d	; 13
     4a0:	0f b6       	in	r0, 0x3f	; 63
     4a2:	f8 94       	cli
     4a4:	de bf       	out	0x3e, r29	; 62
     4a6:	0f be       	out	0x3f, r0	; 63
     4a8:	cd bf       	out	0x3d, r28	; 61
	
	//Initialises UART communication
	UART_init(9600);
     4aa:	80 e8       	ldi	r24, 0x80	; 128
     4ac:	95 e2       	ldi	r25, 0x25	; 37
     4ae:	b0 df       	rcall	.-160    	; 0x410 <UART_init>
	
	//CAN startup
	CAN_init(CAN_MODE_NORMAL);
     4b0:	81 e0       	ldi	r24, 0x01	; 1
     4b2:	8a de       	rcall	.-748    	; 0x1c8 <CAN_init>
	
	//DAC init
	DAC_init();
     4b4:	d8 df       	rcall	.-80     	; 0x466 <DAC_init>
	
	//ADC init
	adc2560_init();
     4b6:	c9 df       	rcall	.-110    	; 0x44a <adc2560_init>
	
	//CTRL init
	ctrl_init();
     4b8:	b5 d0       	rcall	.+362    	; 0x624 <ctrl_init>
	
	//Enables interrupts
	sei();
     4ba:	78 94       	sei
	
	printf("start\n");
     4bc:	8f e0       	ldi	r24, 0x0F	; 15
     4be:	92 e0       	ldi	r25, 0x02	; 2
     4c0:	79 d4       	rcall	.+2290   	; 0xdb4 <puts>
	long int i = 0;
	int a = 0;
	ctrl_update_ref(0);
     4c2:	80 e0       	ldi	r24, 0x00	; 0
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	9c d0       	rcall	.+312    	; 0x600 <ctrl_update_ref>
	
	//Enables interrupts
	sei();
	
	printf("start\n");
	long int i = 0;
     4c8:	60 e0       	ldi	r22, 0x00	; 0
     4ca:	70 e0       	ldi	r23, 0x00	; 0
     4cc:	cb 01       	movw	r24, r22
	int a = 0;
	ctrl_update_ref(0);

	while (1)
	{
		if (i++%20000 == 0)printf("running... curr_vel = %d, ref = %d, curr_u = %d, curr_error = %d, error_power = %d\n", curr_vel , ref_vel,  curr_u, curr_error,(int)(KI*error_sum));
     4ce:	0f 2e       	mov	r0, r31
     4d0:	f0 e2       	ldi	r31, 0x20	; 32
     4d2:	4f 2e       	mov	r4, r31
     4d4:	fe e4       	ldi	r31, 0x4E	; 78
     4d6:	5f 2e       	mov	r5, r31
     4d8:	61 2c       	mov	r6, r1
     4da:	71 2c       	mov	r7, r1
     4dc:	f0 2d       	mov	r31, r0
				printf("FIRE SOL\n");
				ctrl_fire_sol();
			}
			
			//Update regulator parameters
			ctrl_update_ref(j_pos_x / 5);
     4de:	0f 2e       	mov	r0, r31
     4e0:	f5 e0       	ldi	r31, 0x05	; 5
     4e2:	af 2e       	mov	r10, r31
     4e4:	b1 2c       	mov	r11, r1
     4e6:	f0 2d       	mov	r31, r0
	int a = 0;
	ctrl_update_ref(0);

	while (1)
	{
		if (i++%20000 == 0)printf("running... curr_vel = %d, ref = %d, curr_u = %d, curr_error = %d, error_power = %d\n", curr_vel , ref_vel,  curr_u, curr_error,(int)(KI*error_sum));
     4e8:	6b 01       	movw	r12, r22
     4ea:	7c 01       	movw	r14, r24
     4ec:	2f ef       	ldi	r18, 0xFF	; 255
     4ee:	c2 1a       	sub	r12, r18
     4f0:	d2 0a       	sbc	r13, r18
     4f2:	e2 0a       	sbc	r14, r18
     4f4:	f2 0a       	sbc	r15, r18
     4f6:	a3 01       	movw	r20, r6
     4f8:	92 01       	movw	r18, r4
     4fa:	6c d2       	rcall	.+1240   	; 0x9d4 <__divmodsi4>
     4fc:	67 2b       	or	r22, r23
     4fe:	68 2b       	or	r22, r24
     500:	69 2b       	or	r22, r25
     502:	b1 f5       	brne	.+108    	; 0x570 <main+0xda>
     504:	60 91 81 02 	lds	r22, 0x0281
     508:	70 91 82 02 	lds	r23, 0x0282
     50c:	80 91 83 02 	lds	r24, 0x0283
     510:	90 91 84 02 	lds	r25, 0x0284
     514:	00 91 7d 02 	lds	r16, 0x027D
     518:	10 91 7e 02 	lds	r17, 0x027E
     51c:	80 90 7b 02 	lds	r8, 0x027B
     520:	90 90 7c 02 	lds	r9, 0x027C
     524:	20 90 85 02 	lds	r2, 0x0285
     528:	30 90 86 02 	lds	r3, 0x0286
     52c:	a0 91 7f 02 	lds	r26, 0x027F
     530:	b0 91 80 02 	lds	r27, 0x0280
     534:	bd 87       	std	Y+13, r27	; 0x0d
     536:	ac 87       	std	Y+12, r26	; 0x0c
     538:	2d ec       	ldi	r18, 0xCD	; 205
     53a:	3c ec       	ldi	r19, 0xCC	; 204
     53c:	4c ec       	ldi	r20, 0xCC	; 204
     53e:	5e e3       	ldi	r21, 0x3E	; 62
     540:	c5 d3       	rcall	.+1930   	; 0xccc <__mulsf3>
     542:	05 d3       	rcall	.+1546   	; 0xb4e <__fixsfsi>
     544:	7f 93       	push	r23
     546:	6f 93       	push	r22
     548:	1f 93       	push	r17
     54a:	0f 93       	push	r16
     54c:	9f 92       	push	r9
     54e:	8f 92       	push	r8
     550:	3f 92       	push	r3
     552:	2f 92       	push	r2
     554:	bd 85       	ldd	r27, Y+13	; 0x0d
     556:	bf 93       	push	r27
     558:	2c 85       	ldd	r18, Y+12	; 0x0c
     55a:	2f 93       	push	r18
     55c:	a5 e1       	ldi	r26, 0x15	; 21
     55e:	b2 e0       	ldi	r27, 0x02	; 2
     560:	bf 93       	push	r27
     562:	af 93       	push	r26
     564:	16 d4       	rcall	.+2092   	; 0xd92 <printf>
     566:	0f b6       	in	r0, 0x3f	; 63
     568:	f8 94       	cli
     56a:	de bf       	out	0x3e, r29	; 62
     56c:	0f be       	out	0x3f, r0	; 63
     56e:	cd bf       	out	0x3d, r28	; 61

		//Read CAN bus
		struct can_frame message = CAN_receive_transmission();	
     570:	ce 01       	movw	r24, r28
     572:	01 96       	adiw	r24, 0x01	; 1
     574:	5e de       	rcall	.-836    	; 0x232 <CAN_receive_transmission>
		if (message.id != -1)
     576:	89 81       	ldd	r24, Y+1	; 0x01
     578:	9a 81       	ldd	r25, Y+2	; 0x02
     57a:	01 96       	adiw	r24, 0x01	; 1
     57c:	81 f0       	breq	.+32     	; 0x59e <main+0x108>
		{
			//SET JOYSTICK POSITION DATA
			int j_pos_x = message.data[0];
     57e:	0c 81       	ldd	r16, Y+4	; 0x04
     580:	11 27       	eor	r17, r17
     582:	07 fd       	sbrc	r16, 7
     584:	10 95       	com	r17
			if (message.data[2])
     586:	8e 81       	ldd	r24, Y+6	; 0x06
     588:	88 23       	and	r24, r24
     58a:	21 f0       	breq	.+8      	; 0x594 <main+0xfe>
			{
				printf("FIRE SOL\n");
     58c:	89 e6       	ldi	r24, 0x69	; 105
     58e:	92 e0       	ldi	r25, 0x02	; 2
     590:	11 d4       	rcall	.+2082   	; 0xdb4 <puts>
				ctrl_fire_sol();
     592:	12 d1       	rcall	.+548    	; 0x7b8 <ctrl_fire_sol>
			}
			
			//Update regulator parameters
			ctrl_update_ref(j_pos_x / 5);
     594:	c8 01       	movw	r24, r16
     596:	b5 01       	movw	r22, r10
     598:	0a d2       	rcall	.+1044   	; 0x9ae <__divmodhi4>
     59a:	cb 01       	movw	r24, r22
     59c:	31 d0       	rcall	.+98     	; 0x600 <ctrl_update_ref>
	int a = 0;
	ctrl_update_ref(0);

	while (1)
	{
		if (i++%20000 == 0)printf("running... curr_vel = %d, ref = %d, curr_u = %d, curr_error = %d, error_power = %d\n", curr_vel , ref_vel,  curr_u, curr_error,(int)(KI*error_sum));
     59e:	c7 01       	movw	r24, r14
     5a0:	b6 01       	movw	r22, r12
			
			//Update regulator parameters
			ctrl_update_ref(j_pos_x / 5);
			
		}
	}
     5a2:	a2 cf       	rjmp	.-188    	; 0x4e8 <main+0x52>

000005a4 <ctrl_read_encoder>:
{
	
	int16_t encoder_val = 0;
	
	//Enable Encoder
	PORTH &= ~(1 << O_E);		//Clears O_E to enable encoder
     5a4:	e2 e0       	ldi	r30, 0x02	; 2
     5a6:	f1 e0       	ldi	r31, 0x01	; 1
     5a8:	80 81       	ld	r24, Z
     5aa:	8f 7d       	andi	r24, 0xDF	; 223
     5ac:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     5ae:	8a e6       	ldi	r24, 0x6A	; 106
     5b0:	8a 95       	dec	r24
     5b2:	f1 f7       	brne	.-4      	; 0x5b0 <ctrl_read_encoder+0xc>
     5b4:	00 c0       	rjmp	.+0      	; 0x5b6 <ctrl_read_encoder+0x12>
	_delay_us(20);
	
	PORTH &= ~(1 << SEL);
     5b6:	80 81       	ld	r24, Z
     5b8:	87 7f       	andi	r24, 0xF7	; 247
     5ba:	80 83       	st	Z, r24
     5bc:	9a e6       	ldi	r25, 0x6A	; 106
     5be:	9a 95       	dec	r25
     5c0:	f1 f7       	brne	.-4      	; 0x5be <ctrl_read_encoder+0x1a>
     5c2:	00 c0       	rjmp	.+0      	; 0x5c4 <ctrl_read_encoder+0x20>
	_delay_us(20);
	
	encoder_val |= (PINK << 8);		//Reads upper bits of encoder
     5c4:	20 91 06 01 	lds	r18, 0x0106
	
	PORTH |= (1 << SEL);
     5c8:	80 81       	ld	r24, Z
     5ca:	88 60       	ori	r24, 0x08	; 8
     5cc:	80 83       	st	Z, r24
     5ce:	8a e6       	ldi	r24, 0x6A	; 106
     5d0:	8a 95       	dec	r24
     5d2:	f1 f7       	brne	.-4      	; 0x5d0 <ctrl_read_encoder+0x2c>
     5d4:	00 c0       	rjmp	.+0      	; 0x5d6 <ctrl_read_encoder+0x32>
	_delay_us(20);

	encoder_val |= (PINK << 0);		//Reads lower bits of encoder
     5d6:	80 91 06 01 	lds	r24, 0x0106
	
	//Toggles reset
	PORTH &= ~(1 << RST_);
     5da:	90 81       	ld	r25, Z
     5dc:	9f 7b       	andi	r25, 0xBF	; 191
     5de:	90 83       	st	Z, r25
     5e0:	9a e6       	ldi	r25, 0x6A	; 106
     5e2:	9a 95       	dec	r25
     5e4:	f1 f7       	brne	.-4      	; 0x5e2 <ctrl_read_encoder+0x3e>
     5e6:	00 c0       	rjmp	.+0      	; 0x5e8 <ctrl_read_encoder+0x44>
	_delay_us(20);
	PORTH |= (1 << RST_);
     5e8:	90 81       	ld	r25, Z
     5ea:	90 64       	ori	r25, 0x40	; 64
     5ec:	90 83       	st	Z, r25
	
	//Sets O_E to disable encoder
	PORTH |= (1 << O_E);
     5ee:	90 81       	ld	r25, Z
     5f0:	90 62       	ori	r25, 0x20	; 32
     5f2:	90 83       	st	Z, r25
	_delay_us(20);
	
	PORTH &= ~(1 << SEL);
	_delay_us(20);
	
	encoder_val |= (PINK << 8);		//Reads upper bits of encoder
     5f4:	90 e0       	ldi	r25, 0x00	; 0
	
	PORTH |= (1 << SEL);
	_delay_us(20);

	encoder_val |= (PINK << 0);		//Reads lower bits of encoder
     5f6:	92 2b       	or	r25, r18
	//Sets O_E to disable encoder
	PORTH |= (1 << O_E);
	
	return -encoder_val;
	
}
     5f8:	91 95       	neg	r25
     5fa:	81 95       	neg	r24
     5fc:	91 09       	sbc	r25, r1
     5fe:	08 95       	ret

00000600 <ctrl_update_ref>:
	
}

void ctrl_update_ref(int r)
{
	ref_vel = r;
     600:	90 93 86 02 	sts	0x0286, r25
     604:	80 93 85 02 	sts	0x0285, r24
     608:	08 95       	ret

0000060a <ctrl_reset>:
}

void ctrl_reset()
{
	error_sum = 0;
     60a:	10 92 81 02 	sts	0x0281, r1
     60e:	10 92 82 02 	sts	0x0282, r1
     612:	10 92 83 02 	sts	0x0283, r1
     616:	10 92 84 02 	sts	0x0284, r1
	ref_vel = 0;
     61a:	10 92 86 02 	sts	0x0286, r1
     61e:	10 92 85 02 	sts	0x0285, r1
     622:	08 95       	ret

00000624 <ctrl_init>:
#define SOL_PIN PA0

void ctrl_init()
{
	//Enables output from pins
	DDRH = 0xFF;
     624:	8f ef       	ldi	r24, 0xFF	; 255
     626:	80 93 01 01 	sts	0x0101, r24
	
	//Enables input from encoder
	DDRK = 0x00;
     62a:	10 92 07 01 	sts	0x0107, r1
	
	//Enables DAC
	DAC_init();
     62e:	1b df       	rcall	.-458    	; 0x466 <DAC_init>
	
	//Enable motor
	PORTH |= (1 << EN);
     630:	e2 e0       	ldi	r30, 0x02	; 2
     632:	f1 e0       	ldi	r31, 0x01	; 1
     634:	80 81       	ld	r24, Z
     636:	80 61       	ori	r24, 0x10	; 16
     638:	80 83       	st	Z, r24
	
	//Enable !RST
	PORTH |= (1 << RST_);
     63a:	80 81       	ld	r24, Z
     63c:	80 64       	ori	r24, 0x40	; 64
     63e:	80 83       	st	Z, r24
	
	//Resets all values
	ctrl_reset();
     640:	e4 df       	rcall	.-56     	; 0x60a <ctrl_reset>
	
	//Activate timer for regulating
	timer2560_init();
     642:	c6 d0       	rcall	.+396    	; 0x7d0 <timer2560_init>
	
	//Activate DAC for controlling motor
	DAC_init();
     644:	10 df       	rcall	.-480    	; 0x466 <DAC_init>
	
	//Activate PA0 output
	DDRA |= (1 << SOL_PIN);
     646:	08 9a       	sbi	0x01, 0	; 1
	PORTA |= (1 << SOL_PIN);
     648:	10 9a       	sbi	0x02, 0	; 2
     64a:	08 95       	ret

0000064c <ctrl_apply_voltage>:
}

void ctrl_apply_voltage(int v)
{
	//Switch direction of motor
	if (v < 0)
     64c:	99 23       	and	r25, r25
     64e:	4c f4       	brge	.+18     	; 0x662 <ctrl_apply_voltage+0x16>
	{
		PORTH |= (1 << DIR);
     650:	e2 e0       	ldi	r30, 0x02	; 2
     652:	f1 e0       	ldi	r31, 0x01	; 1
     654:	20 81       	ld	r18, Z
     656:	22 60       	ori	r18, 0x02	; 2
     658:	20 83       	st	Z, r18
		v *= -1;
     65a:	91 95       	neg	r25
     65c:	81 95       	neg	r24
     65e:	91 09       	sbc	r25, r1
     660:	05 c0       	rjmp	.+10     	; 0x66c <ctrl_apply_voltage+0x20>
	}
	else
	{
		PORTH &= ~(1 << DIR);
     662:	e2 e0       	ldi	r30, 0x02	; 2
     664:	f1 e0       	ldi	r31, 0x01	; 1
     666:	20 81       	ld	r18, Z
     668:	2d 7f       	andi	r18, 0xFD	; 253
     66a:	20 83       	st	Z, r18
	}
	
	DAC_write_bin(v);
     66c:	01 cf       	rjmp	.-510    	; 0x470 <DAC_write_bin>
     66e:	08 95       	ret

00000670 <ctrl_regulate>:
	return -encoder_val;
	
}

void ctrl_regulate()
{	
     670:	8f 92       	push	r8
     672:	9f 92       	push	r9
     674:	af 92       	push	r10
     676:	bf 92       	push	r11
     678:	cf 92       	push	r12
     67a:	df 92       	push	r13
     67c:	ef 92       	push	r14
     67e:	ff 92       	push	r15
	//Measure velocity
	curr_vel = ctrl_read_encoder();
     680:	91 df       	rcall	.-222    	; 0x5a4 <ctrl_read_encoder>
     682:	90 93 80 02 	sts	0x0280, r25
     686:	80 93 7f 02 	sts	0x027F, r24
	
	//Calculate error
	curr_error = CONTROLLER_DT*curr_vel - ref_vel;
     68a:	60 91 7f 02 	lds	r22, 0x027F
     68e:	70 91 80 02 	lds	r23, 0x0280
     692:	a0 90 85 02 	lds	r10, 0x0285
     696:	b0 90 86 02 	lds	r11, 0x0286
     69a:	88 27       	eor	r24, r24
     69c:	77 fd       	sbrc	r23, 7
     69e:	80 95       	com	r24
     6a0:	98 2f       	mov	r25, r24
     6a2:	88 d2       	rcall	.+1296   	; 0xbb4 <__floatsisf>
     6a4:	2d ec       	ldi	r18, 0xCD	; 205
     6a6:	3c ec       	ldi	r19, 0xCC	; 204
     6a8:	4c e4       	ldi	r20, 0x4C	; 76
     6aa:	5d e3       	ldi	r21, 0x3D	; 61
     6ac:	0f d3       	rcall	.+1566   	; 0xccc <__mulsf3>
     6ae:	6b 01       	movw	r12, r22
     6b0:	7c 01       	movw	r14, r24
     6b2:	b5 01       	movw	r22, r10
     6b4:	88 27       	eor	r24, r24
     6b6:	77 fd       	sbrc	r23, 7
     6b8:	80 95       	com	r24
     6ba:	98 2f       	mov	r25, r24
     6bc:	7b d2       	rcall	.+1270   	; 0xbb4 <__floatsisf>
     6be:	9b 01       	movw	r18, r22
     6c0:	ac 01       	movw	r20, r24
     6c2:	c7 01       	movw	r24, r14
     6c4:	b6 01       	movw	r22, r12
     6c6:	de d1       	rcall	.+956    	; 0xa84 <__subsf3>
     6c8:	42 d2       	rcall	.+1156   	; 0xb4e <__fixsfsi>
     6ca:	70 93 7e 02 	sts	0x027E, r23
     6ce:	60 93 7d 02 	sts	0x027D, r22
	
	//Update error sum
	error_sum += CONTROLLER_DT * curr_error;
     6d2:	60 91 7d 02 	lds	r22, 0x027D
     6d6:	70 91 7e 02 	lds	r23, 0x027E
     6da:	c0 90 81 02 	lds	r12, 0x0281
     6de:	d0 90 82 02 	lds	r13, 0x0282
     6e2:	e0 90 83 02 	lds	r14, 0x0283
     6e6:	f0 90 84 02 	lds	r15, 0x0284
     6ea:	88 27       	eor	r24, r24
     6ec:	77 fd       	sbrc	r23, 7
     6ee:	80 95       	com	r24
     6f0:	98 2f       	mov	r25, r24
     6f2:	60 d2       	rcall	.+1216   	; 0xbb4 <__floatsisf>
     6f4:	2d ec       	ldi	r18, 0xCD	; 205
     6f6:	3c ec       	ldi	r19, 0xCC	; 204
     6f8:	4c e4       	ldi	r20, 0x4C	; 76
     6fa:	5d e3       	ldi	r21, 0x3D	; 61
     6fc:	e7 d2       	rcall	.+1486   	; 0xccc <__mulsf3>
     6fe:	a7 01       	movw	r20, r14
     700:	96 01       	movw	r18, r12
     702:	c1 d1       	rcall	.+898    	; 0xa86 <__addsf3>
     704:	60 93 81 02 	sts	0x0281, r22
     708:	70 93 82 02 	sts	0x0282, r23
     70c:	80 93 83 02 	sts	0x0283, r24
     710:	90 93 84 02 	sts	0x0284, r25
	
	//Calculate voltage
	curr_u = KP*curr_error + KI*error_sum;
     714:	60 91 7d 02 	lds	r22, 0x027D
     718:	70 91 7e 02 	lds	r23, 0x027E
     71c:	80 90 81 02 	lds	r8, 0x0281
     720:	90 90 82 02 	lds	r9, 0x0282
     724:	a0 90 83 02 	lds	r10, 0x0283
     728:	b0 90 84 02 	lds	r11, 0x0284
     72c:	88 27       	eor	r24, r24
     72e:	77 fd       	sbrc	r23, 7
     730:	80 95       	com	r24
     732:	98 2f       	mov	r25, r24
     734:	3f d2       	rcall	.+1150   	; 0xbb4 <__floatsisf>
     736:	20 e0       	ldi	r18, 0x00	; 0
     738:	30 e0       	ldi	r19, 0x00	; 0
     73a:	40 ef       	ldi	r20, 0xF0	; 240
     73c:	50 e4       	ldi	r21, 0x40	; 64
     73e:	c6 d2       	rcall	.+1420   	; 0xccc <__mulsf3>
     740:	6b 01       	movw	r12, r22
     742:	7c 01       	movw	r14, r24
     744:	2d ec       	ldi	r18, 0xCD	; 205
     746:	3c ec       	ldi	r19, 0xCC	; 204
     748:	4c ec       	ldi	r20, 0xCC	; 204
     74a:	5e e3       	ldi	r21, 0x3E	; 62
     74c:	c5 01       	movw	r24, r10
     74e:	b4 01       	movw	r22, r8
     750:	bd d2       	rcall	.+1402   	; 0xccc <__mulsf3>
     752:	9b 01       	movw	r18, r22
     754:	ac 01       	movw	r20, r24
     756:	c7 01       	movw	r24, r14
     758:	b6 01       	movw	r22, r12
     75a:	95 d1       	rcall	.+810    	; 0xa86 <__addsf3>
     75c:	f8 d1       	rcall	.+1008   	; 0xb4e <__fixsfsi>
     75e:	70 93 7c 02 	sts	0x027C, r23
     762:	60 93 7b 02 	sts	0x027B, r22
	
	//Limit u
	if (curr_u > 255) curr_u = 255;
     766:	80 91 7b 02 	lds	r24, 0x027B
     76a:	90 91 7c 02 	lds	r25, 0x027C
     76e:	8f 3f       	cpi	r24, 0xFF	; 255
     770:	91 05       	cpc	r25, r1
     772:	39 f0       	breq	.+14     	; 0x782 <ctrl_regulate+0x112>
     774:	34 f0       	brlt	.+12     	; 0x782 <ctrl_regulate+0x112>
     776:	8f ef       	ldi	r24, 0xFF	; 255
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	90 93 7c 02 	sts	0x027C, r25
     77e:	80 93 7b 02 	sts	0x027B, r24
	if (curr_u < -255) curr_u = -255;
     782:	80 91 7b 02 	lds	r24, 0x027B
     786:	90 91 7c 02 	lds	r25, 0x027C
     78a:	81 30       	cpi	r24, 0x01	; 1
     78c:	9f 4f       	sbci	r25, 0xFF	; 255
     78e:	34 f4       	brge	.+12     	; 0x79c <ctrl_regulate+0x12c>
     790:	81 e0       	ldi	r24, 0x01	; 1
     792:	9f ef       	ldi	r25, 0xFF	; 255
     794:	90 93 7c 02 	sts	0x027C, r25
     798:	80 93 7b 02 	sts	0x027B, r24
	
	//Apply 
	ctrl_apply_voltage(curr_u);
     79c:	80 91 7b 02 	lds	r24, 0x027B
     7a0:	90 91 7c 02 	lds	r25, 0x027C
     7a4:	53 df       	rcall	.-346    	; 0x64c <ctrl_apply_voltage>
	
}
     7a6:	ff 90       	pop	r15
     7a8:	ef 90       	pop	r14
     7aa:	df 90       	pop	r13
     7ac:	cf 90       	pop	r12
     7ae:	bf 90       	pop	r11
     7b0:	af 90       	pop	r10
     7b2:	9f 90       	pop	r9
     7b4:	8f 90       	pop	r8
     7b6:	08 95       	ret

000007b8 <ctrl_fire_sol>:
}

void ctrl_fire_sol()
{
	
	PORTA &= ~(1 << SOL_PIN);
     7b8:	10 98       	cbi	0x02, 0	; 2
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7ba:	2f ef       	ldi	r18, 0xFF	; 255
     7bc:	81 ee       	ldi	r24, 0xE1	; 225
     7be:	94 e0       	ldi	r25, 0x04	; 4
     7c0:	21 50       	subi	r18, 0x01	; 1
     7c2:	80 40       	sbci	r24, 0x00	; 0
     7c4:	90 40       	sbci	r25, 0x00	; 0
     7c6:	e1 f7       	brne	.-8      	; 0x7c0 <ctrl_fire_sol+0x8>
     7c8:	00 c0       	rjmp	.+0      	; 0x7ca <ctrl_fire_sol+0x12>
     7ca:	00 00       	nop
	_delay_ms(100);
	PORTA |= (1 << SOL_PIN);
     7cc:	10 9a       	sbi	0x02, 0	; 2
     7ce:	08 95       	ret

000007d0 <timer2560_init>:
#include <avr/interrupt.h>

int timer2560_init()
{
	
	TCCR3A |= (1 << WGM31) | (0 << WGM30); //ENABLE CTC MODE
     7d0:	e0 e9       	ldi	r30, 0x90	; 144
     7d2:	f0 e0       	ldi	r31, 0x00	; 0
     7d4:	80 81       	ld	r24, Z
     7d6:	82 60       	ori	r24, 0x02	; 2
     7d8:	80 83       	st	Z, r24
	TCCR3B |= (1 << WGM32) | (0 << WGM33); //ENABLE CTC MODE
     7da:	e1 e9       	ldi	r30, 0x91	; 145
     7dc:	f0 e0       	ldi	r31, 0x00	; 0
     7de:	80 81       	ld	r24, Z
     7e0:	88 60       	ori	r24, 0x08	; 8
     7e2:	80 83       	st	Z, r24
	
	TCCR3B |= (3 << CS30);  //Prescaler at 64
     7e4:	80 81       	ld	r24, Z
     7e6:	83 60       	ori	r24, 0x03	; 3
     7e8:	80 83       	st	Z, r24
	
	OCR3A = (F_CPU/64) * CONTROLLER_DT; //Sets compare value according to controller DT 
     7ea:	84 ed       	ldi	r24, 0xD4	; 212
     7ec:	90 e3       	ldi	r25, 0x30	; 48
     7ee:	90 93 99 00 	sts	0x0099, r25
     7f2:	80 93 98 00 	sts	0x0098, r24
	
	TIMSK3 = (1 << OCIE3A); //Enable interrupt
     7f6:	82 e0       	ldi	r24, 0x02	; 2
     7f8:	80 93 71 00 	sts	0x0071, r24
	
	return 0;
}
     7fc:	80 e0       	ldi	r24, 0x00	; 0
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	08 95       	ret

00000802 <__vector_32>:

//Enables interrupt vector, regulates when timer goes off
ISR(TIMER3_COMPA_vect)
{
     802:	1f 92       	push	r1
     804:	0f 92       	push	r0
     806:	0f b6       	in	r0, 0x3f	; 63
     808:	0f 92       	push	r0
     80a:	11 24       	eor	r1, r1
     80c:	0b b6       	in	r0, 0x3b	; 59
     80e:	0f 92       	push	r0
     810:	2f 93       	push	r18
     812:	3f 93       	push	r19
     814:	4f 93       	push	r20
     816:	5f 93       	push	r21
     818:	6f 93       	push	r22
     81a:	7f 93       	push	r23
     81c:	8f 93       	push	r24
     81e:	9f 93       	push	r25
     820:	af 93       	push	r26
     822:	bf 93       	push	r27
     824:	ef 93       	push	r30
     826:	ff 93       	push	r31
	//printf("%d, %d ",OCR3A,TCNT3);
	ctrl_regulate();
     828:	23 df       	rcall	.-442    	; 0x670 <ctrl_regulate>
	//printf("Test\n");
}
     82a:	ff 91       	pop	r31
     82c:	ef 91       	pop	r30
     82e:	bf 91       	pop	r27
     830:	af 91       	pop	r26
     832:	9f 91       	pop	r25
     834:	8f 91       	pop	r24
     836:	7f 91       	pop	r23
     838:	6f 91       	pop	r22
     83a:	5f 91       	pop	r21
     83c:	4f 91       	pop	r20
     83e:	3f 91       	pop	r19
     840:	2f 91       	pop	r18
     842:	0f 90       	pop	r0
     844:	0b be       	out	0x3b, r0	; 59
     846:	0f 90       	pop	r0
     848:	0f be       	out	0x3f, r0	; 63
     84a:	0f 90       	pop	r0
     84c:	1f 90       	pop	r1
     84e:	18 95       	reti

00000850 <TWI_Master_Initialise>:
     850:	8c e0       	ldi	r24, 0x0C	; 12
     852:	80 93 b8 00 	sts	0x00B8, r24
     856:	8f ef       	ldi	r24, 0xFF	; 255
     858:	80 93 bb 00 	sts	0x00BB, r24
     85c:	84 e0       	ldi	r24, 0x04	; 4
     85e:	80 93 bc 00 	sts	0x00BC, r24
     862:	08 95       	ret

00000864 <TWI_Start_Transceiver_With_Data>:
     864:	ec eb       	ldi	r30, 0xBC	; 188
     866:	f0 e0       	ldi	r31, 0x00	; 0
     868:	20 81       	ld	r18, Z
     86a:	20 fd       	sbrc	r18, 0
     86c:	fd cf       	rjmp	.-6      	; 0x868 <TWI_Start_Transceiver_With_Data+0x4>
     86e:	60 93 76 02 	sts	0x0276, r22
     872:	fc 01       	movw	r30, r24
     874:	20 81       	ld	r18, Z
     876:	20 93 77 02 	sts	0x0277, r18
     87a:	20 fd       	sbrc	r18, 0
     87c:	0c c0       	rjmp	.+24     	; 0x896 <TWI_Start_Transceiver_With_Data+0x32>
     87e:	62 30       	cpi	r22, 0x02	; 2
     880:	50 f0       	brcs	.+20     	; 0x896 <TWI_Start_Transceiver_With_Data+0x32>
     882:	dc 01       	movw	r26, r24
     884:	11 96       	adiw	r26, 0x01	; 1
     886:	e8 e7       	ldi	r30, 0x78	; 120
     888:	f2 e0       	ldi	r31, 0x02	; 2
     88a:	81 e0       	ldi	r24, 0x01	; 1
     88c:	9d 91       	ld	r25, X+
     88e:	91 93       	st	Z+, r25
     890:	8f 5f       	subi	r24, 0xFF	; 255
     892:	86 13       	cpse	r24, r22
     894:	fb cf       	rjmp	.-10     	; 0x88c <TWI_Start_Transceiver_With_Data+0x28>
     896:	10 92 75 02 	sts	0x0275, r1
     89a:	88 ef       	ldi	r24, 0xF8	; 248
     89c:	80 93 0e 02 	sts	0x020E, r24
     8a0:	85 ea       	ldi	r24, 0xA5	; 165
     8a2:	80 93 bc 00 	sts	0x00BC, r24
     8a6:	08 95       	ret

000008a8 <__vector_39>:
     8a8:	1f 92       	push	r1
     8aa:	0f 92       	push	r0
     8ac:	0f b6       	in	r0, 0x3f	; 63
     8ae:	0f 92       	push	r0
     8b0:	11 24       	eor	r1, r1
     8b2:	0b b6       	in	r0, 0x3b	; 59
     8b4:	0f 92       	push	r0
     8b6:	2f 93       	push	r18
     8b8:	3f 93       	push	r19
     8ba:	8f 93       	push	r24
     8bc:	9f 93       	push	r25
     8be:	af 93       	push	r26
     8c0:	bf 93       	push	r27
     8c2:	ef 93       	push	r30
     8c4:	ff 93       	push	r31
     8c6:	80 91 b9 00 	lds	r24, 0x00B9
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	fc 01       	movw	r30, r24
     8ce:	38 97       	sbiw	r30, 0x08	; 8
     8d0:	e1 35       	cpi	r30, 0x51	; 81
     8d2:	f1 05       	cpc	r31, r1
     8d4:	08 f0       	brcs	.+2      	; 0x8d8 <__vector_39+0x30>
     8d6:	55 c0       	rjmp	.+170    	; 0x982 <__vector_39+0xda>
     8d8:	ee 58       	subi	r30, 0x8E	; 142
     8da:	ff 4f       	sbci	r31, 0xFF	; 255
     8dc:	97 c0       	rjmp	.+302    	; 0xa0c <__tablejump2__>
     8de:	10 92 74 02 	sts	0x0274, r1
     8e2:	e0 91 74 02 	lds	r30, 0x0274
     8e6:	80 91 76 02 	lds	r24, 0x0276
     8ea:	e8 17       	cp	r30, r24
     8ec:	70 f4       	brcc	.+28     	; 0x90a <__vector_39+0x62>
     8ee:	81 e0       	ldi	r24, 0x01	; 1
     8f0:	8e 0f       	add	r24, r30
     8f2:	80 93 74 02 	sts	0x0274, r24
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	e9 58       	subi	r30, 0x89	; 137
     8fa:	fd 4f       	sbci	r31, 0xFD	; 253
     8fc:	80 81       	ld	r24, Z
     8fe:	80 93 bb 00 	sts	0x00BB, r24
     902:	85 e8       	ldi	r24, 0x85	; 133
     904:	80 93 bc 00 	sts	0x00BC, r24
     908:	43 c0       	rjmp	.+134    	; 0x990 <__vector_39+0xe8>
     90a:	80 91 75 02 	lds	r24, 0x0275
     90e:	81 60       	ori	r24, 0x01	; 1
     910:	80 93 75 02 	sts	0x0275, r24
     914:	84 e9       	ldi	r24, 0x94	; 148
     916:	80 93 bc 00 	sts	0x00BC, r24
     91a:	3a c0       	rjmp	.+116    	; 0x990 <__vector_39+0xe8>
     91c:	e0 91 74 02 	lds	r30, 0x0274
     920:	81 e0       	ldi	r24, 0x01	; 1
     922:	8e 0f       	add	r24, r30
     924:	80 93 74 02 	sts	0x0274, r24
     928:	80 91 bb 00 	lds	r24, 0x00BB
     92c:	f0 e0       	ldi	r31, 0x00	; 0
     92e:	e9 58       	subi	r30, 0x89	; 137
     930:	fd 4f       	sbci	r31, 0xFD	; 253
     932:	80 83       	st	Z, r24
     934:	20 91 74 02 	lds	r18, 0x0274
     938:	30 e0       	ldi	r19, 0x00	; 0
     93a:	80 91 76 02 	lds	r24, 0x0276
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	01 97       	sbiw	r24, 0x01	; 1
     942:	28 17       	cp	r18, r24
     944:	39 07       	cpc	r19, r25
     946:	24 f4       	brge	.+8      	; 0x950 <__vector_39+0xa8>
     948:	85 ec       	ldi	r24, 0xC5	; 197
     94a:	80 93 bc 00 	sts	0x00BC, r24
     94e:	20 c0       	rjmp	.+64     	; 0x990 <__vector_39+0xe8>
     950:	85 e8       	ldi	r24, 0x85	; 133
     952:	80 93 bc 00 	sts	0x00BC, r24
     956:	1c c0       	rjmp	.+56     	; 0x990 <__vector_39+0xe8>
     958:	80 91 bb 00 	lds	r24, 0x00BB
     95c:	e0 91 74 02 	lds	r30, 0x0274
     960:	f0 e0       	ldi	r31, 0x00	; 0
     962:	e9 58       	subi	r30, 0x89	; 137
     964:	fd 4f       	sbci	r31, 0xFD	; 253
     966:	80 83       	st	Z, r24
     968:	80 91 75 02 	lds	r24, 0x0275
     96c:	81 60       	ori	r24, 0x01	; 1
     96e:	80 93 75 02 	sts	0x0275, r24
     972:	84 e9       	ldi	r24, 0x94	; 148
     974:	80 93 bc 00 	sts	0x00BC, r24
     978:	0b c0       	rjmp	.+22     	; 0x990 <__vector_39+0xe8>
     97a:	85 ea       	ldi	r24, 0xA5	; 165
     97c:	80 93 bc 00 	sts	0x00BC, r24
     980:	07 c0       	rjmp	.+14     	; 0x990 <__vector_39+0xe8>
     982:	80 91 b9 00 	lds	r24, 0x00B9
     986:	80 93 0e 02 	sts	0x020E, r24
     98a:	84 e0       	ldi	r24, 0x04	; 4
     98c:	80 93 bc 00 	sts	0x00BC, r24
     990:	ff 91       	pop	r31
     992:	ef 91       	pop	r30
     994:	bf 91       	pop	r27
     996:	af 91       	pop	r26
     998:	9f 91       	pop	r25
     99a:	8f 91       	pop	r24
     99c:	3f 91       	pop	r19
     99e:	2f 91       	pop	r18
     9a0:	0f 90       	pop	r0
     9a2:	0b be       	out	0x3b, r0	; 59
     9a4:	0f 90       	pop	r0
     9a6:	0f be       	out	0x3f, r0	; 63
     9a8:	0f 90       	pop	r0
     9aa:	1f 90       	pop	r1
     9ac:	18 95       	reti

000009ae <__divmodhi4>:
     9ae:	97 fb       	bst	r25, 7
     9b0:	07 2e       	mov	r0, r23
     9b2:	16 f4       	brtc	.+4      	; 0x9b8 <__divmodhi4+0xa>
     9b4:	00 94       	com	r0
     9b6:	06 d0       	rcall	.+12     	; 0x9c4 <__divmodhi4_neg1>
     9b8:	77 fd       	sbrc	r23, 7
     9ba:	08 d0       	rcall	.+16     	; 0x9cc <__divmodhi4_neg2>
     9bc:	2d d0       	rcall	.+90     	; 0xa18 <__udivmodhi4>
     9be:	07 fc       	sbrc	r0, 7
     9c0:	05 d0       	rcall	.+10     	; 0x9cc <__divmodhi4_neg2>
     9c2:	3e f4       	brtc	.+14     	; 0x9d2 <__divmodhi4_exit>

000009c4 <__divmodhi4_neg1>:
     9c4:	90 95       	com	r25
     9c6:	81 95       	neg	r24
     9c8:	9f 4f       	sbci	r25, 0xFF	; 255
     9ca:	08 95       	ret

000009cc <__divmodhi4_neg2>:
     9cc:	70 95       	com	r23
     9ce:	61 95       	neg	r22
     9d0:	7f 4f       	sbci	r23, 0xFF	; 255

000009d2 <__divmodhi4_exit>:
     9d2:	08 95       	ret

000009d4 <__divmodsi4>:
     9d4:	05 2e       	mov	r0, r21
     9d6:	97 fb       	bst	r25, 7
     9d8:	16 f4       	brtc	.+4      	; 0x9de <__divmodsi4+0xa>
     9da:	00 94       	com	r0
     9dc:	0f d0       	rcall	.+30     	; 0x9fc <__negsi2>
     9de:	57 fd       	sbrc	r21, 7
     9e0:	05 d0       	rcall	.+10     	; 0x9ec <__divmodsi4_neg2>
     9e2:	2e d0       	rcall	.+92     	; 0xa40 <__udivmodsi4>
     9e4:	07 fc       	sbrc	r0, 7
     9e6:	02 d0       	rcall	.+4      	; 0x9ec <__divmodsi4_neg2>
     9e8:	46 f4       	brtc	.+16     	; 0x9fa <__divmodsi4_exit>
     9ea:	08 c0       	rjmp	.+16     	; 0x9fc <__negsi2>

000009ec <__divmodsi4_neg2>:
     9ec:	50 95       	com	r21
     9ee:	40 95       	com	r20
     9f0:	30 95       	com	r19
     9f2:	21 95       	neg	r18
     9f4:	3f 4f       	sbci	r19, 0xFF	; 255
     9f6:	4f 4f       	sbci	r20, 0xFF	; 255
     9f8:	5f 4f       	sbci	r21, 0xFF	; 255

000009fa <__divmodsi4_exit>:
     9fa:	08 95       	ret

000009fc <__negsi2>:
     9fc:	90 95       	com	r25
     9fe:	80 95       	com	r24
     a00:	70 95       	com	r23
     a02:	61 95       	neg	r22
     a04:	7f 4f       	sbci	r23, 0xFF	; 255
     a06:	8f 4f       	sbci	r24, 0xFF	; 255
     a08:	9f 4f       	sbci	r25, 0xFF	; 255
     a0a:	08 95       	ret

00000a0c <__tablejump2__>:
     a0c:	ee 0f       	add	r30, r30
     a0e:	ff 1f       	adc	r31, r31

00000a10 <__tablejump__>:
     a10:	05 90       	lpm	r0, Z+
     a12:	f4 91       	lpm	r31, Z
     a14:	e0 2d       	mov	r30, r0
     a16:	19 94       	eijmp

00000a18 <__udivmodhi4>:
     a18:	aa 1b       	sub	r26, r26
     a1a:	bb 1b       	sub	r27, r27
     a1c:	51 e1       	ldi	r21, 0x11	; 17
     a1e:	07 c0       	rjmp	.+14     	; 0xa2e <__udivmodhi4_ep>

00000a20 <__udivmodhi4_loop>:
     a20:	aa 1f       	adc	r26, r26
     a22:	bb 1f       	adc	r27, r27
     a24:	a6 17       	cp	r26, r22
     a26:	b7 07       	cpc	r27, r23
     a28:	10 f0       	brcs	.+4      	; 0xa2e <__udivmodhi4_ep>
     a2a:	a6 1b       	sub	r26, r22
     a2c:	b7 0b       	sbc	r27, r23

00000a2e <__udivmodhi4_ep>:
     a2e:	88 1f       	adc	r24, r24
     a30:	99 1f       	adc	r25, r25
     a32:	5a 95       	dec	r21
     a34:	a9 f7       	brne	.-22     	; 0xa20 <__udivmodhi4_loop>
     a36:	80 95       	com	r24
     a38:	90 95       	com	r25
     a3a:	bc 01       	movw	r22, r24
     a3c:	cd 01       	movw	r24, r26
     a3e:	08 95       	ret

00000a40 <__udivmodsi4>:
     a40:	a1 e2       	ldi	r26, 0x21	; 33
     a42:	1a 2e       	mov	r1, r26
     a44:	aa 1b       	sub	r26, r26
     a46:	bb 1b       	sub	r27, r27
     a48:	fd 01       	movw	r30, r26
     a4a:	0d c0       	rjmp	.+26     	; 0xa66 <__udivmodsi4_ep>

00000a4c <__udivmodsi4_loop>:
     a4c:	aa 1f       	adc	r26, r26
     a4e:	bb 1f       	adc	r27, r27
     a50:	ee 1f       	adc	r30, r30
     a52:	ff 1f       	adc	r31, r31
     a54:	a2 17       	cp	r26, r18
     a56:	b3 07       	cpc	r27, r19
     a58:	e4 07       	cpc	r30, r20
     a5a:	f5 07       	cpc	r31, r21
     a5c:	20 f0       	brcs	.+8      	; 0xa66 <__udivmodsi4_ep>
     a5e:	a2 1b       	sub	r26, r18
     a60:	b3 0b       	sbc	r27, r19
     a62:	e4 0b       	sbc	r30, r20
     a64:	f5 0b       	sbc	r31, r21

00000a66 <__udivmodsi4_ep>:
     a66:	66 1f       	adc	r22, r22
     a68:	77 1f       	adc	r23, r23
     a6a:	88 1f       	adc	r24, r24
     a6c:	99 1f       	adc	r25, r25
     a6e:	1a 94       	dec	r1
     a70:	69 f7       	brne	.-38     	; 0xa4c <__udivmodsi4_loop>
     a72:	60 95       	com	r22
     a74:	70 95       	com	r23
     a76:	80 95       	com	r24
     a78:	90 95       	com	r25
     a7a:	9b 01       	movw	r18, r22
     a7c:	ac 01       	movw	r20, r24
     a7e:	bd 01       	movw	r22, r26
     a80:	cf 01       	movw	r24, r30
     a82:	08 95       	ret

00000a84 <__subsf3>:
     a84:	50 58       	subi	r21, 0x80	; 128

00000a86 <__addsf3>:
     a86:	bb 27       	eor	r27, r27
     a88:	aa 27       	eor	r26, r26
     a8a:	0e d0       	rcall	.+28     	; 0xaa8 <__addsf3x>
     a8c:	e5 c0       	rjmp	.+458    	; 0xc58 <__fp_round>
     a8e:	d6 d0       	rcall	.+428    	; 0xc3c <__fp_pscA>
     a90:	30 f0       	brcs	.+12     	; 0xa9e <__addsf3+0x18>
     a92:	db d0       	rcall	.+438    	; 0xc4a <__fp_pscB>
     a94:	20 f0       	brcs	.+8      	; 0xa9e <__addsf3+0x18>
     a96:	31 f4       	brne	.+12     	; 0xaa4 <__addsf3+0x1e>
     a98:	9f 3f       	cpi	r25, 0xFF	; 255
     a9a:	11 f4       	brne	.+4      	; 0xaa0 <__addsf3+0x1a>
     a9c:	1e f4       	brtc	.+6      	; 0xaa4 <__addsf3+0x1e>
     a9e:	cb c0       	rjmp	.+406    	; 0xc36 <__fp_nan>
     aa0:	0e f4       	brtc	.+2      	; 0xaa4 <__addsf3+0x1e>
     aa2:	e0 95       	com	r30
     aa4:	e7 fb       	bst	r30, 7
     aa6:	c1 c0       	rjmp	.+386    	; 0xc2a <__fp_inf>

00000aa8 <__addsf3x>:
     aa8:	e9 2f       	mov	r30, r25
     aaa:	e7 d0       	rcall	.+462    	; 0xc7a <__fp_split3>
     aac:	80 f3       	brcs	.-32     	; 0xa8e <__addsf3+0x8>
     aae:	ba 17       	cp	r27, r26
     ab0:	62 07       	cpc	r22, r18
     ab2:	73 07       	cpc	r23, r19
     ab4:	84 07       	cpc	r24, r20
     ab6:	95 07       	cpc	r25, r21
     ab8:	18 f0       	brcs	.+6      	; 0xac0 <__addsf3x+0x18>
     aba:	71 f4       	brne	.+28     	; 0xad8 <__addsf3x+0x30>
     abc:	9e f5       	brtc	.+102    	; 0xb24 <__addsf3x+0x7c>
     abe:	ff c0       	rjmp	.+510    	; 0xcbe <__fp_zero>
     ac0:	0e f4       	brtc	.+2      	; 0xac4 <__addsf3x+0x1c>
     ac2:	e0 95       	com	r30
     ac4:	0b 2e       	mov	r0, r27
     ac6:	ba 2f       	mov	r27, r26
     ac8:	a0 2d       	mov	r26, r0
     aca:	0b 01       	movw	r0, r22
     acc:	b9 01       	movw	r22, r18
     ace:	90 01       	movw	r18, r0
     ad0:	0c 01       	movw	r0, r24
     ad2:	ca 01       	movw	r24, r20
     ad4:	a0 01       	movw	r20, r0
     ad6:	11 24       	eor	r1, r1
     ad8:	ff 27       	eor	r31, r31
     ada:	59 1b       	sub	r21, r25
     adc:	99 f0       	breq	.+38     	; 0xb04 <__addsf3x+0x5c>
     ade:	59 3f       	cpi	r21, 0xF9	; 249
     ae0:	50 f4       	brcc	.+20     	; 0xaf6 <__addsf3x+0x4e>
     ae2:	50 3e       	cpi	r21, 0xE0	; 224
     ae4:	68 f1       	brcs	.+90     	; 0xb40 <__addsf3x+0x98>
     ae6:	1a 16       	cp	r1, r26
     ae8:	f0 40       	sbci	r31, 0x00	; 0
     aea:	a2 2f       	mov	r26, r18
     aec:	23 2f       	mov	r18, r19
     aee:	34 2f       	mov	r19, r20
     af0:	44 27       	eor	r20, r20
     af2:	58 5f       	subi	r21, 0xF8	; 248
     af4:	f3 cf       	rjmp	.-26     	; 0xadc <__addsf3x+0x34>
     af6:	46 95       	lsr	r20
     af8:	37 95       	ror	r19
     afa:	27 95       	ror	r18
     afc:	a7 95       	ror	r26
     afe:	f0 40       	sbci	r31, 0x00	; 0
     b00:	53 95       	inc	r21
     b02:	c9 f7       	brne	.-14     	; 0xaf6 <__addsf3x+0x4e>
     b04:	7e f4       	brtc	.+30     	; 0xb24 <__addsf3x+0x7c>
     b06:	1f 16       	cp	r1, r31
     b08:	ba 0b       	sbc	r27, r26
     b0a:	62 0b       	sbc	r22, r18
     b0c:	73 0b       	sbc	r23, r19
     b0e:	84 0b       	sbc	r24, r20
     b10:	ba f0       	brmi	.+46     	; 0xb40 <__addsf3x+0x98>
     b12:	91 50       	subi	r25, 0x01	; 1
     b14:	a1 f0       	breq	.+40     	; 0xb3e <__addsf3x+0x96>
     b16:	ff 0f       	add	r31, r31
     b18:	bb 1f       	adc	r27, r27
     b1a:	66 1f       	adc	r22, r22
     b1c:	77 1f       	adc	r23, r23
     b1e:	88 1f       	adc	r24, r24
     b20:	c2 f7       	brpl	.-16     	; 0xb12 <__addsf3x+0x6a>
     b22:	0e c0       	rjmp	.+28     	; 0xb40 <__addsf3x+0x98>
     b24:	ba 0f       	add	r27, r26
     b26:	62 1f       	adc	r22, r18
     b28:	73 1f       	adc	r23, r19
     b2a:	84 1f       	adc	r24, r20
     b2c:	48 f4       	brcc	.+18     	; 0xb40 <__addsf3x+0x98>
     b2e:	87 95       	ror	r24
     b30:	77 95       	ror	r23
     b32:	67 95       	ror	r22
     b34:	b7 95       	ror	r27
     b36:	f7 95       	ror	r31
     b38:	9e 3f       	cpi	r25, 0xFE	; 254
     b3a:	08 f0       	brcs	.+2      	; 0xb3e <__addsf3x+0x96>
     b3c:	b3 cf       	rjmp	.-154    	; 0xaa4 <__addsf3+0x1e>
     b3e:	93 95       	inc	r25
     b40:	88 0f       	add	r24, r24
     b42:	08 f0       	brcs	.+2      	; 0xb46 <__addsf3x+0x9e>
     b44:	99 27       	eor	r25, r25
     b46:	ee 0f       	add	r30, r30
     b48:	97 95       	ror	r25
     b4a:	87 95       	ror	r24
     b4c:	08 95       	ret

00000b4e <__fixsfsi>:
     b4e:	04 d0       	rcall	.+8      	; 0xb58 <__fixunssfsi>
     b50:	68 94       	set
     b52:	b1 11       	cpse	r27, r1
     b54:	b5 c0       	rjmp	.+362    	; 0xcc0 <__fp_szero>
     b56:	08 95       	ret

00000b58 <__fixunssfsi>:
     b58:	98 d0       	rcall	.+304    	; 0xc8a <__fp_splitA>
     b5a:	88 f0       	brcs	.+34     	; 0xb7e <__fixunssfsi+0x26>
     b5c:	9f 57       	subi	r25, 0x7F	; 127
     b5e:	90 f0       	brcs	.+36     	; 0xb84 <__fixunssfsi+0x2c>
     b60:	b9 2f       	mov	r27, r25
     b62:	99 27       	eor	r25, r25
     b64:	b7 51       	subi	r27, 0x17	; 23
     b66:	a0 f0       	brcs	.+40     	; 0xb90 <__fixunssfsi+0x38>
     b68:	d1 f0       	breq	.+52     	; 0xb9e <__fixunssfsi+0x46>
     b6a:	66 0f       	add	r22, r22
     b6c:	77 1f       	adc	r23, r23
     b6e:	88 1f       	adc	r24, r24
     b70:	99 1f       	adc	r25, r25
     b72:	1a f0       	brmi	.+6      	; 0xb7a <__fixunssfsi+0x22>
     b74:	ba 95       	dec	r27
     b76:	c9 f7       	brne	.-14     	; 0xb6a <__fixunssfsi+0x12>
     b78:	12 c0       	rjmp	.+36     	; 0xb9e <__fixunssfsi+0x46>
     b7a:	b1 30       	cpi	r27, 0x01	; 1
     b7c:	81 f0       	breq	.+32     	; 0xb9e <__fixunssfsi+0x46>
     b7e:	9f d0       	rcall	.+318    	; 0xcbe <__fp_zero>
     b80:	b1 e0       	ldi	r27, 0x01	; 1
     b82:	08 95       	ret
     b84:	9c c0       	rjmp	.+312    	; 0xcbe <__fp_zero>
     b86:	67 2f       	mov	r22, r23
     b88:	78 2f       	mov	r23, r24
     b8a:	88 27       	eor	r24, r24
     b8c:	b8 5f       	subi	r27, 0xF8	; 248
     b8e:	39 f0       	breq	.+14     	; 0xb9e <__fixunssfsi+0x46>
     b90:	b9 3f       	cpi	r27, 0xF9	; 249
     b92:	cc f3       	brlt	.-14     	; 0xb86 <__fixunssfsi+0x2e>
     b94:	86 95       	lsr	r24
     b96:	77 95       	ror	r23
     b98:	67 95       	ror	r22
     b9a:	b3 95       	inc	r27
     b9c:	d9 f7       	brne	.-10     	; 0xb94 <__fixunssfsi+0x3c>
     b9e:	3e f4       	brtc	.+14     	; 0xbae <__fixunssfsi+0x56>
     ba0:	90 95       	com	r25
     ba2:	80 95       	com	r24
     ba4:	70 95       	com	r23
     ba6:	61 95       	neg	r22
     ba8:	7f 4f       	sbci	r23, 0xFF	; 255
     baa:	8f 4f       	sbci	r24, 0xFF	; 255
     bac:	9f 4f       	sbci	r25, 0xFF	; 255
     bae:	08 95       	ret

00000bb0 <__floatunsisf>:
     bb0:	e8 94       	clt
     bb2:	09 c0       	rjmp	.+18     	; 0xbc6 <__floatsisf+0x12>

00000bb4 <__floatsisf>:
     bb4:	97 fb       	bst	r25, 7
     bb6:	3e f4       	brtc	.+14     	; 0xbc6 <__floatsisf+0x12>
     bb8:	90 95       	com	r25
     bba:	80 95       	com	r24
     bbc:	70 95       	com	r23
     bbe:	61 95       	neg	r22
     bc0:	7f 4f       	sbci	r23, 0xFF	; 255
     bc2:	8f 4f       	sbci	r24, 0xFF	; 255
     bc4:	9f 4f       	sbci	r25, 0xFF	; 255
     bc6:	99 23       	and	r25, r25
     bc8:	a9 f0       	breq	.+42     	; 0xbf4 <__floatsisf+0x40>
     bca:	f9 2f       	mov	r31, r25
     bcc:	96 e9       	ldi	r25, 0x96	; 150
     bce:	bb 27       	eor	r27, r27
     bd0:	93 95       	inc	r25
     bd2:	f6 95       	lsr	r31
     bd4:	87 95       	ror	r24
     bd6:	77 95       	ror	r23
     bd8:	67 95       	ror	r22
     bda:	b7 95       	ror	r27
     bdc:	f1 11       	cpse	r31, r1
     bde:	f8 cf       	rjmp	.-16     	; 0xbd0 <__floatsisf+0x1c>
     be0:	fa f4       	brpl	.+62     	; 0xc20 <__floatsisf+0x6c>
     be2:	bb 0f       	add	r27, r27
     be4:	11 f4       	brne	.+4      	; 0xbea <__floatsisf+0x36>
     be6:	60 ff       	sbrs	r22, 0
     be8:	1b c0       	rjmp	.+54     	; 0xc20 <__floatsisf+0x6c>
     bea:	6f 5f       	subi	r22, 0xFF	; 255
     bec:	7f 4f       	sbci	r23, 0xFF	; 255
     bee:	8f 4f       	sbci	r24, 0xFF	; 255
     bf0:	9f 4f       	sbci	r25, 0xFF	; 255
     bf2:	16 c0       	rjmp	.+44     	; 0xc20 <__floatsisf+0x6c>
     bf4:	88 23       	and	r24, r24
     bf6:	11 f0       	breq	.+4      	; 0xbfc <__floatsisf+0x48>
     bf8:	96 e9       	ldi	r25, 0x96	; 150
     bfa:	11 c0       	rjmp	.+34     	; 0xc1e <__floatsisf+0x6a>
     bfc:	77 23       	and	r23, r23
     bfe:	21 f0       	breq	.+8      	; 0xc08 <__floatsisf+0x54>
     c00:	9e e8       	ldi	r25, 0x8E	; 142
     c02:	87 2f       	mov	r24, r23
     c04:	76 2f       	mov	r23, r22
     c06:	05 c0       	rjmp	.+10     	; 0xc12 <__floatsisf+0x5e>
     c08:	66 23       	and	r22, r22
     c0a:	71 f0       	breq	.+28     	; 0xc28 <__floatsisf+0x74>
     c0c:	96 e8       	ldi	r25, 0x86	; 134
     c0e:	86 2f       	mov	r24, r22
     c10:	70 e0       	ldi	r23, 0x00	; 0
     c12:	60 e0       	ldi	r22, 0x00	; 0
     c14:	2a f0       	brmi	.+10     	; 0xc20 <__floatsisf+0x6c>
     c16:	9a 95       	dec	r25
     c18:	66 0f       	add	r22, r22
     c1a:	77 1f       	adc	r23, r23
     c1c:	88 1f       	adc	r24, r24
     c1e:	da f7       	brpl	.-10     	; 0xc16 <__floatsisf+0x62>
     c20:	88 0f       	add	r24, r24
     c22:	96 95       	lsr	r25
     c24:	87 95       	ror	r24
     c26:	97 f9       	bld	r25, 7
     c28:	08 95       	ret

00000c2a <__fp_inf>:
     c2a:	97 f9       	bld	r25, 7
     c2c:	9f 67       	ori	r25, 0x7F	; 127
     c2e:	80 e8       	ldi	r24, 0x80	; 128
     c30:	70 e0       	ldi	r23, 0x00	; 0
     c32:	60 e0       	ldi	r22, 0x00	; 0
     c34:	08 95       	ret

00000c36 <__fp_nan>:
     c36:	9f ef       	ldi	r25, 0xFF	; 255
     c38:	80 ec       	ldi	r24, 0xC0	; 192
     c3a:	08 95       	ret

00000c3c <__fp_pscA>:
     c3c:	00 24       	eor	r0, r0
     c3e:	0a 94       	dec	r0
     c40:	16 16       	cp	r1, r22
     c42:	17 06       	cpc	r1, r23
     c44:	18 06       	cpc	r1, r24
     c46:	09 06       	cpc	r0, r25
     c48:	08 95       	ret

00000c4a <__fp_pscB>:
     c4a:	00 24       	eor	r0, r0
     c4c:	0a 94       	dec	r0
     c4e:	12 16       	cp	r1, r18
     c50:	13 06       	cpc	r1, r19
     c52:	14 06       	cpc	r1, r20
     c54:	05 06       	cpc	r0, r21
     c56:	08 95       	ret

00000c58 <__fp_round>:
     c58:	09 2e       	mov	r0, r25
     c5a:	03 94       	inc	r0
     c5c:	00 0c       	add	r0, r0
     c5e:	11 f4       	brne	.+4      	; 0xc64 <__fp_round+0xc>
     c60:	88 23       	and	r24, r24
     c62:	52 f0       	brmi	.+20     	; 0xc78 <__fp_round+0x20>
     c64:	bb 0f       	add	r27, r27
     c66:	40 f4       	brcc	.+16     	; 0xc78 <__fp_round+0x20>
     c68:	bf 2b       	or	r27, r31
     c6a:	11 f4       	brne	.+4      	; 0xc70 <__fp_round+0x18>
     c6c:	60 ff       	sbrs	r22, 0
     c6e:	04 c0       	rjmp	.+8      	; 0xc78 <__fp_round+0x20>
     c70:	6f 5f       	subi	r22, 0xFF	; 255
     c72:	7f 4f       	sbci	r23, 0xFF	; 255
     c74:	8f 4f       	sbci	r24, 0xFF	; 255
     c76:	9f 4f       	sbci	r25, 0xFF	; 255
     c78:	08 95       	ret

00000c7a <__fp_split3>:
     c7a:	57 fd       	sbrc	r21, 7
     c7c:	90 58       	subi	r25, 0x80	; 128
     c7e:	44 0f       	add	r20, r20
     c80:	55 1f       	adc	r21, r21
     c82:	59 f0       	breq	.+22     	; 0xc9a <__fp_splitA+0x10>
     c84:	5f 3f       	cpi	r21, 0xFF	; 255
     c86:	71 f0       	breq	.+28     	; 0xca4 <__fp_splitA+0x1a>
     c88:	47 95       	ror	r20

00000c8a <__fp_splitA>:
     c8a:	88 0f       	add	r24, r24
     c8c:	97 fb       	bst	r25, 7
     c8e:	99 1f       	adc	r25, r25
     c90:	61 f0       	breq	.+24     	; 0xcaa <__fp_splitA+0x20>
     c92:	9f 3f       	cpi	r25, 0xFF	; 255
     c94:	79 f0       	breq	.+30     	; 0xcb4 <__fp_splitA+0x2a>
     c96:	87 95       	ror	r24
     c98:	08 95       	ret
     c9a:	12 16       	cp	r1, r18
     c9c:	13 06       	cpc	r1, r19
     c9e:	14 06       	cpc	r1, r20
     ca0:	55 1f       	adc	r21, r21
     ca2:	f2 cf       	rjmp	.-28     	; 0xc88 <__fp_split3+0xe>
     ca4:	46 95       	lsr	r20
     ca6:	f1 df       	rcall	.-30     	; 0xc8a <__fp_splitA>
     ca8:	08 c0       	rjmp	.+16     	; 0xcba <__fp_splitA+0x30>
     caa:	16 16       	cp	r1, r22
     cac:	17 06       	cpc	r1, r23
     cae:	18 06       	cpc	r1, r24
     cb0:	99 1f       	adc	r25, r25
     cb2:	f1 cf       	rjmp	.-30     	; 0xc96 <__fp_splitA+0xc>
     cb4:	86 95       	lsr	r24
     cb6:	71 05       	cpc	r23, r1
     cb8:	61 05       	cpc	r22, r1
     cba:	08 94       	sec
     cbc:	08 95       	ret

00000cbe <__fp_zero>:
     cbe:	e8 94       	clt

00000cc0 <__fp_szero>:
     cc0:	bb 27       	eor	r27, r27
     cc2:	66 27       	eor	r22, r22
     cc4:	77 27       	eor	r23, r23
     cc6:	cb 01       	movw	r24, r22
     cc8:	97 f9       	bld	r25, 7
     cca:	08 95       	ret

00000ccc <__mulsf3>:
     ccc:	0b d0       	rcall	.+22     	; 0xce4 <__mulsf3x>
     cce:	c4 cf       	rjmp	.-120    	; 0xc58 <__fp_round>
     cd0:	b5 df       	rcall	.-150    	; 0xc3c <__fp_pscA>
     cd2:	28 f0       	brcs	.+10     	; 0xcde <__mulsf3+0x12>
     cd4:	ba df       	rcall	.-140    	; 0xc4a <__fp_pscB>
     cd6:	18 f0       	brcs	.+6      	; 0xcde <__mulsf3+0x12>
     cd8:	95 23       	and	r25, r21
     cda:	09 f0       	breq	.+2      	; 0xcde <__mulsf3+0x12>
     cdc:	a6 cf       	rjmp	.-180    	; 0xc2a <__fp_inf>
     cde:	ab cf       	rjmp	.-170    	; 0xc36 <__fp_nan>
     ce0:	11 24       	eor	r1, r1
     ce2:	ee cf       	rjmp	.-36     	; 0xcc0 <__fp_szero>

00000ce4 <__mulsf3x>:
     ce4:	ca df       	rcall	.-108    	; 0xc7a <__fp_split3>
     ce6:	a0 f3       	brcs	.-24     	; 0xcd0 <__mulsf3+0x4>

00000ce8 <__mulsf3_pse>:
     ce8:	95 9f       	mul	r25, r21
     cea:	d1 f3       	breq	.-12     	; 0xce0 <__mulsf3+0x14>
     cec:	95 0f       	add	r25, r21
     cee:	50 e0       	ldi	r21, 0x00	; 0
     cf0:	55 1f       	adc	r21, r21
     cf2:	62 9f       	mul	r22, r18
     cf4:	f0 01       	movw	r30, r0
     cf6:	72 9f       	mul	r23, r18
     cf8:	bb 27       	eor	r27, r27
     cfa:	f0 0d       	add	r31, r0
     cfc:	b1 1d       	adc	r27, r1
     cfe:	63 9f       	mul	r22, r19
     d00:	aa 27       	eor	r26, r26
     d02:	f0 0d       	add	r31, r0
     d04:	b1 1d       	adc	r27, r1
     d06:	aa 1f       	adc	r26, r26
     d08:	64 9f       	mul	r22, r20
     d0a:	66 27       	eor	r22, r22
     d0c:	b0 0d       	add	r27, r0
     d0e:	a1 1d       	adc	r26, r1
     d10:	66 1f       	adc	r22, r22
     d12:	82 9f       	mul	r24, r18
     d14:	22 27       	eor	r18, r18
     d16:	b0 0d       	add	r27, r0
     d18:	a1 1d       	adc	r26, r1
     d1a:	62 1f       	adc	r22, r18
     d1c:	73 9f       	mul	r23, r19
     d1e:	b0 0d       	add	r27, r0
     d20:	a1 1d       	adc	r26, r1
     d22:	62 1f       	adc	r22, r18
     d24:	83 9f       	mul	r24, r19
     d26:	a0 0d       	add	r26, r0
     d28:	61 1d       	adc	r22, r1
     d2a:	22 1f       	adc	r18, r18
     d2c:	74 9f       	mul	r23, r20
     d2e:	33 27       	eor	r19, r19
     d30:	a0 0d       	add	r26, r0
     d32:	61 1d       	adc	r22, r1
     d34:	23 1f       	adc	r18, r19
     d36:	84 9f       	mul	r24, r20
     d38:	60 0d       	add	r22, r0
     d3a:	21 1d       	adc	r18, r1
     d3c:	82 2f       	mov	r24, r18
     d3e:	76 2f       	mov	r23, r22
     d40:	6a 2f       	mov	r22, r26
     d42:	11 24       	eor	r1, r1
     d44:	9f 57       	subi	r25, 0x7F	; 127
     d46:	50 40       	sbci	r21, 0x00	; 0
     d48:	8a f0       	brmi	.+34     	; 0xd6c <__mulsf3_pse+0x84>
     d4a:	e1 f0       	breq	.+56     	; 0xd84 <__mulsf3_pse+0x9c>
     d4c:	88 23       	and	r24, r24
     d4e:	4a f0       	brmi	.+18     	; 0xd62 <__mulsf3_pse+0x7a>
     d50:	ee 0f       	add	r30, r30
     d52:	ff 1f       	adc	r31, r31
     d54:	bb 1f       	adc	r27, r27
     d56:	66 1f       	adc	r22, r22
     d58:	77 1f       	adc	r23, r23
     d5a:	88 1f       	adc	r24, r24
     d5c:	91 50       	subi	r25, 0x01	; 1
     d5e:	50 40       	sbci	r21, 0x00	; 0
     d60:	a9 f7       	brne	.-22     	; 0xd4c <__mulsf3_pse+0x64>
     d62:	9e 3f       	cpi	r25, 0xFE	; 254
     d64:	51 05       	cpc	r21, r1
     d66:	70 f0       	brcs	.+28     	; 0xd84 <__mulsf3_pse+0x9c>
     d68:	60 cf       	rjmp	.-320    	; 0xc2a <__fp_inf>
     d6a:	aa cf       	rjmp	.-172    	; 0xcc0 <__fp_szero>
     d6c:	5f 3f       	cpi	r21, 0xFF	; 255
     d6e:	ec f3       	brlt	.-6      	; 0xd6a <__mulsf3_pse+0x82>
     d70:	98 3e       	cpi	r25, 0xE8	; 232
     d72:	dc f3       	brlt	.-10     	; 0xd6a <__mulsf3_pse+0x82>
     d74:	86 95       	lsr	r24
     d76:	77 95       	ror	r23
     d78:	67 95       	ror	r22
     d7a:	b7 95       	ror	r27
     d7c:	f7 95       	ror	r31
     d7e:	e7 95       	ror	r30
     d80:	9f 5f       	subi	r25, 0xFF	; 255
     d82:	c1 f7       	brne	.-16     	; 0xd74 <__mulsf3_pse+0x8c>
     d84:	fe 2b       	or	r31, r30
     d86:	88 0f       	add	r24, r24
     d88:	91 1d       	adc	r25, r1
     d8a:	96 95       	lsr	r25
     d8c:	87 95       	ror	r24
     d8e:	97 f9       	bld	r25, 7
     d90:	08 95       	ret

00000d92 <printf>:
     d92:	cf 93       	push	r28
     d94:	df 93       	push	r29
     d96:	cd b7       	in	r28, 0x3d	; 61
     d98:	de b7       	in	r29, 0x3e	; 62
     d9a:	fe 01       	movw	r30, r28
     d9c:	36 96       	adiw	r30, 0x06	; 6
     d9e:	61 91       	ld	r22, Z+
     da0:	71 91       	ld	r23, Z+
     da2:	af 01       	movw	r20, r30
     da4:	80 91 89 02 	lds	r24, 0x0289
     da8:	90 91 8a 02 	lds	r25, 0x028A
     dac:	30 d0       	rcall	.+96     	; 0xe0e <vfprintf>
     dae:	df 91       	pop	r29
     db0:	cf 91       	pop	r28
     db2:	08 95       	ret

00000db4 <puts>:
     db4:	0f 93       	push	r16
     db6:	1f 93       	push	r17
     db8:	cf 93       	push	r28
     dba:	df 93       	push	r29
     dbc:	e0 91 89 02 	lds	r30, 0x0289
     dc0:	f0 91 8a 02 	lds	r31, 0x028A
     dc4:	23 81       	ldd	r18, Z+3	; 0x03
     dc6:	21 ff       	sbrs	r18, 1
     dc8:	1b c0       	rjmp	.+54     	; 0xe00 <puts+0x4c>
     dca:	ec 01       	movw	r28, r24
     dcc:	00 e0       	ldi	r16, 0x00	; 0
     dce:	10 e0       	ldi	r17, 0x00	; 0
     dd0:	89 91       	ld	r24, Y+
     dd2:	60 91 89 02 	lds	r22, 0x0289
     dd6:	70 91 8a 02 	lds	r23, 0x028A
     dda:	db 01       	movw	r26, r22
     ddc:	18 96       	adiw	r26, 0x08	; 8
     dde:	ed 91       	ld	r30, X+
     de0:	fc 91       	ld	r31, X
     de2:	19 97       	sbiw	r26, 0x09	; 9
     de4:	88 23       	and	r24, r24
     de6:	31 f0       	breq	.+12     	; 0xdf4 <puts+0x40>
     de8:	19 95       	eicall
     dea:	89 2b       	or	r24, r25
     dec:	89 f3       	breq	.-30     	; 0xdd0 <puts+0x1c>
     dee:	0f ef       	ldi	r16, 0xFF	; 255
     df0:	1f ef       	ldi	r17, 0xFF	; 255
     df2:	ee cf       	rjmp	.-36     	; 0xdd0 <puts+0x1c>
     df4:	8a e0       	ldi	r24, 0x0A	; 10
     df6:	19 95       	eicall
     df8:	89 2b       	or	r24, r25
     dfa:	11 f4       	brne	.+4      	; 0xe00 <puts+0x4c>
     dfc:	c8 01       	movw	r24, r16
     dfe:	02 c0       	rjmp	.+4      	; 0xe04 <puts+0x50>
     e00:	8f ef       	ldi	r24, 0xFF	; 255
     e02:	9f ef       	ldi	r25, 0xFF	; 255
     e04:	df 91       	pop	r29
     e06:	cf 91       	pop	r28
     e08:	1f 91       	pop	r17
     e0a:	0f 91       	pop	r16
     e0c:	08 95       	ret

00000e0e <vfprintf>:
     e0e:	2f 92       	push	r2
     e10:	3f 92       	push	r3
     e12:	4f 92       	push	r4
     e14:	5f 92       	push	r5
     e16:	6f 92       	push	r6
     e18:	7f 92       	push	r7
     e1a:	8f 92       	push	r8
     e1c:	9f 92       	push	r9
     e1e:	af 92       	push	r10
     e20:	bf 92       	push	r11
     e22:	cf 92       	push	r12
     e24:	df 92       	push	r13
     e26:	ef 92       	push	r14
     e28:	ff 92       	push	r15
     e2a:	0f 93       	push	r16
     e2c:	1f 93       	push	r17
     e2e:	cf 93       	push	r28
     e30:	df 93       	push	r29
     e32:	cd b7       	in	r28, 0x3d	; 61
     e34:	de b7       	in	r29, 0x3e	; 62
     e36:	2c 97       	sbiw	r28, 0x0c	; 12
     e38:	0f b6       	in	r0, 0x3f	; 63
     e3a:	f8 94       	cli
     e3c:	de bf       	out	0x3e, r29	; 62
     e3e:	0f be       	out	0x3f, r0	; 63
     e40:	cd bf       	out	0x3d, r28	; 61
     e42:	7c 01       	movw	r14, r24
     e44:	6b 01       	movw	r12, r22
     e46:	8a 01       	movw	r16, r20
     e48:	fc 01       	movw	r30, r24
     e4a:	17 82       	std	Z+7, r1	; 0x07
     e4c:	16 82       	std	Z+6, r1	; 0x06
     e4e:	83 81       	ldd	r24, Z+3	; 0x03
     e50:	81 ff       	sbrs	r24, 1
     e52:	b0 c1       	rjmp	.+864    	; 0x11b4 <vfprintf+0x3a6>
     e54:	ce 01       	movw	r24, r28
     e56:	01 96       	adiw	r24, 0x01	; 1
     e58:	4c 01       	movw	r8, r24
     e5a:	f7 01       	movw	r30, r14
     e5c:	93 81       	ldd	r25, Z+3	; 0x03
     e5e:	f6 01       	movw	r30, r12
     e60:	93 fd       	sbrc	r25, 3
     e62:	85 91       	lpm	r24, Z+
     e64:	93 ff       	sbrs	r25, 3
     e66:	81 91       	ld	r24, Z+
     e68:	6f 01       	movw	r12, r30
     e6a:	88 23       	and	r24, r24
     e6c:	09 f4       	brne	.+2      	; 0xe70 <vfprintf+0x62>
     e6e:	9e c1       	rjmp	.+828    	; 0x11ac <vfprintf+0x39e>
     e70:	85 32       	cpi	r24, 0x25	; 37
     e72:	39 f4       	brne	.+14     	; 0xe82 <vfprintf+0x74>
     e74:	93 fd       	sbrc	r25, 3
     e76:	85 91       	lpm	r24, Z+
     e78:	93 ff       	sbrs	r25, 3
     e7a:	81 91       	ld	r24, Z+
     e7c:	6f 01       	movw	r12, r30
     e7e:	85 32       	cpi	r24, 0x25	; 37
     e80:	21 f4       	brne	.+8      	; 0xe8a <vfprintf+0x7c>
     e82:	b7 01       	movw	r22, r14
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	c7 d1       	rcall	.+910    	; 0x1216 <fputc>
     e88:	e8 cf       	rjmp	.-48     	; 0xe5a <vfprintf+0x4c>
     e8a:	51 2c       	mov	r5, r1
     e8c:	31 2c       	mov	r3, r1
     e8e:	20 e0       	ldi	r18, 0x00	; 0
     e90:	20 32       	cpi	r18, 0x20	; 32
     e92:	a0 f4       	brcc	.+40     	; 0xebc <vfprintf+0xae>
     e94:	8b 32       	cpi	r24, 0x2B	; 43
     e96:	69 f0       	breq	.+26     	; 0xeb2 <vfprintf+0xa4>
     e98:	30 f4       	brcc	.+12     	; 0xea6 <vfprintf+0x98>
     e9a:	80 32       	cpi	r24, 0x20	; 32
     e9c:	59 f0       	breq	.+22     	; 0xeb4 <vfprintf+0xa6>
     e9e:	83 32       	cpi	r24, 0x23	; 35
     ea0:	69 f4       	brne	.+26     	; 0xebc <vfprintf+0xae>
     ea2:	20 61       	ori	r18, 0x10	; 16
     ea4:	2c c0       	rjmp	.+88     	; 0xefe <vfprintf+0xf0>
     ea6:	8d 32       	cpi	r24, 0x2D	; 45
     ea8:	39 f0       	breq	.+14     	; 0xeb8 <vfprintf+0xaa>
     eaa:	80 33       	cpi	r24, 0x30	; 48
     eac:	39 f4       	brne	.+14     	; 0xebc <vfprintf+0xae>
     eae:	21 60       	ori	r18, 0x01	; 1
     eb0:	26 c0       	rjmp	.+76     	; 0xefe <vfprintf+0xf0>
     eb2:	22 60       	ori	r18, 0x02	; 2
     eb4:	24 60       	ori	r18, 0x04	; 4
     eb6:	23 c0       	rjmp	.+70     	; 0xefe <vfprintf+0xf0>
     eb8:	28 60       	ori	r18, 0x08	; 8
     eba:	21 c0       	rjmp	.+66     	; 0xefe <vfprintf+0xf0>
     ebc:	27 fd       	sbrc	r18, 7
     ebe:	27 c0       	rjmp	.+78     	; 0xf0e <vfprintf+0x100>
     ec0:	30 ed       	ldi	r19, 0xD0	; 208
     ec2:	38 0f       	add	r19, r24
     ec4:	3a 30       	cpi	r19, 0x0A	; 10
     ec6:	78 f4       	brcc	.+30     	; 0xee6 <vfprintf+0xd8>
     ec8:	26 ff       	sbrs	r18, 6
     eca:	06 c0       	rjmp	.+12     	; 0xed8 <vfprintf+0xca>
     ecc:	fa e0       	ldi	r31, 0x0A	; 10
     ece:	5f 9e       	mul	r5, r31
     ed0:	30 0d       	add	r19, r0
     ed2:	11 24       	eor	r1, r1
     ed4:	53 2e       	mov	r5, r19
     ed6:	13 c0       	rjmp	.+38     	; 0xefe <vfprintf+0xf0>
     ed8:	8a e0       	ldi	r24, 0x0A	; 10
     eda:	38 9e       	mul	r3, r24
     edc:	30 0d       	add	r19, r0
     ede:	11 24       	eor	r1, r1
     ee0:	33 2e       	mov	r3, r19
     ee2:	20 62       	ori	r18, 0x20	; 32
     ee4:	0c c0       	rjmp	.+24     	; 0xefe <vfprintf+0xf0>
     ee6:	8e 32       	cpi	r24, 0x2E	; 46
     ee8:	21 f4       	brne	.+8      	; 0xef2 <vfprintf+0xe4>
     eea:	26 fd       	sbrc	r18, 6
     eec:	5f c1       	rjmp	.+702    	; 0x11ac <vfprintf+0x39e>
     eee:	20 64       	ori	r18, 0x40	; 64
     ef0:	06 c0       	rjmp	.+12     	; 0xefe <vfprintf+0xf0>
     ef2:	8c 36       	cpi	r24, 0x6C	; 108
     ef4:	11 f4       	brne	.+4      	; 0xefa <vfprintf+0xec>
     ef6:	20 68       	ori	r18, 0x80	; 128
     ef8:	02 c0       	rjmp	.+4      	; 0xefe <vfprintf+0xf0>
     efa:	88 36       	cpi	r24, 0x68	; 104
     efc:	41 f4       	brne	.+16     	; 0xf0e <vfprintf+0x100>
     efe:	f6 01       	movw	r30, r12
     f00:	93 fd       	sbrc	r25, 3
     f02:	85 91       	lpm	r24, Z+
     f04:	93 ff       	sbrs	r25, 3
     f06:	81 91       	ld	r24, Z+
     f08:	6f 01       	movw	r12, r30
     f0a:	81 11       	cpse	r24, r1
     f0c:	c1 cf       	rjmp	.-126    	; 0xe90 <vfprintf+0x82>
     f0e:	98 2f       	mov	r25, r24
     f10:	9f 7d       	andi	r25, 0xDF	; 223
     f12:	95 54       	subi	r25, 0x45	; 69
     f14:	93 30       	cpi	r25, 0x03	; 3
     f16:	28 f4       	brcc	.+10     	; 0xf22 <vfprintf+0x114>
     f18:	0c 5f       	subi	r16, 0xFC	; 252
     f1a:	1f 4f       	sbci	r17, 0xFF	; 255
     f1c:	ff e3       	ldi	r31, 0x3F	; 63
     f1e:	f9 83       	std	Y+1, r31	; 0x01
     f20:	0d c0       	rjmp	.+26     	; 0xf3c <vfprintf+0x12e>
     f22:	83 36       	cpi	r24, 0x63	; 99
     f24:	31 f0       	breq	.+12     	; 0xf32 <vfprintf+0x124>
     f26:	83 37       	cpi	r24, 0x73	; 115
     f28:	71 f0       	breq	.+28     	; 0xf46 <vfprintf+0x138>
     f2a:	83 35       	cpi	r24, 0x53	; 83
     f2c:	09 f0       	breq	.+2      	; 0xf30 <vfprintf+0x122>
     f2e:	57 c0       	rjmp	.+174    	; 0xfde <vfprintf+0x1d0>
     f30:	21 c0       	rjmp	.+66     	; 0xf74 <vfprintf+0x166>
     f32:	f8 01       	movw	r30, r16
     f34:	80 81       	ld	r24, Z
     f36:	89 83       	std	Y+1, r24	; 0x01
     f38:	0e 5f       	subi	r16, 0xFE	; 254
     f3a:	1f 4f       	sbci	r17, 0xFF	; 255
     f3c:	44 24       	eor	r4, r4
     f3e:	43 94       	inc	r4
     f40:	51 2c       	mov	r5, r1
     f42:	54 01       	movw	r10, r8
     f44:	14 c0       	rjmp	.+40     	; 0xf6e <vfprintf+0x160>
     f46:	38 01       	movw	r6, r16
     f48:	f2 e0       	ldi	r31, 0x02	; 2
     f4a:	6f 0e       	add	r6, r31
     f4c:	71 1c       	adc	r7, r1
     f4e:	f8 01       	movw	r30, r16
     f50:	a0 80       	ld	r10, Z
     f52:	b1 80       	ldd	r11, Z+1	; 0x01
     f54:	26 ff       	sbrs	r18, 6
     f56:	03 c0       	rjmp	.+6      	; 0xf5e <vfprintf+0x150>
     f58:	65 2d       	mov	r22, r5
     f5a:	70 e0       	ldi	r23, 0x00	; 0
     f5c:	02 c0       	rjmp	.+4      	; 0xf62 <vfprintf+0x154>
     f5e:	6f ef       	ldi	r22, 0xFF	; 255
     f60:	7f ef       	ldi	r23, 0xFF	; 255
     f62:	c5 01       	movw	r24, r10
     f64:	2c 87       	std	Y+12, r18	; 0x0c
     f66:	4c d1       	rcall	.+664    	; 0x1200 <strnlen>
     f68:	2c 01       	movw	r4, r24
     f6a:	83 01       	movw	r16, r6
     f6c:	2c 85       	ldd	r18, Y+12	; 0x0c
     f6e:	2f 77       	andi	r18, 0x7F	; 127
     f70:	22 2e       	mov	r2, r18
     f72:	16 c0       	rjmp	.+44     	; 0xfa0 <vfprintf+0x192>
     f74:	38 01       	movw	r6, r16
     f76:	f2 e0       	ldi	r31, 0x02	; 2
     f78:	6f 0e       	add	r6, r31
     f7a:	71 1c       	adc	r7, r1
     f7c:	f8 01       	movw	r30, r16
     f7e:	a0 80       	ld	r10, Z
     f80:	b1 80       	ldd	r11, Z+1	; 0x01
     f82:	26 ff       	sbrs	r18, 6
     f84:	03 c0       	rjmp	.+6      	; 0xf8c <vfprintf+0x17e>
     f86:	65 2d       	mov	r22, r5
     f88:	70 e0       	ldi	r23, 0x00	; 0
     f8a:	02 c0       	rjmp	.+4      	; 0xf90 <vfprintf+0x182>
     f8c:	6f ef       	ldi	r22, 0xFF	; 255
     f8e:	7f ef       	ldi	r23, 0xFF	; 255
     f90:	c5 01       	movw	r24, r10
     f92:	2c 87       	std	Y+12, r18	; 0x0c
     f94:	2a d1       	rcall	.+596    	; 0x11ea <strnlen_P>
     f96:	2c 01       	movw	r4, r24
     f98:	2c 85       	ldd	r18, Y+12	; 0x0c
     f9a:	20 68       	ori	r18, 0x80	; 128
     f9c:	22 2e       	mov	r2, r18
     f9e:	83 01       	movw	r16, r6
     fa0:	23 fc       	sbrc	r2, 3
     fa2:	19 c0       	rjmp	.+50     	; 0xfd6 <vfprintf+0x1c8>
     fa4:	83 2d       	mov	r24, r3
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	48 16       	cp	r4, r24
     faa:	59 06       	cpc	r5, r25
     fac:	a0 f4       	brcc	.+40     	; 0xfd6 <vfprintf+0x1c8>
     fae:	b7 01       	movw	r22, r14
     fb0:	80 e2       	ldi	r24, 0x20	; 32
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	30 d1       	rcall	.+608    	; 0x1216 <fputc>
     fb6:	3a 94       	dec	r3
     fb8:	f5 cf       	rjmp	.-22     	; 0xfa4 <vfprintf+0x196>
     fba:	f5 01       	movw	r30, r10
     fbc:	27 fc       	sbrc	r2, 7
     fbe:	85 91       	lpm	r24, Z+
     fc0:	27 fe       	sbrs	r2, 7
     fc2:	81 91       	ld	r24, Z+
     fc4:	5f 01       	movw	r10, r30
     fc6:	b7 01       	movw	r22, r14
     fc8:	90 e0       	ldi	r25, 0x00	; 0
     fca:	25 d1       	rcall	.+586    	; 0x1216 <fputc>
     fcc:	31 10       	cpse	r3, r1
     fce:	3a 94       	dec	r3
     fd0:	f1 e0       	ldi	r31, 0x01	; 1
     fd2:	4f 1a       	sub	r4, r31
     fd4:	51 08       	sbc	r5, r1
     fd6:	41 14       	cp	r4, r1
     fd8:	51 04       	cpc	r5, r1
     fda:	79 f7       	brne	.-34     	; 0xfba <vfprintf+0x1ac>
     fdc:	de c0       	rjmp	.+444    	; 0x119a <vfprintf+0x38c>
     fde:	84 36       	cpi	r24, 0x64	; 100
     fe0:	11 f0       	breq	.+4      	; 0xfe6 <vfprintf+0x1d8>
     fe2:	89 36       	cpi	r24, 0x69	; 105
     fe4:	31 f5       	brne	.+76     	; 0x1032 <vfprintf+0x224>
     fe6:	f8 01       	movw	r30, r16
     fe8:	27 ff       	sbrs	r18, 7
     fea:	07 c0       	rjmp	.+14     	; 0xffa <vfprintf+0x1ec>
     fec:	60 81       	ld	r22, Z
     fee:	71 81       	ldd	r23, Z+1	; 0x01
     ff0:	82 81       	ldd	r24, Z+2	; 0x02
     ff2:	93 81       	ldd	r25, Z+3	; 0x03
     ff4:	0c 5f       	subi	r16, 0xFC	; 252
     ff6:	1f 4f       	sbci	r17, 0xFF	; 255
     ff8:	08 c0       	rjmp	.+16     	; 0x100a <vfprintf+0x1fc>
     ffa:	60 81       	ld	r22, Z
     ffc:	71 81       	ldd	r23, Z+1	; 0x01
     ffe:	88 27       	eor	r24, r24
    1000:	77 fd       	sbrc	r23, 7
    1002:	80 95       	com	r24
    1004:	98 2f       	mov	r25, r24
    1006:	0e 5f       	subi	r16, 0xFE	; 254
    1008:	1f 4f       	sbci	r17, 0xFF	; 255
    100a:	2f 76       	andi	r18, 0x6F	; 111
    100c:	b2 2e       	mov	r11, r18
    100e:	97 ff       	sbrs	r25, 7
    1010:	09 c0       	rjmp	.+18     	; 0x1024 <vfprintf+0x216>
    1012:	90 95       	com	r25
    1014:	80 95       	com	r24
    1016:	70 95       	com	r23
    1018:	61 95       	neg	r22
    101a:	7f 4f       	sbci	r23, 0xFF	; 255
    101c:	8f 4f       	sbci	r24, 0xFF	; 255
    101e:	9f 4f       	sbci	r25, 0xFF	; 255
    1020:	20 68       	ori	r18, 0x80	; 128
    1022:	b2 2e       	mov	r11, r18
    1024:	2a e0       	ldi	r18, 0x0A	; 10
    1026:	30 e0       	ldi	r19, 0x00	; 0
    1028:	a4 01       	movw	r20, r8
    102a:	27 d1       	rcall	.+590    	; 0x127a <__ultoa_invert>
    102c:	a8 2e       	mov	r10, r24
    102e:	a8 18       	sub	r10, r8
    1030:	43 c0       	rjmp	.+134    	; 0x10b8 <vfprintf+0x2aa>
    1032:	85 37       	cpi	r24, 0x75	; 117
    1034:	29 f4       	brne	.+10     	; 0x1040 <vfprintf+0x232>
    1036:	2f 7e       	andi	r18, 0xEF	; 239
    1038:	b2 2e       	mov	r11, r18
    103a:	2a e0       	ldi	r18, 0x0A	; 10
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	25 c0       	rjmp	.+74     	; 0x108a <vfprintf+0x27c>
    1040:	f2 2f       	mov	r31, r18
    1042:	f9 7f       	andi	r31, 0xF9	; 249
    1044:	bf 2e       	mov	r11, r31
    1046:	8f 36       	cpi	r24, 0x6F	; 111
    1048:	c1 f0       	breq	.+48     	; 0x107a <vfprintf+0x26c>
    104a:	18 f4       	brcc	.+6      	; 0x1052 <vfprintf+0x244>
    104c:	88 35       	cpi	r24, 0x58	; 88
    104e:	79 f0       	breq	.+30     	; 0x106e <vfprintf+0x260>
    1050:	ad c0       	rjmp	.+346    	; 0x11ac <vfprintf+0x39e>
    1052:	80 37       	cpi	r24, 0x70	; 112
    1054:	19 f0       	breq	.+6      	; 0x105c <vfprintf+0x24e>
    1056:	88 37       	cpi	r24, 0x78	; 120
    1058:	21 f0       	breq	.+8      	; 0x1062 <vfprintf+0x254>
    105a:	a8 c0       	rjmp	.+336    	; 0x11ac <vfprintf+0x39e>
    105c:	2f 2f       	mov	r18, r31
    105e:	20 61       	ori	r18, 0x10	; 16
    1060:	b2 2e       	mov	r11, r18
    1062:	b4 fe       	sbrs	r11, 4
    1064:	0d c0       	rjmp	.+26     	; 0x1080 <vfprintf+0x272>
    1066:	8b 2d       	mov	r24, r11
    1068:	84 60       	ori	r24, 0x04	; 4
    106a:	b8 2e       	mov	r11, r24
    106c:	09 c0       	rjmp	.+18     	; 0x1080 <vfprintf+0x272>
    106e:	24 ff       	sbrs	r18, 4
    1070:	0a c0       	rjmp	.+20     	; 0x1086 <vfprintf+0x278>
    1072:	9f 2f       	mov	r25, r31
    1074:	96 60       	ori	r25, 0x06	; 6
    1076:	b9 2e       	mov	r11, r25
    1078:	06 c0       	rjmp	.+12     	; 0x1086 <vfprintf+0x278>
    107a:	28 e0       	ldi	r18, 0x08	; 8
    107c:	30 e0       	ldi	r19, 0x00	; 0
    107e:	05 c0       	rjmp	.+10     	; 0x108a <vfprintf+0x27c>
    1080:	20 e1       	ldi	r18, 0x10	; 16
    1082:	30 e0       	ldi	r19, 0x00	; 0
    1084:	02 c0       	rjmp	.+4      	; 0x108a <vfprintf+0x27c>
    1086:	20 e1       	ldi	r18, 0x10	; 16
    1088:	32 e0       	ldi	r19, 0x02	; 2
    108a:	f8 01       	movw	r30, r16
    108c:	b7 fe       	sbrs	r11, 7
    108e:	07 c0       	rjmp	.+14     	; 0x109e <vfprintf+0x290>
    1090:	60 81       	ld	r22, Z
    1092:	71 81       	ldd	r23, Z+1	; 0x01
    1094:	82 81       	ldd	r24, Z+2	; 0x02
    1096:	93 81       	ldd	r25, Z+3	; 0x03
    1098:	0c 5f       	subi	r16, 0xFC	; 252
    109a:	1f 4f       	sbci	r17, 0xFF	; 255
    109c:	06 c0       	rjmp	.+12     	; 0x10aa <vfprintf+0x29c>
    109e:	60 81       	ld	r22, Z
    10a0:	71 81       	ldd	r23, Z+1	; 0x01
    10a2:	80 e0       	ldi	r24, 0x00	; 0
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	0e 5f       	subi	r16, 0xFE	; 254
    10a8:	1f 4f       	sbci	r17, 0xFF	; 255
    10aa:	a4 01       	movw	r20, r8
    10ac:	e6 d0       	rcall	.+460    	; 0x127a <__ultoa_invert>
    10ae:	a8 2e       	mov	r10, r24
    10b0:	a8 18       	sub	r10, r8
    10b2:	fb 2d       	mov	r31, r11
    10b4:	ff 77       	andi	r31, 0x7F	; 127
    10b6:	bf 2e       	mov	r11, r31
    10b8:	b6 fe       	sbrs	r11, 6
    10ba:	0b c0       	rjmp	.+22     	; 0x10d2 <vfprintf+0x2c4>
    10bc:	2b 2d       	mov	r18, r11
    10be:	2e 7f       	andi	r18, 0xFE	; 254
    10c0:	a5 14       	cp	r10, r5
    10c2:	50 f4       	brcc	.+20     	; 0x10d8 <vfprintf+0x2ca>
    10c4:	b4 fe       	sbrs	r11, 4
    10c6:	0a c0       	rjmp	.+20     	; 0x10dc <vfprintf+0x2ce>
    10c8:	b2 fc       	sbrc	r11, 2
    10ca:	08 c0       	rjmp	.+16     	; 0x10dc <vfprintf+0x2ce>
    10cc:	2b 2d       	mov	r18, r11
    10ce:	2e 7e       	andi	r18, 0xEE	; 238
    10d0:	05 c0       	rjmp	.+10     	; 0x10dc <vfprintf+0x2ce>
    10d2:	7a 2c       	mov	r7, r10
    10d4:	2b 2d       	mov	r18, r11
    10d6:	03 c0       	rjmp	.+6      	; 0x10de <vfprintf+0x2d0>
    10d8:	7a 2c       	mov	r7, r10
    10da:	01 c0       	rjmp	.+2      	; 0x10de <vfprintf+0x2d0>
    10dc:	75 2c       	mov	r7, r5
    10de:	24 ff       	sbrs	r18, 4
    10e0:	0d c0       	rjmp	.+26     	; 0x10fc <vfprintf+0x2ee>
    10e2:	fe 01       	movw	r30, r28
    10e4:	ea 0d       	add	r30, r10
    10e6:	f1 1d       	adc	r31, r1
    10e8:	80 81       	ld	r24, Z
    10ea:	80 33       	cpi	r24, 0x30	; 48
    10ec:	11 f4       	brne	.+4      	; 0x10f2 <vfprintf+0x2e4>
    10ee:	29 7e       	andi	r18, 0xE9	; 233
    10f0:	09 c0       	rjmp	.+18     	; 0x1104 <vfprintf+0x2f6>
    10f2:	22 ff       	sbrs	r18, 2
    10f4:	06 c0       	rjmp	.+12     	; 0x1102 <vfprintf+0x2f4>
    10f6:	73 94       	inc	r7
    10f8:	73 94       	inc	r7
    10fa:	04 c0       	rjmp	.+8      	; 0x1104 <vfprintf+0x2f6>
    10fc:	82 2f       	mov	r24, r18
    10fe:	86 78       	andi	r24, 0x86	; 134
    1100:	09 f0       	breq	.+2      	; 0x1104 <vfprintf+0x2f6>
    1102:	73 94       	inc	r7
    1104:	23 fd       	sbrc	r18, 3
    1106:	12 c0       	rjmp	.+36     	; 0x112c <vfprintf+0x31e>
    1108:	20 ff       	sbrs	r18, 0
    110a:	06 c0       	rjmp	.+12     	; 0x1118 <vfprintf+0x30a>
    110c:	5a 2c       	mov	r5, r10
    110e:	73 14       	cp	r7, r3
    1110:	18 f4       	brcc	.+6      	; 0x1118 <vfprintf+0x30a>
    1112:	53 0c       	add	r5, r3
    1114:	57 18       	sub	r5, r7
    1116:	73 2c       	mov	r7, r3
    1118:	73 14       	cp	r7, r3
    111a:	60 f4       	brcc	.+24     	; 0x1134 <vfprintf+0x326>
    111c:	b7 01       	movw	r22, r14
    111e:	80 e2       	ldi	r24, 0x20	; 32
    1120:	90 e0       	ldi	r25, 0x00	; 0
    1122:	2c 87       	std	Y+12, r18	; 0x0c
    1124:	78 d0       	rcall	.+240    	; 0x1216 <fputc>
    1126:	73 94       	inc	r7
    1128:	2c 85       	ldd	r18, Y+12	; 0x0c
    112a:	f6 cf       	rjmp	.-20     	; 0x1118 <vfprintf+0x30a>
    112c:	73 14       	cp	r7, r3
    112e:	10 f4       	brcc	.+4      	; 0x1134 <vfprintf+0x326>
    1130:	37 18       	sub	r3, r7
    1132:	01 c0       	rjmp	.+2      	; 0x1136 <vfprintf+0x328>
    1134:	31 2c       	mov	r3, r1
    1136:	24 ff       	sbrs	r18, 4
    1138:	11 c0       	rjmp	.+34     	; 0x115c <vfprintf+0x34e>
    113a:	b7 01       	movw	r22, r14
    113c:	80 e3       	ldi	r24, 0x30	; 48
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	2c 87       	std	Y+12, r18	; 0x0c
    1142:	69 d0       	rcall	.+210    	; 0x1216 <fputc>
    1144:	2c 85       	ldd	r18, Y+12	; 0x0c
    1146:	22 ff       	sbrs	r18, 2
    1148:	16 c0       	rjmp	.+44     	; 0x1176 <vfprintf+0x368>
    114a:	21 ff       	sbrs	r18, 1
    114c:	03 c0       	rjmp	.+6      	; 0x1154 <vfprintf+0x346>
    114e:	88 e5       	ldi	r24, 0x58	; 88
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	02 c0       	rjmp	.+4      	; 0x1158 <vfprintf+0x34a>
    1154:	88 e7       	ldi	r24, 0x78	; 120
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	b7 01       	movw	r22, r14
    115a:	0c c0       	rjmp	.+24     	; 0x1174 <vfprintf+0x366>
    115c:	82 2f       	mov	r24, r18
    115e:	86 78       	andi	r24, 0x86	; 134
    1160:	51 f0       	breq	.+20     	; 0x1176 <vfprintf+0x368>
    1162:	21 fd       	sbrc	r18, 1
    1164:	02 c0       	rjmp	.+4      	; 0x116a <vfprintf+0x35c>
    1166:	80 e2       	ldi	r24, 0x20	; 32
    1168:	01 c0       	rjmp	.+2      	; 0x116c <vfprintf+0x35e>
    116a:	8b e2       	ldi	r24, 0x2B	; 43
    116c:	27 fd       	sbrc	r18, 7
    116e:	8d e2       	ldi	r24, 0x2D	; 45
    1170:	b7 01       	movw	r22, r14
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	50 d0       	rcall	.+160    	; 0x1216 <fputc>
    1176:	a5 14       	cp	r10, r5
    1178:	30 f4       	brcc	.+12     	; 0x1186 <vfprintf+0x378>
    117a:	b7 01       	movw	r22, r14
    117c:	80 e3       	ldi	r24, 0x30	; 48
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	4a d0       	rcall	.+148    	; 0x1216 <fputc>
    1182:	5a 94       	dec	r5
    1184:	f8 cf       	rjmp	.-16     	; 0x1176 <vfprintf+0x368>
    1186:	aa 94       	dec	r10
    1188:	f4 01       	movw	r30, r8
    118a:	ea 0d       	add	r30, r10
    118c:	f1 1d       	adc	r31, r1
    118e:	80 81       	ld	r24, Z
    1190:	b7 01       	movw	r22, r14
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	40 d0       	rcall	.+128    	; 0x1216 <fputc>
    1196:	a1 10       	cpse	r10, r1
    1198:	f6 cf       	rjmp	.-20     	; 0x1186 <vfprintf+0x378>
    119a:	33 20       	and	r3, r3
    119c:	09 f4       	brne	.+2      	; 0x11a0 <vfprintf+0x392>
    119e:	5d ce       	rjmp	.-838    	; 0xe5a <vfprintf+0x4c>
    11a0:	b7 01       	movw	r22, r14
    11a2:	80 e2       	ldi	r24, 0x20	; 32
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	37 d0       	rcall	.+110    	; 0x1216 <fputc>
    11a8:	3a 94       	dec	r3
    11aa:	f7 cf       	rjmp	.-18     	; 0x119a <vfprintf+0x38c>
    11ac:	f7 01       	movw	r30, r14
    11ae:	86 81       	ldd	r24, Z+6	; 0x06
    11b0:	97 81       	ldd	r25, Z+7	; 0x07
    11b2:	02 c0       	rjmp	.+4      	; 0x11b8 <vfprintf+0x3aa>
    11b4:	8f ef       	ldi	r24, 0xFF	; 255
    11b6:	9f ef       	ldi	r25, 0xFF	; 255
    11b8:	2c 96       	adiw	r28, 0x0c	; 12
    11ba:	0f b6       	in	r0, 0x3f	; 63
    11bc:	f8 94       	cli
    11be:	de bf       	out	0x3e, r29	; 62
    11c0:	0f be       	out	0x3f, r0	; 63
    11c2:	cd bf       	out	0x3d, r28	; 61
    11c4:	df 91       	pop	r29
    11c6:	cf 91       	pop	r28
    11c8:	1f 91       	pop	r17
    11ca:	0f 91       	pop	r16
    11cc:	ff 90       	pop	r15
    11ce:	ef 90       	pop	r14
    11d0:	df 90       	pop	r13
    11d2:	cf 90       	pop	r12
    11d4:	bf 90       	pop	r11
    11d6:	af 90       	pop	r10
    11d8:	9f 90       	pop	r9
    11da:	8f 90       	pop	r8
    11dc:	7f 90       	pop	r7
    11de:	6f 90       	pop	r6
    11e0:	5f 90       	pop	r5
    11e2:	4f 90       	pop	r4
    11e4:	3f 90       	pop	r3
    11e6:	2f 90       	pop	r2
    11e8:	08 95       	ret

000011ea <strnlen_P>:
    11ea:	fc 01       	movw	r30, r24
    11ec:	05 90       	lpm	r0, Z+
    11ee:	61 50       	subi	r22, 0x01	; 1
    11f0:	70 40       	sbci	r23, 0x00	; 0
    11f2:	01 10       	cpse	r0, r1
    11f4:	d8 f7       	brcc	.-10     	; 0x11ec <strnlen_P+0x2>
    11f6:	80 95       	com	r24
    11f8:	90 95       	com	r25
    11fa:	8e 0f       	add	r24, r30
    11fc:	9f 1f       	adc	r25, r31
    11fe:	08 95       	ret

00001200 <strnlen>:
    1200:	fc 01       	movw	r30, r24
    1202:	61 50       	subi	r22, 0x01	; 1
    1204:	70 40       	sbci	r23, 0x00	; 0
    1206:	01 90       	ld	r0, Z+
    1208:	01 10       	cpse	r0, r1
    120a:	d8 f7       	brcc	.-10     	; 0x1202 <strnlen+0x2>
    120c:	80 95       	com	r24
    120e:	90 95       	com	r25
    1210:	8e 0f       	add	r24, r30
    1212:	9f 1f       	adc	r25, r31
    1214:	08 95       	ret

00001216 <fputc>:
    1216:	0f 93       	push	r16
    1218:	1f 93       	push	r17
    121a:	cf 93       	push	r28
    121c:	df 93       	push	r29
    121e:	18 2f       	mov	r17, r24
    1220:	09 2f       	mov	r16, r25
    1222:	eb 01       	movw	r28, r22
    1224:	8b 81       	ldd	r24, Y+3	; 0x03
    1226:	81 fd       	sbrc	r24, 1
    1228:	03 c0       	rjmp	.+6      	; 0x1230 <fputc+0x1a>
    122a:	8f ef       	ldi	r24, 0xFF	; 255
    122c:	9f ef       	ldi	r25, 0xFF	; 255
    122e:	20 c0       	rjmp	.+64     	; 0x1270 <fputc+0x5a>
    1230:	82 ff       	sbrs	r24, 2
    1232:	10 c0       	rjmp	.+32     	; 0x1254 <fputc+0x3e>
    1234:	4e 81       	ldd	r20, Y+6	; 0x06
    1236:	5f 81       	ldd	r21, Y+7	; 0x07
    1238:	2c 81       	ldd	r18, Y+4	; 0x04
    123a:	3d 81       	ldd	r19, Y+5	; 0x05
    123c:	42 17       	cp	r20, r18
    123e:	53 07       	cpc	r21, r19
    1240:	7c f4       	brge	.+30     	; 0x1260 <fputc+0x4a>
    1242:	e8 81       	ld	r30, Y
    1244:	f9 81       	ldd	r31, Y+1	; 0x01
    1246:	9f 01       	movw	r18, r30
    1248:	2f 5f       	subi	r18, 0xFF	; 255
    124a:	3f 4f       	sbci	r19, 0xFF	; 255
    124c:	39 83       	std	Y+1, r19	; 0x01
    124e:	28 83       	st	Y, r18
    1250:	10 83       	st	Z, r17
    1252:	06 c0       	rjmp	.+12     	; 0x1260 <fputc+0x4a>
    1254:	e8 85       	ldd	r30, Y+8	; 0x08
    1256:	f9 85       	ldd	r31, Y+9	; 0x09
    1258:	81 2f       	mov	r24, r17
    125a:	19 95       	eicall
    125c:	89 2b       	or	r24, r25
    125e:	29 f7       	brne	.-54     	; 0x122a <fputc+0x14>
    1260:	2e 81       	ldd	r18, Y+6	; 0x06
    1262:	3f 81       	ldd	r19, Y+7	; 0x07
    1264:	2f 5f       	subi	r18, 0xFF	; 255
    1266:	3f 4f       	sbci	r19, 0xFF	; 255
    1268:	3f 83       	std	Y+7, r19	; 0x07
    126a:	2e 83       	std	Y+6, r18	; 0x06
    126c:	81 2f       	mov	r24, r17
    126e:	90 2f       	mov	r25, r16
    1270:	df 91       	pop	r29
    1272:	cf 91       	pop	r28
    1274:	1f 91       	pop	r17
    1276:	0f 91       	pop	r16
    1278:	08 95       	ret

0000127a <__ultoa_invert>:
    127a:	fa 01       	movw	r30, r20
    127c:	aa 27       	eor	r26, r26
    127e:	28 30       	cpi	r18, 0x08	; 8
    1280:	51 f1       	breq	.+84     	; 0x12d6 <__ultoa_invert+0x5c>
    1282:	20 31       	cpi	r18, 0x10	; 16
    1284:	81 f1       	breq	.+96     	; 0x12e6 <__ultoa_invert+0x6c>
    1286:	e8 94       	clt
    1288:	6f 93       	push	r22
    128a:	6e 7f       	andi	r22, 0xFE	; 254
    128c:	6e 5f       	subi	r22, 0xFE	; 254
    128e:	7f 4f       	sbci	r23, 0xFF	; 255
    1290:	8f 4f       	sbci	r24, 0xFF	; 255
    1292:	9f 4f       	sbci	r25, 0xFF	; 255
    1294:	af 4f       	sbci	r26, 0xFF	; 255
    1296:	b1 e0       	ldi	r27, 0x01	; 1
    1298:	3e d0       	rcall	.+124    	; 0x1316 <__ultoa_invert+0x9c>
    129a:	b4 e0       	ldi	r27, 0x04	; 4
    129c:	3c d0       	rcall	.+120    	; 0x1316 <__ultoa_invert+0x9c>
    129e:	67 0f       	add	r22, r23
    12a0:	78 1f       	adc	r23, r24
    12a2:	89 1f       	adc	r24, r25
    12a4:	9a 1f       	adc	r25, r26
    12a6:	a1 1d       	adc	r26, r1
    12a8:	68 0f       	add	r22, r24
    12aa:	79 1f       	adc	r23, r25
    12ac:	8a 1f       	adc	r24, r26
    12ae:	91 1d       	adc	r25, r1
    12b0:	a1 1d       	adc	r26, r1
    12b2:	6a 0f       	add	r22, r26
    12b4:	71 1d       	adc	r23, r1
    12b6:	81 1d       	adc	r24, r1
    12b8:	91 1d       	adc	r25, r1
    12ba:	a1 1d       	adc	r26, r1
    12bc:	20 d0       	rcall	.+64     	; 0x12fe <__ultoa_invert+0x84>
    12be:	09 f4       	brne	.+2      	; 0x12c2 <__ultoa_invert+0x48>
    12c0:	68 94       	set
    12c2:	3f 91       	pop	r19
    12c4:	2a e0       	ldi	r18, 0x0A	; 10
    12c6:	26 9f       	mul	r18, r22
    12c8:	11 24       	eor	r1, r1
    12ca:	30 19       	sub	r19, r0
    12cc:	30 5d       	subi	r19, 0xD0	; 208
    12ce:	31 93       	st	Z+, r19
    12d0:	de f6       	brtc	.-74     	; 0x1288 <__ultoa_invert+0xe>
    12d2:	cf 01       	movw	r24, r30
    12d4:	08 95       	ret
    12d6:	46 2f       	mov	r20, r22
    12d8:	47 70       	andi	r20, 0x07	; 7
    12da:	40 5d       	subi	r20, 0xD0	; 208
    12dc:	41 93       	st	Z+, r20
    12de:	b3 e0       	ldi	r27, 0x03	; 3
    12e0:	0f d0       	rcall	.+30     	; 0x1300 <__ultoa_invert+0x86>
    12e2:	c9 f7       	brne	.-14     	; 0x12d6 <__ultoa_invert+0x5c>
    12e4:	f6 cf       	rjmp	.-20     	; 0x12d2 <__ultoa_invert+0x58>
    12e6:	46 2f       	mov	r20, r22
    12e8:	4f 70       	andi	r20, 0x0F	; 15
    12ea:	40 5d       	subi	r20, 0xD0	; 208
    12ec:	4a 33       	cpi	r20, 0x3A	; 58
    12ee:	18 f0       	brcs	.+6      	; 0x12f6 <__ultoa_invert+0x7c>
    12f0:	49 5d       	subi	r20, 0xD9	; 217
    12f2:	31 fd       	sbrc	r19, 1
    12f4:	40 52       	subi	r20, 0x20	; 32
    12f6:	41 93       	st	Z+, r20
    12f8:	02 d0       	rcall	.+4      	; 0x12fe <__ultoa_invert+0x84>
    12fa:	a9 f7       	brne	.-22     	; 0x12e6 <__ultoa_invert+0x6c>
    12fc:	ea cf       	rjmp	.-44     	; 0x12d2 <__ultoa_invert+0x58>
    12fe:	b4 e0       	ldi	r27, 0x04	; 4
    1300:	a6 95       	lsr	r26
    1302:	97 95       	ror	r25
    1304:	87 95       	ror	r24
    1306:	77 95       	ror	r23
    1308:	67 95       	ror	r22
    130a:	ba 95       	dec	r27
    130c:	c9 f7       	brne	.-14     	; 0x1300 <__ultoa_invert+0x86>
    130e:	00 97       	sbiw	r24, 0x00	; 0
    1310:	61 05       	cpc	r22, r1
    1312:	71 05       	cpc	r23, r1
    1314:	08 95       	ret
    1316:	9b 01       	movw	r18, r22
    1318:	ac 01       	movw	r20, r24
    131a:	0a 2e       	mov	r0, r26
    131c:	06 94       	lsr	r0
    131e:	57 95       	ror	r21
    1320:	47 95       	ror	r20
    1322:	37 95       	ror	r19
    1324:	27 95       	ror	r18
    1326:	ba 95       	dec	r27
    1328:	c9 f7       	brne	.-14     	; 0x131c <__ultoa_invert+0xa2>
    132a:	62 0f       	add	r22, r18
    132c:	73 1f       	adc	r23, r19
    132e:	84 1f       	adc	r24, r20
    1330:	95 1f       	adc	r25, r21
    1332:	a0 1d       	adc	r26, r0
    1334:	08 95       	ret

00001336 <_exit>:
    1336:	f8 94       	cli

00001338 <__stop_program>:
    1338:	ff cf       	rjmp	.-2      	; 0x1338 <__stop_program>
