
node 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000060  00800200  00001746  000017da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001746  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001d  00800260  00800260  0000183a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000183a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000310  00000000  00000000  00001896  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002053  00000000  00000000  00001ba6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ef5  00000000  00000000  00003bf9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000171a  00000000  00000000  00004aee  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000006c4  00000000  00000000  00006208  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000819  00000000  00000000  000068cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001091  00000000  00000000  000070e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000270  00000000  00000000  00008176  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c2 c0       	rjmp	.+388    	; 0x186 <__ctors_end>
       2:	00 00       	nop
       4:	e0 c0       	rjmp	.+448    	; 0x1c6 <__bad_interrupt>
       6:	00 00       	nop
       8:	de c0       	rjmp	.+444    	; 0x1c6 <__bad_interrupt>
       a:	00 00       	nop
       c:	dc c0       	rjmp	.+440    	; 0x1c6 <__bad_interrupt>
       e:	00 00       	nop
      10:	da c0       	rjmp	.+436    	; 0x1c6 <__bad_interrupt>
      12:	00 00       	nop
      14:	d8 c0       	rjmp	.+432    	; 0x1c6 <__bad_interrupt>
      16:	00 00       	nop
      18:	36 c1       	rjmp	.+620    	; 0x286 <__vector_6>
      1a:	00 00       	nop
      1c:	d4 c0       	rjmp	.+424    	; 0x1c6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d2 c0       	rjmp	.+420    	; 0x1c6 <__bad_interrupt>
      22:	00 00       	nop
      24:	d0 c0       	rjmp	.+416    	; 0x1c6 <__bad_interrupt>
      26:	00 00       	nop
      28:	ce c0       	rjmp	.+412    	; 0x1c6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	cc c0       	rjmp	.+408    	; 0x1c6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ca c0       	rjmp	.+404    	; 0x1c6 <__bad_interrupt>
      32:	00 00       	nop
      34:	c8 c0       	rjmp	.+400    	; 0x1c6 <__bad_interrupt>
      36:	00 00       	nop
      38:	c6 c0       	rjmp	.+396    	; 0x1c6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c4 c0       	rjmp	.+392    	; 0x1c6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	c2 c0       	rjmp	.+388    	; 0x1c6 <__bad_interrupt>
      42:	00 00       	nop
      44:	c0 c0       	rjmp	.+384    	; 0x1c6 <__bad_interrupt>
      46:	00 00       	nop
      48:	be c0       	rjmp	.+380    	; 0x1c6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	bc c0       	rjmp	.+376    	; 0x1c6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ba c0       	rjmp	.+372    	; 0x1c6 <__bad_interrupt>
      52:	00 00       	nop
      54:	b8 c0       	rjmp	.+368    	; 0x1c6 <__bad_interrupt>
      56:	00 00       	nop
      58:	b6 c0       	rjmp	.+364    	; 0x1c6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b4 c0       	rjmp	.+360    	; 0x1c6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b2 c0       	rjmp	.+356    	; 0x1c6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b0 c0       	rjmp	.+352    	; 0x1c6 <__bad_interrupt>
      66:	00 00       	nop
      68:	ae c0       	rjmp	.+348    	; 0x1c6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ac c0       	rjmp	.+344    	; 0x1c6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	aa c0       	rjmp	.+340    	; 0x1c6 <__bad_interrupt>
      72:	00 00       	nop
      74:	a8 c0       	rjmp	.+336    	; 0x1c6 <__bad_interrupt>
      76:	00 00       	nop
      78:	a6 c0       	rjmp	.+332    	; 0x1c6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a4 c0       	rjmp	.+328    	; 0x1c6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	59 c5       	rjmp	.+2738   	; 0xb34 <__vector_32>
      82:	00 00       	nop
      84:	a0 c0       	rjmp	.+320    	; 0x1c6 <__bad_interrupt>
      86:	00 00       	nop
      88:	9e c0       	rjmp	.+316    	; 0x1c6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	9c c0       	rjmp	.+312    	; 0x1c6 <__bad_interrupt>
      8e:	00 00       	nop
      90:	9a c0       	rjmp	.+308    	; 0x1c6 <__bad_interrupt>
      92:	00 00       	nop
      94:	98 c0       	rjmp	.+304    	; 0x1c6 <__bad_interrupt>
      96:	00 00       	nop
      98:	96 c0       	rjmp	.+300    	; 0x1c6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	9e c5       	rjmp	.+2876   	; 0xbda <__vector_39>
      9e:	00 00       	nop
      a0:	92 c0       	rjmp	.+292    	; 0x1c6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	90 c0       	rjmp	.+288    	; 0x1c6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	8e c0       	rjmp	.+284    	; 0x1c6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	8c c0       	rjmp	.+280    	; 0x1c6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	8a c0       	rjmp	.+276    	; 0x1c6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	88 c0       	rjmp	.+272    	; 0x1c6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	86 c0       	rjmp	.+268    	; 0x1c6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	84 c0       	rjmp	.+264    	; 0x1c6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	82 c0       	rjmp	.+260    	; 0x1c6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	80 c0       	rjmp	.+256    	; 0x1c6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	7e c0       	rjmp	.+252    	; 0x1c6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	7c c0       	rjmp	.+248    	; 0x1c6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	7a c0       	rjmp	.+244    	; 0x1c6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	78 c0       	rjmp	.+240    	; 0x1c6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	76 c0       	rjmp	.+236    	; 0x1c6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	74 c0       	rjmp	.+232    	; 0x1c6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	72 c0       	rjmp	.+228    	; 0x1c6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 06       	cpc	r0, r24
      e6:	5a 06       	cpc	r5, r26
      e8:	5a 06       	cpc	r5, r26
      ea:	5a 06       	cpc	r5, r26
      ec:	5a 06       	cpc	r5, r26
      ee:	5a 06       	cpc	r5, r26
      f0:	5a 06       	cpc	r5, r26
      f2:	5a 06       	cpc	r5, r26
      f4:	08 06       	cpc	r0, r24
      f6:	5a 06       	cpc	r5, r26
      f8:	5a 06       	cpc	r5, r26
      fa:	5a 06       	cpc	r5, r26
      fc:	5a 06       	cpc	r5, r26
      fe:	5a 06       	cpc	r5, r26
     100:	5a 06       	cpc	r5, r26
     102:	5a 06       	cpc	r5, r26
     104:	0a 06       	cpc	r0, r26
     106:	5a 06       	cpc	r5, r26
     108:	5a 06       	cpc	r5, r26
     10a:	5a 06       	cpc	r5, r26
     10c:	5a 06       	cpc	r5, r26
     10e:	5a 06       	cpc	r5, r26
     110:	5a 06       	cpc	r5, r26
     112:	5a 06       	cpc	r5, r26
     114:	5a 06       	cpc	r5, r26
     116:	5a 06       	cpc	r5, r26
     118:	5a 06       	cpc	r5, r26
     11a:	5a 06       	cpc	r5, r26
     11c:	5a 06       	cpc	r5, r26
     11e:	5a 06       	cpc	r5, r26
     120:	5a 06       	cpc	r5, r26
     122:	5a 06       	cpc	r5, r26
     124:	0a 06       	cpc	r0, r26
     126:	5a 06       	cpc	r5, r26
     128:	5a 06       	cpc	r5, r26
     12a:	5a 06       	cpc	r5, r26
     12c:	5a 06       	cpc	r5, r26
     12e:	5a 06       	cpc	r5, r26
     130:	5a 06       	cpc	r5, r26
     132:	5a 06       	cpc	r5, r26
     134:	5a 06       	cpc	r5, r26
     136:	5a 06       	cpc	r5, r26
     138:	5a 06       	cpc	r5, r26
     13a:	5a 06       	cpc	r5, r26
     13c:	5a 06       	cpc	r5, r26
     13e:	5a 06       	cpc	r5, r26
     140:	5a 06       	cpc	r5, r26
     142:	5a 06       	cpc	r5, r26
     144:	56 06       	cpc	r5, r22
     146:	5a 06       	cpc	r5, r26
     148:	5a 06       	cpc	r5, r26
     14a:	5a 06       	cpc	r5, r26
     14c:	5a 06       	cpc	r5, r26
     14e:	5a 06       	cpc	r5, r26
     150:	5a 06       	cpc	r5, r26
     152:	5a 06       	cpc	r5, r26
     154:	33 06       	cpc	r3, r19
     156:	5a 06       	cpc	r5, r26
     158:	5a 06       	cpc	r5, r26
     15a:	5a 06       	cpc	r5, r26
     15c:	5a 06       	cpc	r5, r26
     15e:	5a 06       	cpc	r5, r26
     160:	5a 06       	cpc	r5, r26
     162:	5a 06       	cpc	r5, r26
     164:	5a 06       	cpc	r5, r26
     166:	5a 06       	cpc	r5, r26
     168:	5a 06       	cpc	r5, r26
     16a:	5a 06       	cpc	r5, r26
     16c:	5a 06       	cpc	r5, r26
     16e:	5a 06       	cpc	r5, r26
     170:	5a 06       	cpc	r5, r26
     172:	5a 06       	cpc	r5, r26
     174:	27 06       	cpc	r2, r23
     176:	5a 06       	cpc	r5, r26
     178:	5a 06       	cpc	r5, r26
     17a:	5a 06       	cpc	r5, r26
     17c:	5a 06       	cpc	r5, r26
     17e:	5a 06       	cpc	r5, r26
     180:	5a 06       	cpc	r5, r26
     182:	5a 06       	cpc	r5, r26
     184:	45 06       	cpc	r4, r21

00000186 <__ctors_end>:
     186:	11 24       	eor	r1, r1
     188:	1f be       	out	0x3f, r1	; 63
     18a:	cf ef       	ldi	r28, 0xFF	; 255
     18c:	d1 e2       	ldi	r29, 0x21	; 33
     18e:	de bf       	out	0x3e, r29	; 62
     190:	cd bf       	out	0x3d, r28	; 61
     192:	00 e0       	ldi	r16, 0x00	; 0
     194:	0c bf       	out	0x3c, r16	; 60

00000196 <__do_copy_data>:
     196:	12 e0       	ldi	r17, 0x02	; 2
     198:	a0 e0       	ldi	r26, 0x00	; 0
     19a:	b2 e0       	ldi	r27, 0x02	; 2
     19c:	e6 e4       	ldi	r30, 0x46	; 70
     19e:	f7 e1       	ldi	r31, 0x17	; 23
     1a0:	00 e0       	ldi	r16, 0x00	; 0
     1a2:	0b bf       	out	0x3b, r16	; 59
     1a4:	02 c0       	rjmp	.+4      	; 0x1aa <__do_copy_data+0x14>
     1a6:	07 90       	elpm	r0, Z+
     1a8:	0d 92       	st	X+, r0
     1aa:	a0 36       	cpi	r26, 0x60	; 96
     1ac:	b1 07       	cpc	r27, r17
     1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__do_copy_data+0x10>

000001b0 <__do_clear_bss>:
     1b0:	22 e0       	ldi	r18, 0x02	; 2
     1b2:	a0 e6       	ldi	r26, 0x60	; 96
     1b4:	b2 e0       	ldi	r27, 0x02	; 2
     1b6:	01 c0       	rjmp	.+2      	; 0x1ba <.do_clear_bss_start>

000001b8 <.do_clear_bss_loop>:
     1b8:	1d 92       	st	X+, r1

000001ba <.do_clear_bss_start>:
     1ba:	ad 37       	cpi	r26, 0x7D	; 125
     1bc:	b2 07       	cpc	r27, r18
     1be:	e1 f7       	brne	.-8      	; 0x1b8 <.do_clear_bss_loop>
     1c0:	1f d3       	rcall	.+1598   	; 0x800 <main>
     1c2:	0c 94 a1 0b 	jmp	0x1742	; 0x1742 <_exit>

000001c6 <__bad_interrupt>:
     1c6:	1c cf       	rjmp	.-456    	; 0x0 <__vectors>

000001c8 <CAN_init>:
}

int message_received_flag()
{
	return message_received;
}
     1c8:	cf 93       	push	r28
     1ca:	c8 2f       	mov	r28, r24
     1cc:	1c d2       	rcall	.+1080   	; 0x606 <MCP_init>
     1ce:	4f ef       	ldi	r20, 0xFF	; 255
     1d0:	60 e6       	ldi	r22, 0x60	; 96
     1d2:	80 e6       	ldi	r24, 0x60	; 96
     1d4:	1b d2       	rcall	.+1078   	; 0x60c <MCP_bit_modify>
     1d6:	41 e0       	ldi	r20, 0x01	; 1
     1d8:	61 e0       	ldi	r22, 0x01	; 1
     1da:	8b e2       	ldi	r24, 0x2B	; 43
     1dc:	17 d2       	rcall	.+1070   	; 0x60c <MCP_bit_modify>
     1de:	cc 23       	and	r28, r28
     1e0:	19 f0       	breq	.+6      	; 0x1e8 <CAN_init+0x20>
     1e2:	c1 30       	cpi	r28, 0x01	; 1
     1e4:	31 f0       	breq	.+12     	; 0x1f2 <CAN_init+0x2a>
     1e6:	09 c0       	rjmp	.+18     	; 0x1fa <CAN_init+0x32>
     1e8:	40 e4       	ldi	r20, 0x40	; 64
     1ea:	60 ee       	ldi	r22, 0xE0	; 224
     1ec:	8f e0       	ldi	r24, 0x0F	; 15
     1ee:	0e d2       	rcall	.+1052   	; 0x60c <MCP_bit_modify>
     1f0:	04 c0       	rjmp	.+8      	; 0x1fa <CAN_init+0x32>
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	60 ee       	ldi	r22, 0xE0	; 224
     1f6:	8f e0       	ldi	r24, 0x0F	; 15
     1f8:	09 d2       	rcall	.+1042   	; 0x60c <MCP_bit_modify>
     1fa:	ea e6       	ldi	r30, 0x6A	; 106
     1fc:	f0 e0       	ldi	r31, 0x00	; 0
     1fe:	80 81       	ld	r24, Z
     200:	88 60       	ori	r24, 0x08	; 8
     202:	80 83       	st	Z, r24
     204:	ed 9a       	sbi	0x1d, 5	; 29
     206:	cf 91       	pop	r28
     208:	08 95       	ret

0000020a <CAN_send_frame>:
     20a:	ef 92       	push	r14
     20c:	ff 92       	push	r15
     20e:	0f 93       	push	r16
     210:	1f 93       	push	r17
     212:	cf 93       	push	r28
     214:	df 93       	push	r29
     216:	7c 01       	movw	r14, r24
     218:	fc 01       	movw	r30, r24
     21a:	80 81       	ld	r24, Z
     21c:	91 81       	ldd	r25, Z+1	; 0x01
     21e:	95 95       	asr	r25
     220:	87 95       	ror	r24
     222:	95 95       	asr	r25
     224:	87 95       	ror	r24
     226:	95 95       	asr	r25
     228:	87 95       	ror	r24
     22a:	61 e3       	ldi	r22, 0x31	; 49
     22c:	a7 d1       	rcall	.+846    	; 0x57c <MCP_write>
     22e:	f7 01       	movw	r30, r14
     230:	80 81       	ld	r24, Z
     232:	62 e3       	ldi	r22, 0x32	; 50
     234:	82 95       	swap	r24
     236:	88 0f       	add	r24, r24
     238:	80 7e       	andi	r24, 0xE0	; 224
     23a:	a0 d1       	rcall	.+832    	; 0x57c <MCP_write>
     23c:	65 e3       	ldi	r22, 0x35	; 53
     23e:	f7 01       	movw	r30, r14
     240:	82 81       	ldd	r24, Z+2	; 0x02
     242:	9c d1       	rcall	.+824    	; 0x57c <MCP_write>
     244:	f7 01       	movw	r30, r14
     246:	82 81       	ldd	r24, Z+2	; 0x02
     248:	18 16       	cp	r1, r24
     24a:	a4 f4       	brge	.+40     	; 0x274 <CAN_send_frame+0x6a>
     24c:	87 01       	movw	r16, r14
     24e:	0d 5f       	subi	r16, 0xFD	; 253
     250:	1f 4f       	sbci	r17, 0xFF	; 255
     252:	c0 e0       	ldi	r28, 0x00	; 0
     254:	d0 e0       	ldi	r29, 0x00	; 0
     256:	6c 2f       	mov	r22, r28
     258:	6a 5c       	subi	r22, 0xCA	; 202
     25a:	f8 01       	movw	r30, r16
     25c:	81 91       	ld	r24, Z+
     25e:	8f 01       	movw	r16, r30
     260:	8d d1       	rcall	.+794    	; 0x57c <MCP_write>
     262:	21 96       	adiw	r28, 0x01	; 1
     264:	f7 01       	movw	r30, r14
     266:	22 81       	ldd	r18, Z+2	; 0x02
     268:	33 27       	eor	r19, r19
     26a:	27 fd       	sbrc	r18, 7
     26c:	30 95       	com	r19
     26e:	c2 17       	cp	r28, r18
     270:	d3 07       	cpc	r29, r19
     272:	8c f3       	brlt	.-30     	; 0x256 <CAN_send_frame+0x4c>
     274:	80 e0       	ldi	r24, 0x00	; 0
     276:	a6 d1       	rcall	.+844    	; 0x5c4 <MCP_RTS>
     278:	df 91       	pop	r29
     27a:	cf 91       	pop	r28
     27c:	1f 91       	pop	r17
     27e:	0f 91       	pop	r16
     280:	ff 90       	pop	r15
     282:	ef 90       	pop	r14
     284:	08 95       	ret

00000286 <__vector_6>:
     286:	1f 92       	push	r1
     288:	0f 92       	push	r0
     28a:	0f b6       	in	r0, 0x3f	; 63
     28c:	0f 92       	push	r0
     28e:	11 24       	eor	r1, r1
     290:	8f 93       	push	r24
     292:	9f 93       	push	r25
     294:	81 e0       	ldi	r24, 0x01	; 1
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	90 93 61 02 	sts	0x0261, r25
     29c:	80 93 60 02 	sts	0x0260, r24
     2a0:	9f 91       	pop	r25
     2a2:	8f 91       	pop	r24
     2a4:	0f 90       	pop	r0
     2a6:	0f be       	out	0x3f, r0	; 63
     2a8:	0f 90       	pop	r0
     2aa:	1f 90       	pop	r1
     2ac:	18 95       	reti

000002ae <CAN_receive_transmission>:
     2ae:	8f 92       	push	r8
     2b0:	9f 92       	push	r9
     2b2:	af 92       	push	r10
     2b4:	bf 92       	push	r11
     2b6:	cf 92       	push	r12
     2b8:	df 92       	push	r13
     2ba:	ef 92       	push	r14
     2bc:	ff 92       	push	r15
     2be:	0f 93       	push	r16
     2c0:	1f 93       	push	r17
     2c2:	cf 93       	push	r28
     2c4:	df 93       	push	r29
     2c6:	cd b7       	in	r28, 0x3d	; 61
     2c8:	de b7       	in	r29, 0x3e	; 62
     2ca:	2b 97       	sbiw	r28, 0x0b	; 11
     2cc:	0f b6       	in	r0, 0x3f	; 63
     2ce:	f8 94       	cli
     2d0:	de bf       	out	0x3e, r29	; 62
     2d2:	0f be       	out	0x3f, r0	; 63
     2d4:	cd bf       	out	0x3d, r28	; 61
     2d6:	7c 01       	movw	r14, r24
     2d8:	9e 01       	movw	r18, r28
     2da:	25 5f       	subi	r18, 0xF5	; 245
     2dc:	3f 4f       	sbci	r19, 0xFF	; 255
     2de:	fe 01       	movw	r30, r28
     2e0:	34 96       	adiw	r30, 0x04	; 4
     2e2:	11 92       	st	Z+, r1
     2e4:	e2 17       	cp	r30, r18
     2e6:	f3 07       	cpc	r31, r19
     2e8:	e1 f7       	brne	.-8      	; 0x2e2 <CAN_receive_transmission+0x34>
     2ea:	80 91 60 02 	lds	r24, 0x0260
     2ee:	90 91 61 02 	lds	r25, 0x0261
     2f2:	89 2b       	or	r24, r25
     2f4:	71 f4       	brne	.+28     	; 0x312 <CAN_receive_transmission+0x64>
     2f6:	8f ef       	ldi	r24, 0xFF	; 255
     2f8:	9f ef       	ldi	r25, 0xFF	; 255
     2fa:	9a 83       	std	Y+2, r25	; 0x02
     2fc:	89 83       	std	Y+1, r24	; 0x01
     2fe:	1b 82       	std	Y+3, r1	; 0x03
     300:	8b e0       	ldi	r24, 0x0B	; 11
     302:	fe 01       	movw	r30, r28
     304:	31 96       	adiw	r30, 0x01	; 1
     306:	d7 01       	movw	r26, r14
     308:	01 90       	ld	r0, Z+
     30a:	0d 92       	st	X+, r0
     30c:	8a 95       	dec	r24
     30e:	e1 f7       	brne	.-8      	; 0x308 <CAN_receive_transmission+0x5a>
     310:	45 c0       	rjmp	.+138    	; 0x39c <CAN_receive_transmission+0xee>
     312:	10 92 61 02 	sts	0x0261, r1
     316:	10 92 60 02 	sts	0x0260, r1
     31a:	81 e6       	ldi	r24, 0x61	; 97
     31c:	42 d1       	rcall	.+644    	; 0x5a2 <MCP_read>
     31e:	a8 2e       	mov	r10, r24
     320:	82 e6       	ldi	r24, 0x62	; 98
     322:	3f d1       	rcall	.+638    	; 0x5a2 <MCP_read>
     324:	b1 2c       	mov	r11, r1
     326:	aa 0c       	add	r10, r10
     328:	bb 1c       	adc	r11, r11
     32a:	aa 0c       	add	r10, r10
     32c:	bb 1c       	adc	r11, r11
     32e:	aa 0c       	add	r10, r10
     330:	bb 1c       	adc	r11, r11
     332:	82 95       	swap	r24
     334:	86 95       	lsr	r24
     336:	87 70       	andi	r24, 0x07	; 7
     338:	a8 0e       	add	r10, r24
     33a:	b1 1c       	adc	r11, r1
     33c:	85 e6       	ldi	r24, 0x65	; 101
     33e:	31 d1       	rcall	.+610    	; 0x5a2 <MCP_read>
     340:	88 2e       	mov	r8, r24
     342:	18 16       	cp	r1, r24
     344:	e4 f4       	brge	.+56     	; 0x37e <CAN_receive_transmission+0xd0>
     346:	cc 24       	eor	r12, r12
     348:	c3 94       	inc	r12
     34a:	d1 2c       	mov	r13, r1
     34c:	cc 0e       	add	r12, r28
     34e:	dd 1e       	adc	r13, r29
     350:	83 e0       	ldi	r24, 0x03	; 3
     352:	c8 0e       	add	r12, r24
     354:	d1 1c       	adc	r13, r1
     356:	c8 0c       	add	r12, r8
     358:	d1 1c       	adc	r13, r1
     35a:	87 fc       	sbrc	r8, 7
     35c:	da 94       	dec	r13
     35e:	8e 01       	movw	r16, r28
     360:	0c 5f       	subi	r16, 0xFC	; 252
     362:	1f 4f       	sbci	r17, 0xFF	; 255
     364:	0f 2e       	mov	r0, r31
     366:	f6 e6       	ldi	r31, 0x66	; 102
     368:	9f 2e       	mov	r9, r31
     36a:	f0 2d       	mov	r31, r0
     36c:	89 2d       	mov	r24, r9
     36e:	19 d1       	rcall	.+562    	; 0x5a2 <MCP_read>
     370:	f8 01       	movw	r30, r16
     372:	81 93       	st	Z+, r24
     374:	8f 01       	movw	r16, r30
     376:	93 94       	inc	r9
     378:	ec 15       	cp	r30, r12
     37a:	fd 05       	cpc	r31, r13
     37c:	b9 f7       	brne	.-18     	; 0x36c <CAN_receive_transmission+0xbe>
     37e:	40 e0       	ldi	r20, 0x00	; 0
     380:	61 e0       	ldi	r22, 0x01	; 1
     382:	8c e2       	ldi	r24, 0x2C	; 44
     384:	43 d1       	rcall	.+646    	; 0x60c <MCP_bit_modify>
     386:	ba 82       	std	Y+2, r11	; 0x02
     388:	a9 82       	std	Y+1, r10	; 0x01
     38a:	8b 82       	std	Y+3, r8	; 0x03
     38c:	8b e0       	ldi	r24, 0x0B	; 11
     38e:	fe 01       	movw	r30, r28
     390:	31 96       	adiw	r30, 0x01	; 1
     392:	d7 01       	movw	r26, r14
     394:	01 90       	ld	r0, Z+
     396:	0d 92       	st	X+, r0
     398:	8a 95       	dec	r24
     39a:	e1 f7       	brne	.-8      	; 0x394 <CAN_receive_transmission+0xe6>
     39c:	c7 01       	movw	r24, r14
     39e:	2b 96       	adiw	r28, 0x0b	; 11
     3a0:	0f b6       	in	r0, 0x3f	; 63
     3a2:	f8 94       	cli
     3a4:	de bf       	out	0x3e, r29	; 62
     3a6:	0f be       	out	0x3f, r0	; 63
     3a8:	cd bf       	out	0x3d, r28	; 61
     3aa:	df 91       	pop	r29
     3ac:	cf 91       	pop	r28
     3ae:	1f 91       	pop	r17
     3b0:	0f 91       	pop	r16
     3b2:	ff 90       	pop	r15
     3b4:	ef 90       	pop	r14
     3b6:	df 90       	pop	r13
     3b8:	cf 90       	pop	r12
     3ba:	bf 90       	pop	r11
     3bc:	af 90       	pop	r10
     3be:	9f 90       	pop	r9
     3c0:	8f 90       	pop	r8
     3c2:	08 95       	ret

000003c4 <CAN_frame_init>:
     3c4:	cf 93       	push	r28
     3c6:	df 93       	push	r29
     3c8:	cd b7       	in	r28, 0x3d	; 61
     3ca:	de b7       	in	r29, 0x3e	; 62
     3cc:	2b 97       	sbiw	r28, 0x0b	; 11
     3ce:	0f b6       	in	r0, 0x3f	; 63
     3d0:	f8 94       	cli
     3d2:	de bf       	out	0x3e, r29	; 62
     3d4:	0f be       	out	0x3f, r0	; 63
     3d6:	cd bf       	out	0x3d, r28	; 61
     3d8:	14 16       	cp	r1, r20
     3da:	5c f4       	brge	.+22     	; 0x3f2 <CAN_frame_init+0x2e>
     3dc:	fe 01       	movw	r30, r28
     3de:	34 96       	adiw	r30, 0x04	; 4
     3e0:	9f 01       	movw	r18, r30
     3e2:	24 0f       	add	r18, r20
     3e4:	31 1d       	adc	r19, r1
     3e6:	47 fd       	sbrc	r20, 7
     3e8:	3a 95       	dec	r19
     3ea:	11 92       	st	Z+, r1
     3ec:	e2 17       	cp	r30, r18
     3ee:	f3 07       	cpc	r31, r19
     3f0:	e1 f7       	brne	.-8      	; 0x3ea <CAN_frame_init+0x26>
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	69 83       	std	Y+1, r22	; 0x01
     3f6:	4b 83       	std	Y+3, r20	; 0x03
     3f8:	2b e0       	ldi	r18, 0x0B	; 11
     3fa:	fe 01       	movw	r30, r28
     3fc:	31 96       	adiw	r30, 0x01	; 1
     3fe:	dc 01       	movw	r26, r24
     400:	01 90       	ld	r0, Z+
     402:	0d 92       	st	X+, r0
     404:	2a 95       	dec	r18
     406:	e1 f7       	brne	.-8      	; 0x400 <CAN_frame_init+0x3c>
     408:	2b 96       	adiw	r28, 0x0b	; 11
     40a:	0f b6       	in	r0, 0x3f	; 63
     40c:	f8 94       	cli
     40e:	de bf       	out	0x3e, r29	; 62
     410:	0f be       	out	0x3f, r0	; 63
     412:	cd bf       	out	0x3d, r28	; 61
     414:	df 91       	pop	r29
     416:	cf 91       	pop	r28
     418:	08 95       	ret

0000041a <CAN_handle_message>:



int CAN_handle_message()
{
     41a:	cf 93       	push	r28
     41c:	df 93       	push	r29
     41e:	cd b7       	in	r28, 0x3d	; 61
     420:	de b7       	in	r29, 0x3e	; 62
     422:	2b 97       	sbiw	r28, 0x0b	; 11
     424:	0f b6       	in	r0, 0x3f	; 63
     426:	f8 94       	cli
     428:	de bf       	out	0x3e, r29	; 62
     42a:	0f be       	out	0x3f, r0	; 63
     42c:	cd bf       	out	0x3d, r28	; 61
	
	//Collects the message
	struct can_frame message = CAN_receive_transmission();
     42e:	ce 01       	movw	r24, r28
     430:	01 96       	adiw	r24, 0x01	; 1
     432:	3d df       	rcall	.-390    	; 0x2ae <CAN_receive_transmission>
     434:	6c 81       	ldd	r22, Y+4	; 0x04
     436:	4d 81       	ldd	r20, Y+5	; 0x05

	switch (message.id)
     438:	89 81       	ldd	r24, Y+1	; 0x01
     43a:	9a 81       	ldd	r25, Y+2	; 0x02
     43c:	83 30       	cpi	r24, 0x03	; 3
     43e:	91 05       	cpc	r25, r1
     440:	09 f4       	brne	.+2      	; 0x444 <CAN_handle_message+0x2a>
     442:	65 c0       	rjmp	.+202    	; 0x50e <CAN_handle_message+0xf4>
     444:	24 f4       	brge	.+8      	; 0x44e <CAN_handle_message+0x34>
     446:	02 97       	sbiw	r24, 0x02	; 2
     448:	09 f4       	brne	.+2      	; 0x44c <CAN_handle_message+0x32>
     44a:	42 c0       	rjmp	.+132    	; 0x4d0 <CAN_handle_message+0xb6>
     44c:	8c c0       	rjmp	.+280    	; 0x566 <CAN_handle_message+0x14c>
     44e:	84 30       	cpi	r24, 0x04	; 4
     450:	91 05       	cpc	r25, r1
     452:	21 f0       	breq	.+8      	; 0x45c <CAN_handle_message+0x42>
     454:	05 97       	sbiw	r24, 0x05	; 5
     456:	09 f4       	brne	.+2      	; 0x45a <CAN_handle_message+0x40>
     458:	7b c0       	rjmp	.+246    	; 0x550 <CAN_handle_message+0x136>
     45a:	85 c0       	rjmp	.+266    	; 0x566 <CAN_handle_message+0x14c>
		
		#ifdef __AVR_ATmega2560__  //THESE IDS ARE ONLY RELEVANT FOR NODE 2
		case (ID_INPUT_UPDATE):	//MESSAGE IS CONTROL UPDATE, [x_pos, y_pos, joystick_button, lslider]
		{
			//Sends data right to regulator
			ctrl_update_ref(message.data[0] / REFERENCE_DIVIDER);
     45c:	77 27       	eor	r23, r23
     45e:	67 fd       	sbrc	r22, 7
     460:	70 95       	com	r23
     462:	87 2f       	mov	r24, r23
     464:	97 2f       	mov	r25, r23
     466:	84 d5       	rcall	.+2824   	; 0xf70 <__floatsisf>
     468:	20 e0       	ldi	r18, 0x00	; 0
     46a:	30 e0       	ldi	r19, 0x00	; 0
     46c:	40 e6       	ldi	r20, 0x60	; 96
     46e:	51 e4       	ldi	r21, 0x41	; 65
     470:	e4 d4       	rcall	.+2504   	; 0xe3a <__divsf3>
     472:	4b d5       	rcall	.+2710   	; 0xf0a <__fixsfsi>
     474:	cb 01       	movw	r24, r22
     476:	f7 d1       	rcall	.+1006   	; 0x866 <ctrl_update_ref>
			
			//Fires solenoid
			if (message.data[2]) ctrl_fire_sol();
     478:	8e 81       	ldd	r24, Y+6	; 0x06
     47a:	81 11       	cpse	r24, r1
     47c:	d8 d2       	rcall	.+1456   	; 0xa2e <ctrl_fire_sol>
			
			//Updates servo position
			pwm_set_duty_ms(1.2*message.data[3]/100.0+0.9);
     47e:	6f 81       	ldd	r22, Y+7	; 0x07
     480:	77 27       	eor	r23, r23
     482:	67 fd       	sbrc	r22, 7
     484:	70 95       	com	r23
     486:	87 2f       	mov	r24, r23
     488:	97 2f       	mov	r25, r23
     48a:	72 d5       	rcall	.+2788   	; 0xf70 <__floatsisf>
     48c:	2a e9       	ldi	r18, 0x9A	; 154
     48e:	39 e9       	ldi	r19, 0x99	; 153
     490:	49 e9       	ldi	r20, 0x99	; 153
     492:	5f e3       	ldi	r21, 0x3F	; 63
     494:	21 d6       	rcall	.+3138   	; 0x10d8 <__mulsf3>
     496:	20 e0       	ldi	r18, 0x00	; 0
     498:	30 e0       	ldi	r19, 0x00	; 0
     49a:	48 ec       	ldi	r20, 0xC8	; 200
     49c:	52 e4       	ldi	r21, 0x42	; 66
     49e:	cd d4       	rcall	.+2458   	; 0xe3a <__divsf3>
     4a0:	26 e6       	ldi	r18, 0x66	; 102
     4a2:	36 e6       	ldi	r19, 0x66	; 102
     4a4:	46 e6       	ldi	r20, 0x66	; 102
     4a6:	5f e3       	ldi	r21, 0x3F	; 63
     4a8:	60 d4       	rcall	.+2240   	; 0xd6a <__addsf3>
     4aa:	ff d2       	rcall	.+1534   	; 0xaaa <pwm_set_duty_ms>
			
			printf("UPDATED CONTROLS r: %d\n", ref_vel);
     4ac:	80 91 75 02 	lds	r24, 0x0275
     4b0:	90 91 76 02 	lds	r25, 0x0276
     4b4:	9f 93       	push	r25
     4b6:	8f 93       	push	r24
     4b8:	87 e1       	ldi	r24, 0x17	; 23
     4ba:	92 e0       	ldi	r25, 0x02	; 2
     4bc:	9f 93       	push	r25
     4be:	8f 93       	push	r24
     4c0:	6e d6       	rcall	.+3292   	; 0x119e <printf>
			
			break;
     4c2:	0f 90       	pop	r0
     4c4:	0f 90       	pop	r0
     4c6:	0f 90       	pop	r0
     4c8:	0f 90       	pop	r0
			break;
		}
		#endif
	}
	
	return 0;
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	90 e0       	ldi	r25, 0x00	; 0
			//Updates servo position
			pwm_set_duty_ms(1.2*message.data[3]/100.0+0.9);
			
			printf("UPDATED CONTROLS r: %d\n", ref_vel);
			
			break;
     4ce:	4d c0       	rjmp	.+154    	; 0x56a <CAN_handle_message+0x150>
		}
		case (ID_REGULATOR_KP): //MESSAGE IS UPDATE TO KP PARAMETER, //Should be message of length 2 with the KP parameter, 1 -> higher bits, 2 -> lower bits
		{
			uint16_t data = (message.data[0] << 8);
     4d0:	77 27       	eor	r23, r23
     4d2:	67 fd       	sbrc	r22, 7
     4d4:	70 95       	com	r23
     4d6:	76 2f       	mov	r23, r22
     4d8:	66 27       	eor	r22, r22
			data |= (message.data[1]);
     4da:	84 2f       	mov	r24, r20
     4dc:	99 27       	eor	r25, r25
     4de:	87 fd       	sbrc	r24, 7
     4e0:	90 95       	com	r25
     4e2:	68 2b       	or	r22, r24
     4e4:	79 2b       	or	r23, r25
			ctrl_update_KP(data / 1000.0);
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	40 d5       	rcall	.+2688   	; 0xf6c <__floatunsisf>
     4ec:	20 e0       	ldi	r18, 0x00	; 0
     4ee:	30 e0       	ldi	r19, 0x00	; 0
     4f0:	4a e7       	ldi	r20, 0x7A	; 122
     4f2:	54 e4       	ldi	r21, 0x44	; 68
     4f4:	a2 d4       	rcall	.+2372   	; 0xe3a <__divsf3>
     4f6:	a7 d2       	rcall	.+1358   	; 0xa46 <ctrl_update_KP>
			printf("PARAMETER CHANGED");
     4f8:	8f e2       	ldi	r24, 0x2F	; 47
     4fa:	92 e0       	ldi	r25, 0x02	; 2
     4fc:	9f 93       	push	r25
     4fe:	8f 93       	push	r24
     500:	4e d6       	rcall	.+3228   	; 0x119e <printf>
			ctr_reset_integral();
     502:	aa d2       	rcall	.+1364   	; 0xa58 <ctr_reset_integral>
			break;
     504:	0f 90       	pop	r0
     506:	0f 90       	pop	r0
			break;
		}
		#endif
	}
	
	return 0;
     508:	80 e0       	ldi	r24, 0x00	; 0
     50a:	90 e0       	ldi	r25, 0x00	; 0
			uint16_t data = (message.data[0] << 8);
			data |= (message.data[1]);
			ctrl_update_KP(data / 1000.0);
			printf("PARAMETER CHANGED");
			ctr_reset_integral();
			break;
     50c:	2e c0       	rjmp	.+92     	; 0x56a <CAN_handle_message+0x150>
		}
		case (ID_REGULATOR_KI): //MESSAGE IS UPDATE TO KP PARAMETER, //Should be message of length 2 with the KI parameter, 1 -> higher bits, 2 -> lower bits
		{
			uint16_t data = (message.data[0] << 8);
     50e:	26 2f       	mov	r18, r22
     510:	33 27       	eor	r19, r19
     512:	27 fd       	sbrc	r18, 7
     514:	30 95       	com	r19
     516:	32 2f       	mov	r19, r18
     518:	22 27       	eor	r18, r18
			data |= (message.data[1]);
     51a:	84 2f       	mov	r24, r20
     51c:	99 27       	eor	r25, r25
     51e:	87 fd       	sbrc	r24, 7
     520:	90 95       	com	r25
     522:	b9 01       	movw	r22, r18
     524:	68 2b       	or	r22, r24
     526:	79 2b       	or	r23, r25
			ctrl_update_KP(data / 1000.0);
     528:	80 e0       	ldi	r24, 0x00	; 0
     52a:	90 e0       	ldi	r25, 0x00	; 0
     52c:	1f d5       	rcall	.+2622   	; 0xf6c <__floatunsisf>
     52e:	20 e0       	ldi	r18, 0x00	; 0
     530:	30 e0       	ldi	r19, 0x00	; 0
     532:	4a e7       	ldi	r20, 0x7A	; 122
     534:	54 e4       	ldi	r21, 0x44	; 68
     536:	81 d4       	rcall	.+2306   	; 0xe3a <__divsf3>
     538:	86 d2       	rcall	.+1292   	; 0xa46 <ctrl_update_KP>
			printf("PARAMETER CHANGED");
     53a:	8f e2       	ldi	r24, 0x2F	; 47
     53c:	92 e0       	ldi	r25, 0x02	; 2
     53e:	9f 93       	push	r25
     540:	8f 93       	push	r24
     542:	2d d6       	rcall	.+3162   	; 0x119e <printf>
			ctr_reset_integral();
     544:	89 d2       	rcall	.+1298   	; 0xa58 <ctr_reset_integral>
			break;
     546:	0f 90       	pop	r0
     548:	0f 90       	pop	r0
			break;
		}
		#endif
	}
	
	return 0;
     54a:	80 e0       	ldi	r24, 0x00	; 0
     54c:	90 e0       	ldi	r25, 0x00	; 0
			uint16_t data = (message.data[0] << 8);
			data |= (message.data[1]);
			ctrl_update_KP(data / 1000.0);
			printf("PARAMETER CHANGED");
			ctr_reset_integral();
			break;
     54e:	0d c0       	rjmp	.+26     	; 0x56a <CAN_handle_message+0x150>
		}
		case (ID_RESTART): //Node 2 restarts
		{
			ctr_reset_integral();
     550:	83 d2       	rcall	.+1286   	; 0xa58 <ctr_reset_integral>
			printf("RESTART");
     552:	81 e4       	ldi	r24, 0x41	; 65
     554:	92 e0       	ldi	r25, 0x02	; 2
     556:	9f 93       	push	r25
     558:	8f 93       	push	r24
     55a:	21 d6       	rcall	.+3138   	; 0x119e <printf>
			return 1;
     55c:	0f 90       	pop	r0
     55e:	0f 90       	pop	r0
     560:	81 e0       	ldi	r24, 0x01	; 1
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	02 c0       	rjmp	.+4      	; 0x56a <CAN_handle_message+0x150>
			break;
		}
		#endif
	}
	
	return 0;
     566:	80 e0       	ldi	r24, 0x00	; 0
     568:	90 e0       	ldi	r25, 0x00	; 0
	
}
     56a:	2b 96       	adiw	r28, 0x0b	; 11
     56c:	0f b6       	in	r0, 0x3f	; 63
     56e:	f8 94       	cli
     570:	de bf       	out	0x3e, r29	; 62
     572:	0f be       	out	0x3f, r0	; 63
     574:	cd bf       	out	0x3d, r28	; 61
     576:	df 91       	pop	r29
     578:	cf 91       	pop	r28
     57a:	08 95       	ret

0000057c <MCP_write>:
     57c:	cf 93       	push	r28
     57e:	df 93       	push	r29
     580:	c8 2f       	mov	r28, r24
     582:	d6 2f       	mov	r29, r22
     584:	81 e0       	ldi	r24, 0x01	; 1
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	77 d0       	rcall	.+238    	; 0x678 <SPI_select_slave>
     58a:	82 e0       	ldi	r24, 0x02	; 2
     58c:	66 d0       	rcall	.+204    	; 0x65a <SPI_send_byte>
     58e:	8d 2f       	mov	r24, r29
     590:	64 d0       	rcall	.+200    	; 0x65a <SPI_send_byte>
     592:	8c 2f       	mov	r24, r28
     594:	62 d0       	rcall	.+196    	; 0x65a <SPI_send_byte>
     596:	80 e0       	ldi	r24, 0x00	; 0
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	6e d0       	rcall	.+220    	; 0x678 <SPI_select_slave>
     59c:	df 91       	pop	r29
     59e:	cf 91       	pop	r28
     5a0:	08 95       	ret

000005a2 <MCP_read>:
     5a2:	cf 93       	push	r28
     5a4:	c8 2f       	mov	r28, r24
     5a6:	81 e0       	ldi	r24, 0x01	; 1
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	66 d0       	rcall	.+204    	; 0x678 <SPI_select_slave>
     5ac:	83 e0       	ldi	r24, 0x03	; 3
     5ae:	55 d0       	rcall	.+170    	; 0x65a <SPI_send_byte>
     5b0:	8c 2f       	mov	r24, r28
     5b2:	53 d0       	rcall	.+166    	; 0x65a <SPI_send_byte>
     5b4:	59 d0       	rcall	.+178    	; 0x668 <SPI_receive_byte>
     5b6:	c8 2f       	mov	r28, r24
     5b8:	80 e0       	ldi	r24, 0x00	; 0
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	5d d0       	rcall	.+186    	; 0x678 <SPI_select_slave>
     5be:	8c 2f       	mov	r24, r28
     5c0:	cf 91       	pop	r28
     5c2:	08 95       	ret

000005c4 <MCP_RTS>:
     5c4:	cf 93       	push	r28
     5c6:	88 23       	and	r24, r24
     5c8:	31 f0       	breq	.+12     	; 0x5d6 <MCP_RTS+0x12>
     5ca:	81 30       	cpi	r24, 0x01	; 1
     5cc:	31 f0       	breq	.+12     	; 0x5da <MCP_RTS+0x16>
     5ce:	82 30       	cpi	r24, 0x02	; 2
     5d0:	31 f0       	breq	.+12     	; 0x5de <MCP_RTS+0x1a>
     5d2:	c0 e8       	ldi	r28, 0x80	; 128
     5d4:	05 c0       	rjmp	.+10     	; 0x5e0 <MCP_RTS+0x1c>
     5d6:	c1 e8       	ldi	r28, 0x81	; 129
     5d8:	03 c0       	rjmp	.+6      	; 0x5e0 <MCP_RTS+0x1c>
     5da:	c2 e8       	ldi	r28, 0x82	; 130
     5dc:	01 c0       	rjmp	.+2      	; 0x5e0 <MCP_RTS+0x1c>
     5de:	c4 e8       	ldi	r28, 0x84	; 132
     5e0:	81 e0       	ldi	r24, 0x01	; 1
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	49 d0       	rcall	.+146    	; 0x678 <SPI_select_slave>
     5e6:	8c 2f       	mov	r24, r28
     5e8:	38 d0       	rcall	.+112    	; 0x65a <SPI_send_byte>
     5ea:	80 e0       	ldi	r24, 0x00	; 0
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	44 d0       	rcall	.+136    	; 0x678 <SPI_select_slave>
     5f0:	cf 91       	pop	r28
     5f2:	08 95       	ret

000005f4 <MCP_reset>:
     5f4:	81 e0       	ldi	r24, 0x01	; 1
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	3f d0       	rcall	.+126    	; 0x678 <SPI_select_slave>
     5fa:	80 ec       	ldi	r24, 0xC0	; 192
     5fc:	2e d0       	rcall	.+92     	; 0x65a <SPI_send_byte>
     5fe:	80 e0       	ldi	r24, 0x00	; 0
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	3a c0       	rjmp	.+116    	; 0x678 <SPI_select_slave>
     604:	08 95       	ret

00000606 <MCP_init>:
     606:	1a d0       	rcall	.+52     	; 0x63c <SPI_init>
     608:	f5 cf       	rjmp	.-22     	; 0x5f4 <MCP_reset>
     60a:	08 95       	ret

0000060c <MCP_bit_modify>:
     60c:	1f 93       	push	r17
     60e:	cf 93       	push	r28
     610:	df 93       	push	r29
     612:	18 2f       	mov	r17, r24
     614:	d6 2f       	mov	r29, r22
     616:	c4 2f       	mov	r28, r20
     618:	81 e0       	ldi	r24, 0x01	; 1
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	2d d0       	rcall	.+90     	; 0x678 <SPI_select_slave>
     61e:	85 e0       	ldi	r24, 0x05	; 5
     620:	1c d0       	rcall	.+56     	; 0x65a <SPI_send_byte>
     622:	81 2f       	mov	r24, r17
     624:	1a d0       	rcall	.+52     	; 0x65a <SPI_send_byte>
     626:	8d 2f       	mov	r24, r29
     628:	18 d0       	rcall	.+48     	; 0x65a <SPI_send_byte>
     62a:	8c 2f       	mov	r24, r28
     62c:	16 d0       	rcall	.+44     	; 0x65a <SPI_send_byte>
     62e:	80 e0       	ldi	r24, 0x00	; 0
     630:	90 e0       	ldi	r25, 0x00	; 0
     632:	22 d0       	rcall	.+68     	; 0x678 <SPI_select_slave>
     634:	df 91       	pop	r29
     636:	cf 91       	pop	r28
     638:	1f 91       	pop	r17
     63a:	08 95       	ret

0000063c <SPI_init>:
     63c:	22 9a       	sbi	0x04, 2	; 4
     63e:	21 9a       	sbi	0x04, 1	; 4
     640:	27 9a       	sbi	0x04, 7	; 4
     642:	20 9a       	sbi	0x04, 0	; 4
     644:	23 98       	cbi	0x04, 3	; 4
     646:	8c b5       	in	r24, 0x2c	; 44
     648:	80 61       	ori	r24, 0x10	; 16
     64a:	8c bd       	out	0x2c, r24	; 44
     64c:	8c b5       	in	r24, 0x2c	; 44
     64e:	82 60       	ori	r24, 0x02	; 2
     650:	8c bd       	out	0x2c, r24	; 44
     652:	8c b5       	in	r24, 0x2c	; 44
     654:	80 64       	ori	r24, 0x40	; 64
     656:	8c bd       	out	0x2c, r24	; 44
     658:	08 95       	ret

0000065a <SPI_send_byte>:
     65a:	8e bd       	out	0x2e, r24	; 46
     65c:	0d b4       	in	r0, 0x2d	; 45
     65e:	07 fe       	sbrs	r0, 7
     660:	fd cf       	rjmp	.-6      	; 0x65c <SPI_send_byte+0x2>
     662:	80 e0       	ldi	r24, 0x00	; 0
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	08 95       	ret

00000668 <SPI_receive_byte>:
     668:	8f ef       	ldi	r24, 0xFF	; 255
     66a:	f7 df       	rcall	.-18     	; 0x65a <SPI_send_byte>
     66c:	0d b4       	in	r0, 0x2d	; 45
     66e:	07 fe       	sbrs	r0, 7
     670:	fd cf       	rjmp	.-6      	; 0x66c <SPI_receive_byte+0x4>
     672:	8e b5       	in	r24, 0x2e	; 46
     674:	90 e0       	ldi	r25, 0x00	; 0
     676:	08 95       	ret

00000678 <SPI_select_slave>:
     678:	81 30       	cpi	r24, 0x01	; 1
     67a:	91 05       	cpc	r25, r1
     67c:	11 f4       	brne	.+4      	; 0x682 <SPI_select_slave+0xa>
     67e:	2f 98       	cbi	0x05, 7	; 5
     680:	08 95       	ret
     682:	89 2b       	or	r24, r25
     684:	09 f4       	brne	.+2      	; 0x688 <SPI_select_slave+0x10>
     686:	2f 9a       	sbi	0x05, 7	; 5
     688:	08 95       	ret

0000068a <UART_send>:
     68a:	e0 ec       	ldi	r30, 0xC0	; 192
     68c:	f0 e0       	ldi	r31, 0x00	; 0
     68e:	90 81       	ld	r25, Z
     690:	95 ff       	sbrs	r25, 5
     692:	fd cf       	rjmp	.-6      	; 0x68e <UART_send+0x4>
     694:	80 93 c6 00 	sts	0x00C6, r24
     698:	08 95       	ret

0000069a <UART_init>:
     69a:	9c 01       	movw	r18, r24
     69c:	44 27       	eor	r20, r20
     69e:	37 fd       	sbrc	r19, 7
     6a0:	40 95       	com	r20
     6a2:	54 2f       	mov	r21, r20
     6a4:	60 e4       	ldi	r22, 0x40	; 64
     6a6:	72 e4       	ldi	r23, 0x42	; 66
     6a8:	8f e0       	ldi	r24, 0x0F	; 15
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	19 d3       	rcall	.+1586   	; 0xce0 <__divmodsi4>
     6ae:	21 50       	subi	r18, 0x01	; 1
     6b0:	31 09       	sbc	r19, r1
     6b2:	30 93 c5 00 	sts	0x00C5, r19
     6b6:	20 93 c4 00 	sts	0x00C4, r18
     6ba:	88 e1       	ldi	r24, 0x18	; 24
     6bc:	80 93 c1 00 	sts	0x00C1, r24
     6c0:	86 e0       	ldi	r24, 0x06	; 6
     6c2:	80 93 c2 00 	sts	0x00C2, r24
     6c6:	80 e0       	ldi	r24, 0x00	; 0
     6c8:	92 e0       	ldi	r25, 0x02	; 2
     6ca:	90 93 7a 02 	sts	0x027A, r25
     6ce:	80 93 79 02 	sts	0x0279, r24
     6d2:	08 95       	ret

000006d4 <game_init>:
//Se .h file for function explanations

void game_init()
{
	//Initialises UART communication
	UART_init(9600);
     6d4:	80 e8       	ldi	r24, 0x80	; 128
     6d6:	95 e2       	ldi	r25, 0x25	; 37
     6d8:	e0 df       	rcall	.-64     	; 0x69a <UART_init>
	
	//CAN startup
	CAN_init(CAN_MODE_NORMAL);
     6da:	81 e0       	ldi	r24, 0x01	; 1
     6dc:	75 dd       	rcall	.-1302   	; 0x1c8 <CAN_init>
	
	//DAC init
	DAC_init();
     6de:	53 d0       	rcall	.+166    	; 0x786 <DAC_init>
	
	//ADC init
	adc2560_init();
     6e0:	31 d0       	rcall	.+98     	; 0x744 <adc2560_init>
	
	//CTRL init
	ctrl_init();
     6e2:	d3 d0       	rcall	.+422    	; 0x88a <ctrl_init>
	ctrl_update_ref(0);
     6e4:	80 e0       	ldi	r24, 0x00	; 0
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	be d0       	rcall	.+380    	; 0x866 <ctrl_update_ref>
	
	//Pwm init
	pwm_init();
     6ea:	bf d1       	rcall	.+894    	; 0xa6a <pwm_init>
	
	//Enables interrupts
	sei();
     6ec:	78 94       	sei
	
	printf("Node 2 setup completed\n");
     6ee:	89 e4       	ldi	r24, 0x49	; 73
     6f0:	92 e0       	ldi	r25, 0x02	; 2
     6f2:	66 c5       	rjmp	.+2764   	; 0x11c0 <puts>
     6f4:	08 95       	ret

000006f6 <game_ball_detected>:
	}
	
}

void game_ball_detected()
{
     6f6:	cf 93       	push	r28
     6f8:	df 93       	push	r29
     6fa:	cd b7       	in	r28, 0x3d	; 61
     6fc:	de b7       	in	r29, 0x3e	; 62
     6fe:	2b 97       	sbiw	r28, 0x0b	; 11
     700:	0f b6       	in	r0, 0x3f	; 63
     702:	f8 94       	cli
     704:	de bf       	out	0x3e, r29	; 62
     706:	0f be       	out	0x3f, r0	; 63
     708:	cd bf       	out	0x3d, r28	; 61
	struct can_frame message = CAN_frame_init(ID_IR_SENSOR_TRIGGERED,1);
     70a:	41 e0       	ldi	r20, 0x01	; 1
     70c:	61 e0       	ldi	r22, 0x01	; 1
     70e:	70 e0       	ldi	r23, 0x00	; 0
     710:	ce 01       	movw	r24, r28
     712:	01 96       	adiw	r24, 0x01	; 1
     714:	57 de       	rcall	.-850    	; 0x3c4 <CAN_frame_init>
	CAN_send_frame(&message);
     716:	ce 01       	movw	r24, r28
     718:	01 96       	adiw	r24, 0x01	; 1
     71a:	77 dd       	rcall	.-1298   	; 0x20a <CAN_send_frame>
}
     71c:	2b 96       	adiw	r28, 0x0b	; 11
     71e:	0f b6       	in	r0, 0x3f	; 63
     720:	f8 94       	cli
     722:	de bf       	out	0x3e, r29	; 62
     724:	0f be       	out	0x3f, r0	; 63
     726:	cd bf       	out	0x3d, r28	; 61
     728:	df 91       	pop	r29
     72a:	cf 91       	pop	r28
     72c:	08 95       	ret

0000072e <game_loop>:
{
	while (1)
	{

		//Listen for messages from node 1
		CAN_handle_message();
     72e:	75 de       	rcall	.-790    	; 0x41a <CAN_handle_message>
		
		//Check if ball is detected, if it is -> notify node 1
		if (ir_detect_ball())
     730:	42 d0       	rcall	.+132    	; 0x7b6 <ir_detect_ball>
     732:	89 2b       	or	r24, r25
     734:	e1 f3       	breq	.-8      	; 0x72e <game_loop>
		{
			game_ball_detected(); //Sends message to node 1
     736:	df df       	rcall	.-66     	; 0x6f6 <game_ball_detected>
			while(!CAN_handle_message()) 
     738:	01 c0       	rjmp	.+2      	; 0x73c <game_loop+0xe>
			{
				//Waits for reset signal from node 1
				ctr_reset_integral();
     73a:	8e d1       	rcall	.+796    	; 0xa58 <ctr_reset_integral>
		
		//Check if ball is detected, if it is -> notify node 1
		if (ir_detect_ball())
		{
			game_ball_detected(); //Sends message to node 1
			while(!CAN_handle_message()) 
     73c:	6e de       	rcall	.-804    	; 0x41a <CAN_handle_message>
     73e:	89 2b       	or	r24, r25
     740:	e1 f3       	breq	.-8      	; 0x73a <game_loop+0xc>
     742:	f5 cf       	rjmp	.-22     	; 0x72e <game_loop>

00000744 <adc2560_init>:
//See .h file for function explanations

void adc2560_init()
{
	//Enable ADC
	ADCSRA |= (1 << ADEN);
     744:	ea e7       	ldi	r30, 0x7A	; 122
     746:	f0 e0       	ldi	r31, 0x00	; 0
     748:	80 81       	ld	r24, Z
     74a:	80 68       	ori	r24, 0x80	; 128
     74c:	80 83       	st	Z, r24

	//Set clock prescaler @128
	ADCSRA |= (3 << ADPS0);
     74e:	80 81       	ld	r24, Z
     750:	83 60       	ori	r24, 0x03	; 3
     752:	80 83       	st	Z, r24
	
	ADMUX |= (1 << REFS0);
     754:	ec e7       	ldi	r30, 0x7C	; 124
     756:	f0 e0       	ldi	r31, 0x00	; 0
     758:	80 81       	ld	r24, Z
     75a:	80 64       	ori	r24, 0x40	; 64
     75c:	80 83       	st	Z, r24
     75e:	08 95       	ret

00000760 <adc2560_read_bin>:
}

uint16_t adc2560_read_bin(int ch)
{
	//Select Channel
	ADMUX |= (0x1F & ch);
     760:	ec e7       	ldi	r30, 0x7C	; 124
     762:	f0 e0       	ldi	r31, 0x00	; 0
     764:	90 81       	ld	r25, Z
     766:	8f 71       	andi	r24, 0x1F	; 31
     768:	98 2b       	or	r25, r24
     76a:	90 83       	st	Z, r25
	
	//Start conversion
	ADCSRA |= (1 << ADSC);
     76c:	ea e7       	ldi	r30, 0x7A	; 122
     76e:	f0 e0       	ldi	r31, 0x00	; 0
     770:	80 81       	ld	r24, Z
     772:	80 64       	ori	r24, 0x40	; 64
     774:	80 83       	st	Z, r24
	
	//Wait for result
	while((1 << ADSC) & ADCSRA){;}
     776:	80 81       	ld	r24, Z
     778:	86 fd       	sbrc	r24, 6
     77a:	fd cf       	rjmp	.-6      	; 0x776 <adc2560_read_bin+0x16>
	
	//Read result
	uint16_t voltage = ADC;
     77c:	80 91 78 00 	lds	r24, 0x0078
     780:	90 91 79 00 	lds	r25, 0x0079
	
	return voltage;
}
     784:	08 95       	ret

00000786 <DAC_init>:
     786:	fd d1       	rcall	.+1018   	; 0xb82 <TWI_Master_Initialise>
     788:	8a b1       	in	r24, 0x0a	; 10
     78a:	83 60       	ori	r24, 0x03	; 3
     78c:	8a b9       	out	0x0a, r24	; 10
     78e:	08 95       	ret

00000790 <DAC_write_bin>:
     790:	cf 93       	push	r28
     792:	df 93       	push	r29
     794:	00 d0       	rcall	.+0      	; 0x796 <DAC_write_bin+0x6>
     796:	cd b7       	in	r28, 0x3d	; 61
     798:	de b7       	in	r29, 0x3e	; 62
     79a:	90 e5       	ldi	r25, 0x50	; 80
     79c:	99 83       	std	Y+1, r25	; 0x01
     79e:	1a 82       	std	Y+2, r1	; 0x02
     7a0:	8b 83       	std	Y+3, r24	; 0x03
     7a2:	63 e0       	ldi	r22, 0x03	; 3
     7a4:	ce 01       	movw	r24, r28
     7a6:	01 96       	adiw	r24, 0x01	; 1
     7a8:	f6 d1       	rcall	.+1004   	; 0xb96 <TWI_Start_Transceiver_With_Data>
     7aa:	0f 90       	pop	r0
     7ac:	0f 90       	pop	r0
     7ae:	0f 90       	pop	r0
     7b0:	df 91       	pop	r29
     7b2:	cf 91       	pop	r28
     7b4:	08 95       	ret

000007b6 <ir_detect_ball>:
	detection_count = 0;
}

int ir_detect_ball()
{
	int voltage = adc2560_read_bin(IR_PIN);
     7b6:	80 e0       	ldi	r24, 0x00	; 0
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	d2 df       	rcall	.-92     	; 0x760 <adc2560_read_bin>
	
	if (voltage < VOLTAGE_THRESHOLD) //The voltage falls when the IR sensors are eclipsed by the ball
     7bc:	49 97       	sbiw	r24, 0x19	; 25
     7be:	b4 f4       	brge	.+44     	; 0x7ec <ir_detect_ball+0x36>
	{
		//Increase detection count
		detection_count++;
     7c0:	80 91 62 02 	lds	r24, 0x0262
     7c4:	90 91 63 02 	lds	r25, 0x0263
     7c8:	01 96       	adiw	r24, 0x01	; 1
     7ca:	90 93 63 02 	sts	0x0263, r25
     7ce:	80 93 62 02 	sts	0x0262, r24
		
		//If we have enough detections the ball is detected
		if (detection_count > DETECTION_LIMIT)
     7d2:	80 91 62 02 	lds	r24, 0x0262
     7d6:	90 91 63 02 	lds	r25, 0x0263
     7da:	06 97       	sbiw	r24, 0x06	; 6
     7dc:	70 f0       	brcs	.+28     	; 0x7fa <ir_detect_ball+0x44>
		{
			detection_count = 0;
     7de:	10 92 63 02 	sts	0x0263, r1
     7e2:	10 92 62 02 	sts	0x0262, r1
			return 1;
     7e6:	81 e0       	ldi	r24, 0x01	; 1
     7e8:	90 e0       	ldi	r25, 0x00	; 0
     7ea:	08 95       	ret
		}
	}
	else
	{
		detection_count = 0; //If ball isn't detected reset counter
     7ec:	10 92 63 02 	sts	0x0263, r1
     7f0:	10 92 62 02 	sts	0x0262, r1
	}
	
	return 0;
     7f4:	80 e0       	ldi	r24, 0x00	; 0
     7f6:	90 e0       	ldi	r25, 0x00	; 0
     7f8:	08 95       	ret
     7fa:	80 e0       	ldi	r24, 0x00	; 0
     7fc:	90 e0       	ldi	r25, 0x00	; 0
}
     7fe:	08 95       	ret

00000800 <main>:
#include "UART_driver.h"

int main(void)
{
	//Initializes drivers
	game_init();
     800:	69 df       	rcall	.-302    	; 0x6d4 <game_init>
	
	//Enters main game loop
	game_loop();
     802:	95 df       	rcall	.-214    	; 0x72e <game_loop>
     804:	80 e0       	ldi	r24, 0x00	; 0
     806:	90 e0       	ldi	r25, 0x00	; 0
     808:	08 95       	ret

0000080a <ctrl_read_encoder>:
	
}

void ctrl_update_KP(float p){ KP = p; }

void ctrl_update_KI(float p){ KI = p; }
     80a:	e2 e0       	ldi	r30, 0x02	; 2
     80c:	f1 e0       	ldi	r31, 0x01	; 1
     80e:	80 81       	ld	r24, Z
     810:	8f 7d       	andi	r24, 0xDF	; 223
     812:	80 83       	st	Z, r24
     814:	8a e6       	ldi	r24, 0x6A	; 106
     816:	8a 95       	dec	r24
     818:	f1 f7       	brne	.-4      	; 0x816 <ctrl_read_encoder+0xc>
     81a:	00 c0       	rjmp	.+0      	; 0x81c <ctrl_read_encoder+0x12>
     81c:	80 81       	ld	r24, Z
     81e:	87 7f       	andi	r24, 0xF7	; 247
     820:	80 83       	st	Z, r24
     822:	9a e6       	ldi	r25, 0x6A	; 106
     824:	9a 95       	dec	r25
     826:	f1 f7       	brne	.-4      	; 0x824 <ctrl_read_encoder+0x1a>
     828:	00 c0       	rjmp	.+0      	; 0x82a <ctrl_read_encoder+0x20>
     82a:	20 91 06 01 	lds	r18, 0x0106
     82e:	80 81       	ld	r24, Z
     830:	88 60       	ori	r24, 0x08	; 8
     832:	80 83       	st	Z, r24
     834:	8a e6       	ldi	r24, 0x6A	; 106
     836:	8a 95       	dec	r24
     838:	f1 f7       	brne	.-4      	; 0x836 <ctrl_read_encoder+0x2c>
     83a:	00 c0       	rjmp	.+0      	; 0x83c <ctrl_read_encoder+0x32>
     83c:	80 91 06 01 	lds	r24, 0x0106
     840:	90 81       	ld	r25, Z
     842:	9f 7b       	andi	r25, 0xBF	; 191
     844:	90 83       	st	Z, r25
     846:	9a e6       	ldi	r25, 0x6A	; 106
     848:	9a 95       	dec	r25
     84a:	f1 f7       	brne	.-4      	; 0x848 <ctrl_read_encoder+0x3e>
     84c:	00 c0       	rjmp	.+0      	; 0x84e <ctrl_read_encoder+0x44>
     84e:	90 81       	ld	r25, Z
     850:	90 64       	ori	r25, 0x40	; 64
     852:	90 83       	st	Z, r25
     854:	90 81       	ld	r25, Z
     856:	90 62       	ori	r25, 0x20	; 32
     858:	90 83       	st	Z, r25
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	92 2b       	or	r25, r18
     85e:	91 95       	neg	r25
     860:	81 95       	neg	r24
     862:	91 09       	sbc	r25, r1
     864:	08 95       	ret

00000866 <ctrl_update_ref>:
     866:	90 93 76 02 	sts	0x0276, r25
     86a:	80 93 75 02 	sts	0x0275, r24
     86e:	08 95       	ret

00000870 <ctrl_reset>:
     870:	10 92 71 02 	sts	0x0271, r1
     874:	10 92 72 02 	sts	0x0272, r1
     878:	10 92 73 02 	sts	0x0273, r1
     87c:	10 92 74 02 	sts	0x0274, r1
     880:	10 92 76 02 	sts	0x0276, r1
     884:	10 92 75 02 	sts	0x0275, r1
     888:	08 95       	ret

0000088a <ctrl_init>:
     88a:	8f ef       	ldi	r24, 0xFF	; 255
     88c:	80 93 01 01 	sts	0x0101, r24
     890:	10 92 07 01 	sts	0x0107, r1
     894:	78 df       	rcall	.-272    	; 0x786 <DAC_init>
     896:	e2 e0       	ldi	r30, 0x02	; 2
     898:	f1 e0       	ldi	r31, 0x01	; 1
     89a:	80 81       	ld	r24, Z
     89c:	80 61       	ori	r24, 0x10	; 16
     89e:	80 83       	st	Z, r24
     8a0:	80 81       	ld	r24, Z
     8a2:	80 64       	ori	r24, 0x40	; 64
     8a4:	80 83       	st	Z, r24
     8a6:	e4 df       	rcall	.-56     	; 0x870 <ctrl_reset>
     8a8:	2c d1       	rcall	.+600    	; 0xb02 <timer2560_init>
     8aa:	6d df       	rcall	.-294    	; 0x786 <DAC_init>
     8ac:	08 9a       	sbi	0x01, 0	; 1
     8ae:	10 9a       	sbi	0x02, 0	; 2
     8b0:	08 95       	ret

000008b2 <ctrl_apply_voltage>:
     8b2:	99 23       	and	r25, r25
     8b4:	4c f4       	brge	.+18     	; 0x8c8 <ctrl_apply_voltage+0x16>
     8b6:	e2 e0       	ldi	r30, 0x02	; 2
     8b8:	f1 e0       	ldi	r31, 0x01	; 1
     8ba:	20 81       	ld	r18, Z
     8bc:	22 60       	ori	r18, 0x02	; 2
     8be:	20 83       	st	Z, r18
     8c0:	91 95       	neg	r25
     8c2:	81 95       	neg	r24
     8c4:	91 09       	sbc	r25, r1
     8c6:	05 c0       	rjmp	.+10     	; 0x8d2 <ctrl_apply_voltage+0x20>
     8c8:	e2 e0       	ldi	r30, 0x02	; 2
     8ca:	f1 e0       	ldi	r31, 0x01	; 1
     8cc:	20 81       	ld	r18, Z
     8ce:	2d 7f       	andi	r18, 0xFD	; 253
     8d0:	20 83       	st	Z, r18
     8d2:	5e cf       	rjmp	.-324    	; 0x790 <DAC_write_bin>
     8d4:	08 95       	ret

000008d6 <ctrl_regulate>:
     8d6:	8f 92       	push	r8
     8d8:	9f 92       	push	r9
     8da:	af 92       	push	r10
     8dc:	bf 92       	push	r11
     8de:	cf 92       	push	r12
     8e0:	df 92       	push	r13
     8e2:	ef 92       	push	r14
     8e4:	ff 92       	push	r15
     8e6:	91 df       	rcall	.-222    	; 0x80a <ctrl_read_encoder>
     8e8:	90 93 70 02 	sts	0x0270, r25
     8ec:	80 93 6f 02 	sts	0x026F, r24
     8f0:	60 91 6f 02 	lds	r22, 0x026F
     8f4:	70 91 70 02 	lds	r23, 0x0270
     8f8:	a0 90 75 02 	lds	r10, 0x0275
     8fc:	b0 90 76 02 	lds	r11, 0x0276
     900:	88 27       	eor	r24, r24
     902:	77 fd       	sbrc	r23, 7
     904:	80 95       	com	r24
     906:	98 2f       	mov	r25, r24
     908:	33 d3       	rcall	.+1638   	; 0xf70 <__floatsisf>
     90a:	2d ec       	ldi	r18, 0xCD	; 205
     90c:	3c ec       	ldi	r19, 0xCC	; 204
     90e:	4c e4       	ldi	r20, 0x4C	; 76
     910:	5d e3       	ldi	r21, 0x3D	; 61
     912:	e2 d3       	rcall	.+1988   	; 0x10d8 <__mulsf3>
     914:	6b 01       	movw	r12, r22
     916:	7c 01       	movw	r14, r24
     918:	b5 01       	movw	r22, r10
     91a:	88 27       	eor	r24, r24
     91c:	77 fd       	sbrc	r23, 7
     91e:	80 95       	com	r24
     920:	98 2f       	mov	r25, r24
     922:	26 d3       	rcall	.+1612   	; 0xf70 <__floatsisf>
     924:	9b 01       	movw	r18, r22
     926:	ac 01       	movw	r20, r24
     928:	c7 01       	movw	r24, r14
     92a:	b6 01       	movw	r22, r12
     92c:	1d d2       	rcall	.+1082   	; 0xd68 <__subsf3>
     92e:	ed d2       	rcall	.+1498   	; 0xf0a <__fixsfsi>
     930:	70 93 6e 02 	sts	0x026E, r23
     934:	60 93 6d 02 	sts	0x026D, r22
     938:	60 91 6d 02 	lds	r22, 0x026D
     93c:	70 91 6e 02 	lds	r23, 0x026E
     940:	c0 90 71 02 	lds	r12, 0x0271
     944:	d0 90 72 02 	lds	r13, 0x0272
     948:	e0 90 73 02 	lds	r14, 0x0273
     94c:	f0 90 74 02 	lds	r15, 0x0274
     950:	88 27       	eor	r24, r24
     952:	77 fd       	sbrc	r23, 7
     954:	80 95       	com	r24
     956:	98 2f       	mov	r25, r24
     958:	0b d3       	rcall	.+1558   	; 0xf70 <__floatsisf>
     95a:	2d ec       	ldi	r18, 0xCD	; 205
     95c:	3c ec       	ldi	r19, 0xCC	; 204
     95e:	4c e4       	ldi	r20, 0x4C	; 76
     960:	5d e3       	ldi	r21, 0x3D	; 61
     962:	ba d3       	rcall	.+1908   	; 0x10d8 <__mulsf3>
     964:	a7 01       	movw	r20, r14
     966:	96 01       	movw	r18, r12
     968:	00 d2       	rcall	.+1024   	; 0xd6a <__addsf3>
     96a:	60 93 71 02 	sts	0x0271, r22
     96e:	70 93 72 02 	sts	0x0272, r23
     972:	80 93 73 02 	sts	0x0273, r24
     976:	90 93 74 02 	sts	0x0274, r25
     97a:	60 91 6d 02 	lds	r22, 0x026D
     97e:	70 91 6e 02 	lds	r23, 0x026E
     982:	80 90 71 02 	lds	r8, 0x0271
     986:	90 90 72 02 	lds	r9, 0x0272
     98a:	a0 90 73 02 	lds	r10, 0x0273
     98e:	b0 90 74 02 	lds	r11, 0x0274
     992:	88 27       	eor	r24, r24
     994:	77 fd       	sbrc	r23, 7
     996:	80 95       	com	r24
     998:	98 2f       	mov	r25, r24
     99a:	ea d2       	rcall	.+1492   	; 0xf70 <__floatsisf>
     99c:	20 91 12 02 	lds	r18, 0x0212
     9a0:	30 91 13 02 	lds	r19, 0x0213
     9a4:	40 91 14 02 	lds	r20, 0x0214
     9a8:	50 91 15 02 	lds	r21, 0x0215
     9ac:	95 d3       	rcall	.+1834   	; 0x10d8 <__mulsf3>
     9ae:	6b 01       	movw	r12, r22
     9b0:	7c 01       	movw	r14, r24
     9b2:	20 91 0e 02 	lds	r18, 0x020E
     9b6:	30 91 0f 02 	lds	r19, 0x020F
     9ba:	40 91 10 02 	lds	r20, 0x0210
     9be:	50 91 11 02 	lds	r21, 0x0211
     9c2:	c5 01       	movw	r24, r10
     9c4:	b4 01       	movw	r22, r8
     9c6:	88 d3       	rcall	.+1808   	; 0x10d8 <__mulsf3>
     9c8:	9b 01       	movw	r18, r22
     9ca:	ac 01       	movw	r20, r24
     9cc:	c7 01       	movw	r24, r14
     9ce:	b6 01       	movw	r22, r12
     9d0:	cc d1       	rcall	.+920    	; 0xd6a <__addsf3>
     9d2:	9b d2       	rcall	.+1334   	; 0xf0a <__fixsfsi>
     9d4:	70 93 6c 02 	sts	0x026C, r23
     9d8:	60 93 6b 02 	sts	0x026B, r22
     9dc:	80 91 6b 02 	lds	r24, 0x026B
     9e0:	90 91 6c 02 	lds	r25, 0x026C
     9e4:	8f 3f       	cpi	r24, 0xFF	; 255
     9e6:	91 05       	cpc	r25, r1
     9e8:	39 f0       	breq	.+14     	; 0x9f8 <ctrl_regulate+0x122>
     9ea:	34 f0       	brlt	.+12     	; 0x9f8 <ctrl_regulate+0x122>
     9ec:	8f ef       	ldi	r24, 0xFF	; 255
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	90 93 6c 02 	sts	0x026C, r25
     9f4:	80 93 6b 02 	sts	0x026B, r24
     9f8:	80 91 6b 02 	lds	r24, 0x026B
     9fc:	90 91 6c 02 	lds	r25, 0x026C
     a00:	81 30       	cpi	r24, 0x01	; 1
     a02:	9f 4f       	sbci	r25, 0xFF	; 255
     a04:	34 f4       	brge	.+12     	; 0xa12 <ctrl_regulate+0x13c>
     a06:	81 e0       	ldi	r24, 0x01	; 1
     a08:	9f ef       	ldi	r25, 0xFF	; 255
     a0a:	90 93 6c 02 	sts	0x026C, r25
     a0e:	80 93 6b 02 	sts	0x026B, r24
     a12:	80 91 6b 02 	lds	r24, 0x026B
     a16:	90 91 6c 02 	lds	r25, 0x026C
     a1a:	4b df       	rcall	.-362    	; 0x8b2 <ctrl_apply_voltage>
     a1c:	ff 90       	pop	r15
     a1e:	ef 90       	pop	r14
     a20:	df 90       	pop	r13
     a22:	cf 90       	pop	r12
     a24:	bf 90       	pop	r11
     a26:	af 90       	pop	r10
     a28:	9f 90       	pop	r9
     a2a:	8f 90       	pop	r8
     a2c:	08 95       	ret

00000a2e <ctrl_fire_sol>:
     a2e:	10 98       	cbi	0x02, 0	; 2
     a30:	2f ef       	ldi	r18, 0xFF	; 255
     a32:	81 ee       	ldi	r24, 0xE1	; 225
     a34:	94 e0       	ldi	r25, 0x04	; 4
     a36:	21 50       	subi	r18, 0x01	; 1
     a38:	80 40       	sbci	r24, 0x00	; 0
     a3a:	90 40       	sbci	r25, 0x00	; 0
     a3c:	e1 f7       	brne	.-8      	; 0xa36 <ctrl_fire_sol+0x8>
     a3e:	00 c0       	rjmp	.+0      	; 0xa40 <ctrl_fire_sol+0x12>
     a40:	00 00       	nop
     a42:	10 9a       	sbi	0x02, 0	; 2
     a44:	08 95       	ret

00000a46 <ctrl_update_KP>:
     a46:	60 93 12 02 	sts	0x0212, r22
     a4a:	70 93 13 02 	sts	0x0213, r23
     a4e:	80 93 14 02 	sts	0x0214, r24
     a52:	90 93 15 02 	sts	0x0215, r25
     a56:	08 95       	ret

00000a58 <ctr_reset_integral>:

void ctr_reset_integral()
{
	error_sum = 0;
     a58:	10 92 71 02 	sts	0x0271, r1
     a5c:	10 92 72 02 	sts	0x0272, r1
     a60:	10 92 73 02 	sts	0x0273, r1
     a64:	10 92 74 02 	sts	0x0274, r1
     a68:	08 95       	ret

00000a6a <pwm_init>:
     a6a:	a0 e8       	ldi	r26, 0x80	; 128
     a6c:	b0 e0       	ldi	r27, 0x00	; 0
     a6e:	8c 91       	ld	r24, X
     a70:	82 60       	ori	r24, 0x02	; 2
     a72:	8c 93       	st	X, r24
     a74:	e1 e8       	ldi	r30, 0x81	; 129
     a76:	f0 e0       	ldi	r31, 0x00	; 0
     a78:	80 81       	ld	r24, Z
     a7a:	88 61       	ori	r24, 0x18	; 24
     a7c:	80 83       	st	Z, r24
     a7e:	8c 91       	ld	r24, X
     a80:	80 62       	ori	r24, 0x20	; 32
     a82:	8c 93       	st	X, r24
     a84:	80 81       	ld	r24, Z
     a86:	85 60       	ori	r24, 0x05	; 5
     a88:	80 83       	st	Z, r24
     a8a:	8b e2       	ldi	r24, 0x2B	; 43
     a8c:	91 e0       	ldi	r25, 0x01	; 1
     a8e:	90 93 87 00 	sts	0x0087, r25
     a92:	80 93 86 00 	sts	0x0086, r24
     a96:	85 e1       	ldi	r24, 0x15	; 21
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	90 93 8b 00 	sts	0x008B, r25
     a9e:	80 93 8a 00 	sts	0x008A, r24
     aa2:	26 9a       	sbi	0x04, 6	; 4
     aa4:	80 e0       	ldi	r24, 0x00	; 0
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	08 95       	ret

00000aaa <pwm_set_duty_ms>:
     aaa:	cf 92       	push	r12
     aac:	df 92       	push	r13
     aae:	ef 92       	push	r14
     ab0:	ff 92       	push	r15
     ab2:	6b 01       	movw	r12, r22
     ab4:	7c 01       	movw	r14, r24
     ab6:	26 e6       	ldi	r18, 0x66	; 102
     ab8:	36 e6       	ldi	r19, 0x66	; 102
     aba:	46 e6       	ldi	r20, 0x66	; 102
     abc:	5f e3       	ldi	r21, 0x3F	; 63
     abe:	b9 d1       	rcall	.+882    	; 0xe32 <__cmpsf2>
     ac0:	88 23       	and	r24, r24
     ac2:	d4 f0       	brlt	.+52     	; 0xaf8 <pwm_set_duty_ms+0x4e>
     ac4:	26 e6       	ldi	r18, 0x66	; 102
     ac6:	36 e6       	ldi	r19, 0x66	; 102
     ac8:	46 e0       	ldi	r20, 0x06	; 6
     aca:	50 e4       	ldi	r21, 0x40	; 64
     acc:	c7 01       	movw	r24, r14
     ace:	b6 01       	movw	r22, r12
     ad0:	ff d2       	rcall	.+1534   	; 0x10d0 <__gesf2>
     ad2:	18 16       	cp	r1, r24
     ad4:	8c f0       	brlt	.+34     	; 0xaf8 <pwm_set_duty_ms+0x4e>
     ad6:	20 e0       	ldi	r18, 0x00	; 0
     ad8:	30 e0       	ldi	r19, 0x00	; 0
     ada:	40 e7       	ldi	r20, 0x70	; 112
     adc:	51 e4       	ldi	r21, 0x41	; 65
     ade:	c7 01       	movw	r24, r14
     ae0:	b6 01       	movw	r22, r12
     ae2:	fa d2       	rcall	.+1524   	; 0x10d8 <__mulsf3>
     ae4:	20 e0       	ldi	r18, 0x00	; 0
     ae6:	30 e0       	ldi	r19, 0x00	; 0
     ae8:	40 e8       	ldi	r20, 0x80	; 128
     aea:	5f e3       	ldi	r21, 0x3F	; 63
     aec:	3d d1       	rcall	.+634    	; 0xd68 <__subsf3>
     aee:	12 d2       	rcall	.+1060   	; 0xf14 <__fixunssfsi>
     af0:	70 93 8b 00 	sts	0x008B, r23
     af4:	60 93 8a 00 	sts	0x008A, r22
     af8:	ff 90       	pop	r15
     afa:	ef 90       	pop	r14
     afc:	df 90       	pop	r13
     afe:	cf 90       	pop	r12
     b00:	08 95       	ret

00000b02 <timer2560_init>:

//See .h file for function explanations

int timer2560_init()
{
	TCCR3A |= (1 << WGM31) | (0 << WGM30); //ENABLE CTC MODE
     b02:	e0 e9       	ldi	r30, 0x90	; 144
     b04:	f0 e0       	ldi	r31, 0x00	; 0
     b06:	80 81       	ld	r24, Z
     b08:	82 60       	ori	r24, 0x02	; 2
     b0a:	80 83       	st	Z, r24
	TCCR3B |= (1 << WGM32) | (0 << WGM33); //ENABLE CTC MODE
     b0c:	e1 e9       	ldi	r30, 0x91	; 145
     b0e:	f0 e0       	ldi	r31, 0x00	; 0
     b10:	80 81       	ld	r24, Z
     b12:	88 60       	ori	r24, 0x08	; 8
     b14:	80 83       	st	Z, r24
	
	TCCR3B |= (3 << CS30);  //Prescaler at 64
     b16:	80 81       	ld	r24, Z
     b18:	83 60       	ori	r24, 0x03	; 3
     b1a:	80 83       	st	Z, r24
	
	OCR3A = (F_CPU/64) * CONTROLLER_DT; //Sets compare value according to controller DT 
     b1c:	84 ed       	ldi	r24, 0xD4	; 212
     b1e:	90 e3       	ldi	r25, 0x30	; 48
     b20:	90 93 99 00 	sts	0x0099, r25
     b24:	80 93 98 00 	sts	0x0098, r24
	
	TIMSK3 = (1 << OCIE3A); //Enable interrupt
     b28:	82 e0       	ldi	r24, 0x02	; 2
     b2a:	80 93 71 00 	sts	0x0071, r24
	
	return 0;
}
     b2e:	80 e0       	ldi	r24, 0x00	; 0
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	08 95       	ret

00000b34 <__vector_32>:

//Enables interrupt vector, regulates when timer goes off
ISR(TIMER3_COMPA_vect)
{
     b34:	1f 92       	push	r1
     b36:	0f 92       	push	r0
     b38:	0f b6       	in	r0, 0x3f	; 63
     b3a:	0f 92       	push	r0
     b3c:	11 24       	eor	r1, r1
     b3e:	0b b6       	in	r0, 0x3b	; 59
     b40:	0f 92       	push	r0
     b42:	2f 93       	push	r18
     b44:	3f 93       	push	r19
     b46:	4f 93       	push	r20
     b48:	5f 93       	push	r21
     b4a:	6f 93       	push	r22
     b4c:	7f 93       	push	r23
     b4e:	8f 93       	push	r24
     b50:	9f 93       	push	r25
     b52:	af 93       	push	r26
     b54:	bf 93       	push	r27
     b56:	ef 93       	push	r30
     b58:	ff 93       	push	r31
	ctrl_regulate();
     b5a:	bd de       	rcall	.-646    	; 0x8d6 <ctrl_regulate>
}
     b5c:	ff 91       	pop	r31
     b5e:	ef 91       	pop	r30
     b60:	bf 91       	pop	r27
     b62:	af 91       	pop	r26
     b64:	9f 91       	pop	r25
     b66:	8f 91       	pop	r24
     b68:	7f 91       	pop	r23
     b6a:	6f 91       	pop	r22
     b6c:	5f 91       	pop	r21
     b6e:	4f 91       	pop	r20
     b70:	3f 91       	pop	r19
     b72:	2f 91       	pop	r18
     b74:	0f 90       	pop	r0
     b76:	0b be       	out	0x3b, r0	; 59
     b78:	0f 90       	pop	r0
     b7a:	0f be       	out	0x3f, r0	; 63
     b7c:	0f 90       	pop	r0
     b7e:	1f 90       	pop	r1
     b80:	18 95       	reti

00000b82 <TWI_Master_Initialise>:
     b82:	8c e0       	ldi	r24, 0x0C	; 12
     b84:	80 93 b8 00 	sts	0x00B8, r24
     b88:	8f ef       	ldi	r24, 0xFF	; 255
     b8a:	80 93 bb 00 	sts	0x00BB, r24
     b8e:	84 e0       	ldi	r24, 0x04	; 4
     b90:	80 93 bc 00 	sts	0x00BC, r24
     b94:	08 95       	ret

00000b96 <TWI_Start_Transceiver_With_Data>:
     b96:	ec eb       	ldi	r30, 0xBC	; 188
     b98:	f0 e0       	ldi	r31, 0x00	; 0
     b9a:	20 81       	ld	r18, Z
     b9c:	20 fd       	sbrc	r18, 0
     b9e:	fd cf       	rjmp	.-6      	; 0xb9a <TWI_Start_Transceiver_With_Data+0x4>
     ba0:	60 93 66 02 	sts	0x0266, r22
     ba4:	fc 01       	movw	r30, r24
     ba6:	20 81       	ld	r18, Z
     ba8:	20 93 67 02 	sts	0x0267, r18
     bac:	20 fd       	sbrc	r18, 0
     bae:	0c c0       	rjmp	.+24     	; 0xbc8 <TWI_Start_Transceiver_With_Data+0x32>
     bb0:	62 30       	cpi	r22, 0x02	; 2
     bb2:	50 f0       	brcs	.+20     	; 0xbc8 <TWI_Start_Transceiver_With_Data+0x32>
     bb4:	dc 01       	movw	r26, r24
     bb6:	11 96       	adiw	r26, 0x01	; 1
     bb8:	e8 e6       	ldi	r30, 0x68	; 104
     bba:	f2 e0       	ldi	r31, 0x02	; 2
     bbc:	81 e0       	ldi	r24, 0x01	; 1
     bbe:	9d 91       	ld	r25, X+
     bc0:	91 93       	st	Z+, r25
     bc2:	8f 5f       	subi	r24, 0xFF	; 255
     bc4:	86 13       	cpse	r24, r22
     bc6:	fb cf       	rjmp	.-10     	; 0xbbe <TWI_Start_Transceiver_With_Data+0x28>
     bc8:	10 92 65 02 	sts	0x0265, r1
     bcc:	88 ef       	ldi	r24, 0xF8	; 248
     bce:	80 93 16 02 	sts	0x0216, r24
     bd2:	85 ea       	ldi	r24, 0xA5	; 165
     bd4:	80 93 bc 00 	sts	0x00BC, r24
     bd8:	08 95       	ret

00000bda <__vector_39>:
     bda:	1f 92       	push	r1
     bdc:	0f 92       	push	r0
     bde:	0f b6       	in	r0, 0x3f	; 63
     be0:	0f 92       	push	r0
     be2:	11 24       	eor	r1, r1
     be4:	0b b6       	in	r0, 0x3b	; 59
     be6:	0f 92       	push	r0
     be8:	2f 93       	push	r18
     bea:	3f 93       	push	r19
     bec:	8f 93       	push	r24
     bee:	9f 93       	push	r25
     bf0:	af 93       	push	r26
     bf2:	bf 93       	push	r27
     bf4:	ef 93       	push	r30
     bf6:	ff 93       	push	r31
     bf8:	80 91 b9 00 	lds	r24, 0x00B9
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	fc 01       	movw	r30, r24
     c00:	38 97       	sbiw	r30, 0x08	; 8
     c02:	e1 35       	cpi	r30, 0x51	; 81
     c04:	f1 05       	cpc	r31, r1
     c06:	08 f0       	brcs	.+2      	; 0xc0a <__vector_39+0x30>
     c08:	55 c0       	rjmp	.+170    	; 0xcb4 <__vector_39+0xda>
     c0a:	ee 58       	subi	r30, 0x8E	; 142
     c0c:	ff 4f       	sbci	r31, 0xFF	; 255
     c0e:	84 c0       	rjmp	.+264    	; 0xd18 <__tablejump2__>
     c10:	10 92 64 02 	sts	0x0264, r1
     c14:	e0 91 64 02 	lds	r30, 0x0264
     c18:	80 91 66 02 	lds	r24, 0x0266
     c1c:	e8 17       	cp	r30, r24
     c1e:	70 f4       	brcc	.+28     	; 0xc3c <__vector_39+0x62>
     c20:	81 e0       	ldi	r24, 0x01	; 1
     c22:	8e 0f       	add	r24, r30
     c24:	80 93 64 02 	sts	0x0264, r24
     c28:	f0 e0       	ldi	r31, 0x00	; 0
     c2a:	e9 59       	subi	r30, 0x99	; 153
     c2c:	fd 4f       	sbci	r31, 0xFD	; 253
     c2e:	80 81       	ld	r24, Z
     c30:	80 93 bb 00 	sts	0x00BB, r24
     c34:	85 e8       	ldi	r24, 0x85	; 133
     c36:	80 93 bc 00 	sts	0x00BC, r24
     c3a:	43 c0       	rjmp	.+134    	; 0xcc2 <__vector_39+0xe8>
     c3c:	80 91 65 02 	lds	r24, 0x0265
     c40:	81 60       	ori	r24, 0x01	; 1
     c42:	80 93 65 02 	sts	0x0265, r24
     c46:	84 e9       	ldi	r24, 0x94	; 148
     c48:	80 93 bc 00 	sts	0x00BC, r24
     c4c:	3a c0       	rjmp	.+116    	; 0xcc2 <__vector_39+0xe8>
     c4e:	e0 91 64 02 	lds	r30, 0x0264
     c52:	81 e0       	ldi	r24, 0x01	; 1
     c54:	8e 0f       	add	r24, r30
     c56:	80 93 64 02 	sts	0x0264, r24
     c5a:	80 91 bb 00 	lds	r24, 0x00BB
     c5e:	f0 e0       	ldi	r31, 0x00	; 0
     c60:	e9 59       	subi	r30, 0x99	; 153
     c62:	fd 4f       	sbci	r31, 0xFD	; 253
     c64:	80 83       	st	Z, r24
     c66:	20 91 64 02 	lds	r18, 0x0264
     c6a:	30 e0       	ldi	r19, 0x00	; 0
     c6c:	80 91 66 02 	lds	r24, 0x0266
     c70:	90 e0       	ldi	r25, 0x00	; 0
     c72:	01 97       	sbiw	r24, 0x01	; 1
     c74:	28 17       	cp	r18, r24
     c76:	39 07       	cpc	r19, r25
     c78:	24 f4       	brge	.+8      	; 0xc82 <__vector_39+0xa8>
     c7a:	85 ec       	ldi	r24, 0xC5	; 197
     c7c:	80 93 bc 00 	sts	0x00BC, r24
     c80:	20 c0       	rjmp	.+64     	; 0xcc2 <__vector_39+0xe8>
     c82:	85 e8       	ldi	r24, 0x85	; 133
     c84:	80 93 bc 00 	sts	0x00BC, r24
     c88:	1c c0       	rjmp	.+56     	; 0xcc2 <__vector_39+0xe8>
     c8a:	80 91 bb 00 	lds	r24, 0x00BB
     c8e:	e0 91 64 02 	lds	r30, 0x0264
     c92:	f0 e0       	ldi	r31, 0x00	; 0
     c94:	e9 59       	subi	r30, 0x99	; 153
     c96:	fd 4f       	sbci	r31, 0xFD	; 253
     c98:	80 83       	st	Z, r24
     c9a:	80 91 65 02 	lds	r24, 0x0265
     c9e:	81 60       	ori	r24, 0x01	; 1
     ca0:	80 93 65 02 	sts	0x0265, r24
     ca4:	84 e9       	ldi	r24, 0x94	; 148
     ca6:	80 93 bc 00 	sts	0x00BC, r24
     caa:	0b c0       	rjmp	.+22     	; 0xcc2 <__vector_39+0xe8>
     cac:	85 ea       	ldi	r24, 0xA5	; 165
     cae:	80 93 bc 00 	sts	0x00BC, r24
     cb2:	07 c0       	rjmp	.+14     	; 0xcc2 <__vector_39+0xe8>
     cb4:	80 91 b9 00 	lds	r24, 0x00B9
     cb8:	80 93 16 02 	sts	0x0216, r24
     cbc:	84 e0       	ldi	r24, 0x04	; 4
     cbe:	80 93 bc 00 	sts	0x00BC, r24
     cc2:	ff 91       	pop	r31
     cc4:	ef 91       	pop	r30
     cc6:	bf 91       	pop	r27
     cc8:	af 91       	pop	r26
     cca:	9f 91       	pop	r25
     ccc:	8f 91       	pop	r24
     cce:	3f 91       	pop	r19
     cd0:	2f 91       	pop	r18
     cd2:	0f 90       	pop	r0
     cd4:	0b be       	out	0x3b, r0	; 59
     cd6:	0f 90       	pop	r0
     cd8:	0f be       	out	0x3f, r0	; 63
     cda:	0f 90       	pop	r0
     cdc:	1f 90       	pop	r1
     cde:	18 95       	reti

00000ce0 <__divmodsi4>:
     ce0:	05 2e       	mov	r0, r21
     ce2:	97 fb       	bst	r25, 7
     ce4:	16 f4       	brtc	.+4      	; 0xcea <__divmodsi4+0xa>
     ce6:	00 94       	com	r0
     ce8:	0f d0       	rcall	.+30     	; 0xd08 <__negsi2>
     cea:	57 fd       	sbrc	r21, 7
     cec:	05 d0       	rcall	.+10     	; 0xcf8 <__divmodsi4_neg2>
     cee:	1a d0       	rcall	.+52     	; 0xd24 <__udivmodsi4>
     cf0:	07 fc       	sbrc	r0, 7
     cf2:	02 d0       	rcall	.+4      	; 0xcf8 <__divmodsi4_neg2>
     cf4:	46 f4       	brtc	.+16     	; 0xd06 <__divmodsi4_exit>
     cf6:	08 c0       	rjmp	.+16     	; 0xd08 <__negsi2>

00000cf8 <__divmodsi4_neg2>:
     cf8:	50 95       	com	r21
     cfa:	40 95       	com	r20
     cfc:	30 95       	com	r19
     cfe:	21 95       	neg	r18
     d00:	3f 4f       	sbci	r19, 0xFF	; 255
     d02:	4f 4f       	sbci	r20, 0xFF	; 255
     d04:	5f 4f       	sbci	r21, 0xFF	; 255

00000d06 <__divmodsi4_exit>:
     d06:	08 95       	ret

00000d08 <__negsi2>:
     d08:	90 95       	com	r25
     d0a:	80 95       	com	r24
     d0c:	70 95       	com	r23
     d0e:	61 95       	neg	r22
     d10:	7f 4f       	sbci	r23, 0xFF	; 255
     d12:	8f 4f       	sbci	r24, 0xFF	; 255
     d14:	9f 4f       	sbci	r25, 0xFF	; 255
     d16:	08 95       	ret

00000d18 <__tablejump2__>:
     d18:	ee 0f       	add	r30, r30
     d1a:	ff 1f       	adc	r31, r31

00000d1c <__tablejump__>:
     d1c:	05 90       	lpm	r0, Z+
     d1e:	f4 91       	lpm	r31, Z
     d20:	e0 2d       	mov	r30, r0
     d22:	19 94       	eijmp

00000d24 <__udivmodsi4>:
     d24:	a1 e2       	ldi	r26, 0x21	; 33
     d26:	1a 2e       	mov	r1, r26
     d28:	aa 1b       	sub	r26, r26
     d2a:	bb 1b       	sub	r27, r27
     d2c:	fd 01       	movw	r30, r26
     d2e:	0d c0       	rjmp	.+26     	; 0xd4a <__udivmodsi4_ep>

00000d30 <__udivmodsi4_loop>:
     d30:	aa 1f       	adc	r26, r26
     d32:	bb 1f       	adc	r27, r27
     d34:	ee 1f       	adc	r30, r30
     d36:	ff 1f       	adc	r31, r31
     d38:	a2 17       	cp	r26, r18
     d3a:	b3 07       	cpc	r27, r19
     d3c:	e4 07       	cpc	r30, r20
     d3e:	f5 07       	cpc	r31, r21
     d40:	20 f0       	brcs	.+8      	; 0xd4a <__udivmodsi4_ep>
     d42:	a2 1b       	sub	r26, r18
     d44:	b3 0b       	sbc	r27, r19
     d46:	e4 0b       	sbc	r30, r20
     d48:	f5 0b       	sbc	r31, r21

00000d4a <__udivmodsi4_ep>:
     d4a:	66 1f       	adc	r22, r22
     d4c:	77 1f       	adc	r23, r23
     d4e:	88 1f       	adc	r24, r24
     d50:	99 1f       	adc	r25, r25
     d52:	1a 94       	dec	r1
     d54:	69 f7       	brne	.-38     	; 0xd30 <__udivmodsi4_loop>
     d56:	60 95       	com	r22
     d58:	70 95       	com	r23
     d5a:	80 95       	com	r24
     d5c:	90 95       	com	r25
     d5e:	9b 01       	movw	r18, r22
     d60:	ac 01       	movw	r20, r24
     d62:	bd 01       	movw	r22, r26
     d64:	cf 01       	movw	r24, r30
     d66:	08 95       	ret

00000d68 <__subsf3>:
     d68:	50 58       	subi	r21, 0x80	; 128

00000d6a <__addsf3>:
     d6a:	bb 27       	eor	r27, r27
     d6c:	aa 27       	eor	r26, r26
     d6e:	0e d0       	rcall	.+28     	; 0xd8c <__addsf3x>
     d70:	75 c1       	rjmp	.+746    	; 0x105c <__fp_round>
     d72:	66 d1       	rcall	.+716    	; 0x1040 <__fp_pscA>
     d74:	30 f0       	brcs	.+12     	; 0xd82 <__addsf3+0x18>
     d76:	6b d1       	rcall	.+726    	; 0x104e <__fp_pscB>
     d78:	20 f0       	brcs	.+8      	; 0xd82 <__addsf3+0x18>
     d7a:	31 f4       	brne	.+12     	; 0xd88 <__addsf3+0x1e>
     d7c:	9f 3f       	cpi	r25, 0xFF	; 255
     d7e:	11 f4       	brne	.+4      	; 0xd84 <__addsf3+0x1a>
     d80:	1e f4       	brtc	.+6      	; 0xd88 <__addsf3+0x1e>
     d82:	5b c1       	rjmp	.+694    	; 0x103a <__fp_nan>
     d84:	0e f4       	brtc	.+2      	; 0xd88 <__addsf3+0x1e>
     d86:	e0 95       	com	r30
     d88:	e7 fb       	bst	r30, 7
     d8a:	51 c1       	rjmp	.+674    	; 0x102e <__fp_inf>

00000d8c <__addsf3x>:
     d8c:	e9 2f       	mov	r30, r25
     d8e:	77 d1       	rcall	.+750    	; 0x107e <__fp_split3>
     d90:	80 f3       	brcs	.-32     	; 0xd72 <__addsf3+0x8>
     d92:	ba 17       	cp	r27, r26
     d94:	62 07       	cpc	r22, r18
     d96:	73 07       	cpc	r23, r19
     d98:	84 07       	cpc	r24, r20
     d9a:	95 07       	cpc	r25, r21
     d9c:	18 f0       	brcs	.+6      	; 0xda4 <__addsf3x+0x18>
     d9e:	71 f4       	brne	.+28     	; 0xdbc <__addsf3x+0x30>
     da0:	9e f5       	brtc	.+102    	; 0xe08 <__addsf3x+0x7c>
     da2:	8f c1       	rjmp	.+798    	; 0x10c2 <__fp_zero>
     da4:	0e f4       	brtc	.+2      	; 0xda8 <__addsf3x+0x1c>
     da6:	e0 95       	com	r30
     da8:	0b 2e       	mov	r0, r27
     daa:	ba 2f       	mov	r27, r26
     dac:	a0 2d       	mov	r26, r0
     dae:	0b 01       	movw	r0, r22
     db0:	b9 01       	movw	r22, r18
     db2:	90 01       	movw	r18, r0
     db4:	0c 01       	movw	r0, r24
     db6:	ca 01       	movw	r24, r20
     db8:	a0 01       	movw	r20, r0
     dba:	11 24       	eor	r1, r1
     dbc:	ff 27       	eor	r31, r31
     dbe:	59 1b       	sub	r21, r25
     dc0:	99 f0       	breq	.+38     	; 0xde8 <__addsf3x+0x5c>
     dc2:	59 3f       	cpi	r21, 0xF9	; 249
     dc4:	50 f4       	brcc	.+20     	; 0xdda <__addsf3x+0x4e>
     dc6:	50 3e       	cpi	r21, 0xE0	; 224
     dc8:	68 f1       	brcs	.+90     	; 0xe24 <__addsf3x+0x98>
     dca:	1a 16       	cp	r1, r26
     dcc:	f0 40       	sbci	r31, 0x00	; 0
     dce:	a2 2f       	mov	r26, r18
     dd0:	23 2f       	mov	r18, r19
     dd2:	34 2f       	mov	r19, r20
     dd4:	44 27       	eor	r20, r20
     dd6:	58 5f       	subi	r21, 0xF8	; 248
     dd8:	f3 cf       	rjmp	.-26     	; 0xdc0 <__addsf3x+0x34>
     dda:	46 95       	lsr	r20
     ddc:	37 95       	ror	r19
     dde:	27 95       	ror	r18
     de0:	a7 95       	ror	r26
     de2:	f0 40       	sbci	r31, 0x00	; 0
     de4:	53 95       	inc	r21
     de6:	c9 f7       	brne	.-14     	; 0xdda <__addsf3x+0x4e>
     de8:	7e f4       	brtc	.+30     	; 0xe08 <__addsf3x+0x7c>
     dea:	1f 16       	cp	r1, r31
     dec:	ba 0b       	sbc	r27, r26
     dee:	62 0b       	sbc	r22, r18
     df0:	73 0b       	sbc	r23, r19
     df2:	84 0b       	sbc	r24, r20
     df4:	ba f0       	brmi	.+46     	; 0xe24 <__addsf3x+0x98>
     df6:	91 50       	subi	r25, 0x01	; 1
     df8:	a1 f0       	breq	.+40     	; 0xe22 <__addsf3x+0x96>
     dfa:	ff 0f       	add	r31, r31
     dfc:	bb 1f       	adc	r27, r27
     dfe:	66 1f       	adc	r22, r22
     e00:	77 1f       	adc	r23, r23
     e02:	88 1f       	adc	r24, r24
     e04:	c2 f7       	brpl	.-16     	; 0xdf6 <__addsf3x+0x6a>
     e06:	0e c0       	rjmp	.+28     	; 0xe24 <__addsf3x+0x98>
     e08:	ba 0f       	add	r27, r26
     e0a:	62 1f       	adc	r22, r18
     e0c:	73 1f       	adc	r23, r19
     e0e:	84 1f       	adc	r24, r20
     e10:	48 f4       	brcc	.+18     	; 0xe24 <__addsf3x+0x98>
     e12:	87 95       	ror	r24
     e14:	77 95       	ror	r23
     e16:	67 95       	ror	r22
     e18:	b7 95       	ror	r27
     e1a:	f7 95       	ror	r31
     e1c:	9e 3f       	cpi	r25, 0xFE	; 254
     e1e:	08 f0       	brcs	.+2      	; 0xe22 <__addsf3x+0x96>
     e20:	b3 cf       	rjmp	.-154    	; 0xd88 <__addsf3+0x1e>
     e22:	93 95       	inc	r25
     e24:	88 0f       	add	r24, r24
     e26:	08 f0       	brcs	.+2      	; 0xe2a <__addsf3x+0x9e>
     e28:	99 27       	eor	r25, r25
     e2a:	ee 0f       	add	r30, r30
     e2c:	97 95       	ror	r25
     e2e:	87 95       	ror	r24
     e30:	08 95       	ret

00000e32 <__cmpsf2>:
     e32:	d9 d0       	rcall	.+434    	; 0xfe6 <__fp_cmp>
     e34:	08 f4       	brcc	.+2      	; 0xe38 <__cmpsf2+0x6>
     e36:	81 e0       	ldi	r24, 0x01	; 1
     e38:	08 95       	ret

00000e3a <__divsf3>:
     e3a:	0c d0       	rcall	.+24     	; 0xe54 <__divsf3x>
     e3c:	0f c1       	rjmp	.+542    	; 0x105c <__fp_round>
     e3e:	07 d1       	rcall	.+526    	; 0x104e <__fp_pscB>
     e40:	40 f0       	brcs	.+16     	; 0xe52 <__divsf3+0x18>
     e42:	fe d0       	rcall	.+508    	; 0x1040 <__fp_pscA>
     e44:	30 f0       	brcs	.+12     	; 0xe52 <__divsf3+0x18>
     e46:	21 f4       	brne	.+8      	; 0xe50 <__divsf3+0x16>
     e48:	5f 3f       	cpi	r21, 0xFF	; 255
     e4a:	19 f0       	breq	.+6      	; 0xe52 <__divsf3+0x18>
     e4c:	f0 c0       	rjmp	.+480    	; 0x102e <__fp_inf>
     e4e:	51 11       	cpse	r21, r1
     e50:	39 c1       	rjmp	.+626    	; 0x10c4 <__fp_szero>
     e52:	f3 c0       	rjmp	.+486    	; 0x103a <__fp_nan>

00000e54 <__divsf3x>:
     e54:	14 d1       	rcall	.+552    	; 0x107e <__fp_split3>
     e56:	98 f3       	brcs	.-26     	; 0xe3e <__divsf3+0x4>

00000e58 <__divsf3_pse>:
     e58:	99 23       	and	r25, r25
     e5a:	c9 f3       	breq	.-14     	; 0xe4e <__divsf3+0x14>
     e5c:	55 23       	and	r21, r21
     e5e:	b1 f3       	breq	.-20     	; 0xe4c <__divsf3+0x12>
     e60:	95 1b       	sub	r25, r21
     e62:	55 0b       	sbc	r21, r21
     e64:	bb 27       	eor	r27, r27
     e66:	aa 27       	eor	r26, r26
     e68:	62 17       	cp	r22, r18
     e6a:	73 07       	cpc	r23, r19
     e6c:	84 07       	cpc	r24, r20
     e6e:	38 f0       	brcs	.+14     	; 0xe7e <__divsf3_pse+0x26>
     e70:	9f 5f       	subi	r25, 0xFF	; 255
     e72:	5f 4f       	sbci	r21, 0xFF	; 255
     e74:	22 0f       	add	r18, r18
     e76:	33 1f       	adc	r19, r19
     e78:	44 1f       	adc	r20, r20
     e7a:	aa 1f       	adc	r26, r26
     e7c:	a9 f3       	breq	.-22     	; 0xe68 <__divsf3_pse+0x10>
     e7e:	33 d0       	rcall	.+102    	; 0xee6 <__divsf3_pse+0x8e>
     e80:	0e 2e       	mov	r0, r30
     e82:	3a f0       	brmi	.+14     	; 0xe92 <__divsf3_pse+0x3a>
     e84:	e0 e8       	ldi	r30, 0x80	; 128
     e86:	30 d0       	rcall	.+96     	; 0xee8 <__divsf3_pse+0x90>
     e88:	91 50       	subi	r25, 0x01	; 1
     e8a:	50 40       	sbci	r21, 0x00	; 0
     e8c:	e6 95       	lsr	r30
     e8e:	00 1c       	adc	r0, r0
     e90:	ca f7       	brpl	.-14     	; 0xe84 <__divsf3_pse+0x2c>
     e92:	29 d0       	rcall	.+82     	; 0xee6 <__divsf3_pse+0x8e>
     e94:	fe 2f       	mov	r31, r30
     e96:	27 d0       	rcall	.+78     	; 0xee6 <__divsf3_pse+0x8e>
     e98:	66 0f       	add	r22, r22
     e9a:	77 1f       	adc	r23, r23
     e9c:	88 1f       	adc	r24, r24
     e9e:	bb 1f       	adc	r27, r27
     ea0:	26 17       	cp	r18, r22
     ea2:	37 07       	cpc	r19, r23
     ea4:	48 07       	cpc	r20, r24
     ea6:	ab 07       	cpc	r26, r27
     ea8:	b0 e8       	ldi	r27, 0x80	; 128
     eaa:	09 f0       	breq	.+2      	; 0xeae <__divsf3_pse+0x56>
     eac:	bb 0b       	sbc	r27, r27
     eae:	80 2d       	mov	r24, r0
     eb0:	bf 01       	movw	r22, r30
     eb2:	ff 27       	eor	r31, r31
     eb4:	93 58       	subi	r25, 0x83	; 131
     eb6:	5f 4f       	sbci	r21, 0xFF	; 255
     eb8:	2a f0       	brmi	.+10     	; 0xec4 <__divsf3_pse+0x6c>
     eba:	9e 3f       	cpi	r25, 0xFE	; 254
     ebc:	51 05       	cpc	r21, r1
     ebe:	68 f0       	brcs	.+26     	; 0xeda <__divsf3_pse+0x82>
     ec0:	b6 c0       	rjmp	.+364    	; 0x102e <__fp_inf>
     ec2:	00 c1       	rjmp	.+512    	; 0x10c4 <__fp_szero>
     ec4:	5f 3f       	cpi	r21, 0xFF	; 255
     ec6:	ec f3       	brlt	.-6      	; 0xec2 <__divsf3_pse+0x6a>
     ec8:	98 3e       	cpi	r25, 0xE8	; 232
     eca:	dc f3       	brlt	.-10     	; 0xec2 <__divsf3_pse+0x6a>
     ecc:	86 95       	lsr	r24
     ece:	77 95       	ror	r23
     ed0:	67 95       	ror	r22
     ed2:	b7 95       	ror	r27
     ed4:	f7 95       	ror	r31
     ed6:	9f 5f       	subi	r25, 0xFF	; 255
     ed8:	c9 f7       	brne	.-14     	; 0xecc <__divsf3_pse+0x74>
     eda:	88 0f       	add	r24, r24
     edc:	91 1d       	adc	r25, r1
     ede:	96 95       	lsr	r25
     ee0:	87 95       	ror	r24
     ee2:	97 f9       	bld	r25, 7
     ee4:	08 95       	ret
     ee6:	e1 e0       	ldi	r30, 0x01	; 1
     ee8:	66 0f       	add	r22, r22
     eea:	77 1f       	adc	r23, r23
     eec:	88 1f       	adc	r24, r24
     eee:	bb 1f       	adc	r27, r27
     ef0:	62 17       	cp	r22, r18
     ef2:	73 07       	cpc	r23, r19
     ef4:	84 07       	cpc	r24, r20
     ef6:	ba 07       	cpc	r27, r26
     ef8:	20 f0       	brcs	.+8      	; 0xf02 <__divsf3_pse+0xaa>
     efa:	62 1b       	sub	r22, r18
     efc:	73 0b       	sbc	r23, r19
     efe:	84 0b       	sbc	r24, r20
     f00:	ba 0b       	sbc	r27, r26
     f02:	ee 1f       	adc	r30, r30
     f04:	88 f7       	brcc	.-30     	; 0xee8 <__divsf3_pse+0x90>
     f06:	e0 95       	com	r30
     f08:	08 95       	ret

00000f0a <__fixsfsi>:
     f0a:	04 d0       	rcall	.+8      	; 0xf14 <__fixunssfsi>
     f0c:	68 94       	set
     f0e:	b1 11       	cpse	r27, r1
     f10:	d9 c0       	rjmp	.+434    	; 0x10c4 <__fp_szero>
     f12:	08 95       	ret

00000f14 <__fixunssfsi>:
     f14:	bc d0       	rcall	.+376    	; 0x108e <__fp_splitA>
     f16:	88 f0       	brcs	.+34     	; 0xf3a <__fixunssfsi+0x26>
     f18:	9f 57       	subi	r25, 0x7F	; 127
     f1a:	90 f0       	brcs	.+36     	; 0xf40 <__fixunssfsi+0x2c>
     f1c:	b9 2f       	mov	r27, r25
     f1e:	99 27       	eor	r25, r25
     f20:	b7 51       	subi	r27, 0x17	; 23
     f22:	a0 f0       	brcs	.+40     	; 0xf4c <__fixunssfsi+0x38>
     f24:	d1 f0       	breq	.+52     	; 0xf5a <__fixunssfsi+0x46>
     f26:	66 0f       	add	r22, r22
     f28:	77 1f       	adc	r23, r23
     f2a:	88 1f       	adc	r24, r24
     f2c:	99 1f       	adc	r25, r25
     f2e:	1a f0       	brmi	.+6      	; 0xf36 <__fixunssfsi+0x22>
     f30:	ba 95       	dec	r27
     f32:	c9 f7       	brne	.-14     	; 0xf26 <__fixunssfsi+0x12>
     f34:	12 c0       	rjmp	.+36     	; 0xf5a <__fixunssfsi+0x46>
     f36:	b1 30       	cpi	r27, 0x01	; 1
     f38:	81 f0       	breq	.+32     	; 0xf5a <__fixunssfsi+0x46>
     f3a:	c3 d0       	rcall	.+390    	; 0x10c2 <__fp_zero>
     f3c:	b1 e0       	ldi	r27, 0x01	; 1
     f3e:	08 95       	ret
     f40:	c0 c0       	rjmp	.+384    	; 0x10c2 <__fp_zero>
     f42:	67 2f       	mov	r22, r23
     f44:	78 2f       	mov	r23, r24
     f46:	88 27       	eor	r24, r24
     f48:	b8 5f       	subi	r27, 0xF8	; 248
     f4a:	39 f0       	breq	.+14     	; 0xf5a <__fixunssfsi+0x46>
     f4c:	b9 3f       	cpi	r27, 0xF9	; 249
     f4e:	cc f3       	brlt	.-14     	; 0xf42 <__fixunssfsi+0x2e>
     f50:	86 95       	lsr	r24
     f52:	77 95       	ror	r23
     f54:	67 95       	ror	r22
     f56:	b3 95       	inc	r27
     f58:	d9 f7       	brne	.-10     	; 0xf50 <__fixunssfsi+0x3c>
     f5a:	3e f4       	brtc	.+14     	; 0xf6a <__fixunssfsi+0x56>
     f5c:	90 95       	com	r25
     f5e:	80 95       	com	r24
     f60:	70 95       	com	r23
     f62:	61 95       	neg	r22
     f64:	7f 4f       	sbci	r23, 0xFF	; 255
     f66:	8f 4f       	sbci	r24, 0xFF	; 255
     f68:	9f 4f       	sbci	r25, 0xFF	; 255
     f6a:	08 95       	ret

00000f6c <__floatunsisf>:
     f6c:	e8 94       	clt
     f6e:	09 c0       	rjmp	.+18     	; 0xf82 <__floatsisf+0x12>

00000f70 <__floatsisf>:
     f70:	97 fb       	bst	r25, 7
     f72:	3e f4       	brtc	.+14     	; 0xf82 <__floatsisf+0x12>
     f74:	90 95       	com	r25
     f76:	80 95       	com	r24
     f78:	70 95       	com	r23
     f7a:	61 95       	neg	r22
     f7c:	7f 4f       	sbci	r23, 0xFF	; 255
     f7e:	8f 4f       	sbci	r24, 0xFF	; 255
     f80:	9f 4f       	sbci	r25, 0xFF	; 255
     f82:	99 23       	and	r25, r25
     f84:	a9 f0       	breq	.+42     	; 0xfb0 <__floatsisf+0x40>
     f86:	f9 2f       	mov	r31, r25
     f88:	96 e9       	ldi	r25, 0x96	; 150
     f8a:	bb 27       	eor	r27, r27
     f8c:	93 95       	inc	r25
     f8e:	f6 95       	lsr	r31
     f90:	87 95       	ror	r24
     f92:	77 95       	ror	r23
     f94:	67 95       	ror	r22
     f96:	b7 95       	ror	r27
     f98:	f1 11       	cpse	r31, r1
     f9a:	f8 cf       	rjmp	.-16     	; 0xf8c <__floatsisf+0x1c>
     f9c:	fa f4       	brpl	.+62     	; 0xfdc <__floatsisf+0x6c>
     f9e:	bb 0f       	add	r27, r27
     fa0:	11 f4       	brne	.+4      	; 0xfa6 <__floatsisf+0x36>
     fa2:	60 ff       	sbrs	r22, 0
     fa4:	1b c0       	rjmp	.+54     	; 0xfdc <__floatsisf+0x6c>
     fa6:	6f 5f       	subi	r22, 0xFF	; 255
     fa8:	7f 4f       	sbci	r23, 0xFF	; 255
     faa:	8f 4f       	sbci	r24, 0xFF	; 255
     fac:	9f 4f       	sbci	r25, 0xFF	; 255
     fae:	16 c0       	rjmp	.+44     	; 0xfdc <__floatsisf+0x6c>
     fb0:	88 23       	and	r24, r24
     fb2:	11 f0       	breq	.+4      	; 0xfb8 <__floatsisf+0x48>
     fb4:	96 e9       	ldi	r25, 0x96	; 150
     fb6:	11 c0       	rjmp	.+34     	; 0xfda <__floatsisf+0x6a>
     fb8:	77 23       	and	r23, r23
     fba:	21 f0       	breq	.+8      	; 0xfc4 <__floatsisf+0x54>
     fbc:	9e e8       	ldi	r25, 0x8E	; 142
     fbe:	87 2f       	mov	r24, r23
     fc0:	76 2f       	mov	r23, r22
     fc2:	05 c0       	rjmp	.+10     	; 0xfce <__floatsisf+0x5e>
     fc4:	66 23       	and	r22, r22
     fc6:	71 f0       	breq	.+28     	; 0xfe4 <__floatsisf+0x74>
     fc8:	96 e8       	ldi	r25, 0x86	; 134
     fca:	86 2f       	mov	r24, r22
     fcc:	70 e0       	ldi	r23, 0x00	; 0
     fce:	60 e0       	ldi	r22, 0x00	; 0
     fd0:	2a f0       	brmi	.+10     	; 0xfdc <__floatsisf+0x6c>
     fd2:	9a 95       	dec	r25
     fd4:	66 0f       	add	r22, r22
     fd6:	77 1f       	adc	r23, r23
     fd8:	88 1f       	adc	r24, r24
     fda:	da f7       	brpl	.-10     	; 0xfd2 <__floatsisf+0x62>
     fdc:	88 0f       	add	r24, r24
     fde:	96 95       	lsr	r25
     fe0:	87 95       	ror	r24
     fe2:	97 f9       	bld	r25, 7
     fe4:	08 95       	ret

00000fe6 <__fp_cmp>:
     fe6:	99 0f       	add	r25, r25
     fe8:	00 08       	sbc	r0, r0
     fea:	55 0f       	add	r21, r21
     fec:	aa 0b       	sbc	r26, r26
     fee:	e0 e8       	ldi	r30, 0x80	; 128
     ff0:	fe ef       	ldi	r31, 0xFE	; 254
     ff2:	16 16       	cp	r1, r22
     ff4:	17 06       	cpc	r1, r23
     ff6:	e8 07       	cpc	r30, r24
     ff8:	f9 07       	cpc	r31, r25
     ffa:	c0 f0       	brcs	.+48     	; 0x102c <__fp_cmp+0x46>
     ffc:	12 16       	cp	r1, r18
     ffe:	13 06       	cpc	r1, r19
    1000:	e4 07       	cpc	r30, r20
    1002:	f5 07       	cpc	r31, r21
    1004:	98 f0       	brcs	.+38     	; 0x102c <__fp_cmp+0x46>
    1006:	62 1b       	sub	r22, r18
    1008:	73 0b       	sbc	r23, r19
    100a:	84 0b       	sbc	r24, r20
    100c:	95 0b       	sbc	r25, r21
    100e:	39 f4       	brne	.+14     	; 0x101e <__fp_cmp+0x38>
    1010:	0a 26       	eor	r0, r26
    1012:	61 f0       	breq	.+24     	; 0x102c <__fp_cmp+0x46>
    1014:	23 2b       	or	r18, r19
    1016:	24 2b       	or	r18, r20
    1018:	25 2b       	or	r18, r21
    101a:	21 f4       	brne	.+8      	; 0x1024 <__fp_cmp+0x3e>
    101c:	08 95       	ret
    101e:	0a 26       	eor	r0, r26
    1020:	09 f4       	brne	.+2      	; 0x1024 <__fp_cmp+0x3e>
    1022:	a1 40       	sbci	r26, 0x01	; 1
    1024:	a6 95       	lsr	r26
    1026:	8f ef       	ldi	r24, 0xFF	; 255
    1028:	81 1d       	adc	r24, r1
    102a:	81 1d       	adc	r24, r1
    102c:	08 95       	ret

0000102e <__fp_inf>:
    102e:	97 f9       	bld	r25, 7
    1030:	9f 67       	ori	r25, 0x7F	; 127
    1032:	80 e8       	ldi	r24, 0x80	; 128
    1034:	70 e0       	ldi	r23, 0x00	; 0
    1036:	60 e0       	ldi	r22, 0x00	; 0
    1038:	08 95       	ret

0000103a <__fp_nan>:
    103a:	9f ef       	ldi	r25, 0xFF	; 255
    103c:	80 ec       	ldi	r24, 0xC0	; 192
    103e:	08 95       	ret

00001040 <__fp_pscA>:
    1040:	00 24       	eor	r0, r0
    1042:	0a 94       	dec	r0
    1044:	16 16       	cp	r1, r22
    1046:	17 06       	cpc	r1, r23
    1048:	18 06       	cpc	r1, r24
    104a:	09 06       	cpc	r0, r25
    104c:	08 95       	ret

0000104e <__fp_pscB>:
    104e:	00 24       	eor	r0, r0
    1050:	0a 94       	dec	r0
    1052:	12 16       	cp	r1, r18
    1054:	13 06       	cpc	r1, r19
    1056:	14 06       	cpc	r1, r20
    1058:	05 06       	cpc	r0, r21
    105a:	08 95       	ret

0000105c <__fp_round>:
    105c:	09 2e       	mov	r0, r25
    105e:	03 94       	inc	r0
    1060:	00 0c       	add	r0, r0
    1062:	11 f4       	brne	.+4      	; 0x1068 <__fp_round+0xc>
    1064:	88 23       	and	r24, r24
    1066:	52 f0       	brmi	.+20     	; 0x107c <__fp_round+0x20>
    1068:	bb 0f       	add	r27, r27
    106a:	40 f4       	brcc	.+16     	; 0x107c <__fp_round+0x20>
    106c:	bf 2b       	or	r27, r31
    106e:	11 f4       	brne	.+4      	; 0x1074 <__fp_round+0x18>
    1070:	60 ff       	sbrs	r22, 0
    1072:	04 c0       	rjmp	.+8      	; 0x107c <__fp_round+0x20>
    1074:	6f 5f       	subi	r22, 0xFF	; 255
    1076:	7f 4f       	sbci	r23, 0xFF	; 255
    1078:	8f 4f       	sbci	r24, 0xFF	; 255
    107a:	9f 4f       	sbci	r25, 0xFF	; 255
    107c:	08 95       	ret

0000107e <__fp_split3>:
    107e:	57 fd       	sbrc	r21, 7
    1080:	90 58       	subi	r25, 0x80	; 128
    1082:	44 0f       	add	r20, r20
    1084:	55 1f       	adc	r21, r21
    1086:	59 f0       	breq	.+22     	; 0x109e <__fp_splitA+0x10>
    1088:	5f 3f       	cpi	r21, 0xFF	; 255
    108a:	71 f0       	breq	.+28     	; 0x10a8 <__fp_splitA+0x1a>
    108c:	47 95       	ror	r20

0000108e <__fp_splitA>:
    108e:	88 0f       	add	r24, r24
    1090:	97 fb       	bst	r25, 7
    1092:	99 1f       	adc	r25, r25
    1094:	61 f0       	breq	.+24     	; 0x10ae <__fp_splitA+0x20>
    1096:	9f 3f       	cpi	r25, 0xFF	; 255
    1098:	79 f0       	breq	.+30     	; 0x10b8 <__fp_splitA+0x2a>
    109a:	87 95       	ror	r24
    109c:	08 95       	ret
    109e:	12 16       	cp	r1, r18
    10a0:	13 06       	cpc	r1, r19
    10a2:	14 06       	cpc	r1, r20
    10a4:	55 1f       	adc	r21, r21
    10a6:	f2 cf       	rjmp	.-28     	; 0x108c <__fp_split3+0xe>
    10a8:	46 95       	lsr	r20
    10aa:	f1 df       	rcall	.-30     	; 0x108e <__fp_splitA>
    10ac:	08 c0       	rjmp	.+16     	; 0x10be <__fp_splitA+0x30>
    10ae:	16 16       	cp	r1, r22
    10b0:	17 06       	cpc	r1, r23
    10b2:	18 06       	cpc	r1, r24
    10b4:	99 1f       	adc	r25, r25
    10b6:	f1 cf       	rjmp	.-30     	; 0x109a <__fp_splitA+0xc>
    10b8:	86 95       	lsr	r24
    10ba:	71 05       	cpc	r23, r1
    10bc:	61 05       	cpc	r22, r1
    10be:	08 94       	sec
    10c0:	08 95       	ret

000010c2 <__fp_zero>:
    10c2:	e8 94       	clt

000010c4 <__fp_szero>:
    10c4:	bb 27       	eor	r27, r27
    10c6:	66 27       	eor	r22, r22
    10c8:	77 27       	eor	r23, r23
    10ca:	cb 01       	movw	r24, r22
    10cc:	97 f9       	bld	r25, 7
    10ce:	08 95       	ret

000010d0 <__gesf2>:
    10d0:	8a df       	rcall	.-236    	; 0xfe6 <__fp_cmp>
    10d2:	08 f4       	brcc	.+2      	; 0x10d6 <__gesf2+0x6>
    10d4:	8f ef       	ldi	r24, 0xFF	; 255
    10d6:	08 95       	ret

000010d8 <__mulsf3>:
    10d8:	0b d0       	rcall	.+22     	; 0x10f0 <__mulsf3x>
    10da:	c0 cf       	rjmp	.-128    	; 0x105c <__fp_round>
    10dc:	b1 df       	rcall	.-158    	; 0x1040 <__fp_pscA>
    10de:	28 f0       	brcs	.+10     	; 0x10ea <__mulsf3+0x12>
    10e0:	b6 df       	rcall	.-148    	; 0x104e <__fp_pscB>
    10e2:	18 f0       	brcs	.+6      	; 0x10ea <__mulsf3+0x12>
    10e4:	95 23       	and	r25, r21
    10e6:	09 f0       	breq	.+2      	; 0x10ea <__mulsf3+0x12>
    10e8:	a2 cf       	rjmp	.-188    	; 0x102e <__fp_inf>
    10ea:	a7 cf       	rjmp	.-178    	; 0x103a <__fp_nan>
    10ec:	11 24       	eor	r1, r1
    10ee:	ea cf       	rjmp	.-44     	; 0x10c4 <__fp_szero>

000010f0 <__mulsf3x>:
    10f0:	c6 df       	rcall	.-116    	; 0x107e <__fp_split3>
    10f2:	a0 f3       	brcs	.-24     	; 0x10dc <__mulsf3+0x4>

000010f4 <__mulsf3_pse>:
    10f4:	95 9f       	mul	r25, r21
    10f6:	d1 f3       	breq	.-12     	; 0x10ec <__mulsf3+0x14>
    10f8:	95 0f       	add	r25, r21
    10fa:	50 e0       	ldi	r21, 0x00	; 0
    10fc:	55 1f       	adc	r21, r21
    10fe:	62 9f       	mul	r22, r18
    1100:	f0 01       	movw	r30, r0
    1102:	72 9f       	mul	r23, r18
    1104:	bb 27       	eor	r27, r27
    1106:	f0 0d       	add	r31, r0
    1108:	b1 1d       	adc	r27, r1
    110a:	63 9f       	mul	r22, r19
    110c:	aa 27       	eor	r26, r26
    110e:	f0 0d       	add	r31, r0
    1110:	b1 1d       	adc	r27, r1
    1112:	aa 1f       	adc	r26, r26
    1114:	64 9f       	mul	r22, r20
    1116:	66 27       	eor	r22, r22
    1118:	b0 0d       	add	r27, r0
    111a:	a1 1d       	adc	r26, r1
    111c:	66 1f       	adc	r22, r22
    111e:	82 9f       	mul	r24, r18
    1120:	22 27       	eor	r18, r18
    1122:	b0 0d       	add	r27, r0
    1124:	a1 1d       	adc	r26, r1
    1126:	62 1f       	adc	r22, r18
    1128:	73 9f       	mul	r23, r19
    112a:	b0 0d       	add	r27, r0
    112c:	a1 1d       	adc	r26, r1
    112e:	62 1f       	adc	r22, r18
    1130:	83 9f       	mul	r24, r19
    1132:	a0 0d       	add	r26, r0
    1134:	61 1d       	adc	r22, r1
    1136:	22 1f       	adc	r18, r18
    1138:	74 9f       	mul	r23, r20
    113a:	33 27       	eor	r19, r19
    113c:	a0 0d       	add	r26, r0
    113e:	61 1d       	adc	r22, r1
    1140:	23 1f       	adc	r18, r19
    1142:	84 9f       	mul	r24, r20
    1144:	60 0d       	add	r22, r0
    1146:	21 1d       	adc	r18, r1
    1148:	82 2f       	mov	r24, r18
    114a:	76 2f       	mov	r23, r22
    114c:	6a 2f       	mov	r22, r26
    114e:	11 24       	eor	r1, r1
    1150:	9f 57       	subi	r25, 0x7F	; 127
    1152:	50 40       	sbci	r21, 0x00	; 0
    1154:	8a f0       	brmi	.+34     	; 0x1178 <__mulsf3_pse+0x84>
    1156:	e1 f0       	breq	.+56     	; 0x1190 <__mulsf3_pse+0x9c>
    1158:	88 23       	and	r24, r24
    115a:	4a f0       	brmi	.+18     	; 0x116e <__mulsf3_pse+0x7a>
    115c:	ee 0f       	add	r30, r30
    115e:	ff 1f       	adc	r31, r31
    1160:	bb 1f       	adc	r27, r27
    1162:	66 1f       	adc	r22, r22
    1164:	77 1f       	adc	r23, r23
    1166:	88 1f       	adc	r24, r24
    1168:	91 50       	subi	r25, 0x01	; 1
    116a:	50 40       	sbci	r21, 0x00	; 0
    116c:	a9 f7       	brne	.-22     	; 0x1158 <__mulsf3_pse+0x64>
    116e:	9e 3f       	cpi	r25, 0xFE	; 254
    1170:	51 05       	cpc	r21, r1
    1172:	70 f0       	brcs	.+28     	; 0x1190 <__mulsf3_pse+0x9c>
    1174:	5c cf       	rjmp	.-328    	; 0x102e <__fp_inf>
    1176:	a6 cf       	rjmp	.-180    	; 0x10c4 <__fp_szero>
    1178:	5f 3f       	cpi	r21, 0xFF	; 255
    117a:	ec f3       	brlt	.-6      	; 0x1176 <__mulsf3_pse+0x82>
    117c:	98 3e       	cpi	r25, 0xE8	; 232
    117e:	dc f3       	brlt	.-10     	; 0x1176 <__mulsf3_pse+0x82>
    1180:	86 95       	lsr	r24
    1182:	77 95       	ror	r23
    1184:	67 95       	ror	r22
    1186:	b7 95       	ror	r27
    1188:	f7 95       	ror	r31
    118a:	e7 95       	ror	r30
    118c:	9f 5f       	subi	r25, 0xFF	; 255
    118e:	c1 f7       	brne	.-16     	; 0x1180 <__mulsf3_pse+0x8c>
    1190:	fe 2b       	or	r31, r30
    1192:	88 0f       	add	r24, r24
    1194:	91 1d       	adc	r25, r1
    1196:	96 95       	lsr	r25
    1198:	87 95       	ror	r24
    119a:	97 f9       	bld	r25, 7
    119c:	08 95       	ret

0000119e <printf>:
    119e:	cf 93       	push	r28
    11a0:	df 93       	push	r29
    11a2:	cd b7       	in	r28, 0x3d	; 61
    11a4:	de b7       	in	r29, 0x3e	; 62
    11a6:	fe 01       	movw	r30, r28
    11a8:	36 96       	adiw	r30, 0x06	; 6
    11aa:	61 91       	ld	r22, Z+
    11ac:	71 91       	ld	r23, Z+
    11ae:	af 01       	movw	r20, r30
    11b0:	80 91 79 02 	lds	r24, 0x0279
    11b4:	90 91 7a 02 	lds	r25, 0x027A
    11b8:	30 d0       	rcall	.+96     	; 0x121a <vfprintf>
    11ba:	df 91       	pop	r29
    11bc:	cf 91       	pop	r28
    11be:	08 95       	ret

000011c0 <puts>:
    11c0:	0f 93       	push	r16
    11c2:	1f 93       	push	r17
    11c4:	cf 93       	push	r28
    11c6:	df 93       	push	r29
    11c8:	e0 91 79 02 	lds	r30, 0x0279
    11cc:	f0 91 7a 02 	lds	r31, 0x027A
    11d0:	23 81       	ldd	r18, Z+3	; 0x03
    11d2:	21 ff       	sbrs	r18, 1
    11d4:	1b c0       	rjmp	.+54     	; 0x120c <puts+0x4c>
    11d6:	ec 01       	movw	r28, r24
    11d8:	00 e0       	ldi	r16, 0x00	; 0
    11da:	10 e0       	ldi	r17, 0x00	; 0
    11dc:	89 91       	ld	r24, Y+
    11de:	60 91 79 02 	lds	r22, 0x0279
    11e2:	70 91 7a 02 	lds	r23, 0x027A
    11e6:	db 01       	movw	r26, r22
    11e8:	18 96       	adiw	r26, 0x08	; 8
    11ea:	ed 91       	ld	r30, X+
    11ec:	fc 91       	ld	r31, X
    11ee:	19 97       	sbiw	r26, 0x09	; 9
    11f0:	88 23       	and	r24, r24
    11f2:	31 f0       	breq	.+12     	; 0x1200 <puts+0x40>
    11f4:	19 95       	eicall
    11f6:	89 2b       	or	r24, r25
    11f8:	89 f3       	breq	.-30     	; 0x11dc <puts+0x1c>
    11fa:	0f ef       	ldi	r16, 0xFF	; 255
    11fc:	1f ef       	ldi	r17, 0xFF	; 255
    11fe:	ee cf       	rjmp	.-36     	; 0x11dc <puts+0x1c>
    1200:	8a e0       	ldi	r24, 0x0A	; 10
    1202:	19 95       	eicall
    1204:	89 2b       	or	r24, r25
    1206:	11 f4       	brne	.+4      	; 0x120c <puts+0x4c>
    1208:	c8 01       	movw	r24, r16
    120a:	02 c0       	rjmp	.+4      	; 0x1210 <puts+0x50>
    120c:	8f ef       	ldi	r24, 0xFF	; 255
    120e:	9f ef       	ldi	r25, 0xFF	; 255
    1210:	df 91       	pop	r29
    1212:	cf 91       	pop	r28
    1214:	1f 91       	pop	r17
    1216:	0f 91       	pop	r16
    1218:	08 95       	ret

0000121a <vfprintf>:
    121a:	2f 92       	push	r2
    121c:	3f 92       	push	r3
    121e:	4f 92       	push	r4
    1220:	5f 92       	push	r5
    1222:	6f 92       	push	r6
    1224:	7f 92       	push	r7
    1226:	8f 92       	push	r8
    1228:	9f 92       	push	r9
    122a:	af 92       	push	r10
    122c:	bf 92       	push	r11
    122e:	cf 92       	push	r12
    1230:	df 92       	push	r13
    1232:	ef 92       	push	r14
    1234:	ff 92       	push	r15
    1236:	0f 93       	push	r16
    1238:	1f 93       	push	r17
    123a:	cf 93       	push	r28
    123c:	df 93       	push	r29
    123e:	cd b7       	in	r28, 0x3d	; 61
    1240:	de b7       	in	r29, 0x3e	; 62
    1242:	2c 97       	sbiw	r28, 0x0c	; 12
    1244:	0f b6       	in	r0, 0x3f	; 63
    1246:	f8 94       	cli
    1248:	de bf       	out	0x3e, r29	; 62
    124a:	0f be       	out	0x3f, r0	; 63
    124c:	cd bf       	out	0x3d, r28	; 61
    124e:	7c 01       	movw	r14, r24
    1250:	6b 01       	movw	r12, r22
    1252:	8a 01       	movw	r16, r20
    1254:	fc 01       	movw	r30, r24
    1256:	17 82       	std	Z+7, r1	; 0x07
    1258:	16 82       	std	Z+6, r1	; 0x06
    125a:	83 81       	ldd	r24, Z+3	; 0x03
    125c:	81 ff       	sbrs	r24, 1
    125e:	b0 c1       	rjmp	.+864    	; 0x15c0 <vfprintf+0x3a6>
    1260:	ce 01       	movw	r24, r28
    1262:	01 96       	adiw	r24, 0x01	; 1
    1264:	4c 01       	movw	r8, r24
    1266:	f7 01       	movw	r30, r14
    1268:	93 81       	ldd	r25, Z+3	; 0x03
    126a:	f6 01       	movw	r30, r12
    126c:	93 fd       	sbrc	r25, 3
    126e:	85 91       	lpm	r24, Z+
    1270:	93 ff       	sbrs	r25, 3
    1272:	81 91       	ld	r24, Z+
    1274:	6f 01       	movw	r12, r30
    1276:	88 23       	and	r24, r24
    1278:	09 f4       	brne	.+2      	; 0x127c <vfprintf+0x62>
    127a:	9e c1       	rjmp	.+828    	; 0x15b8 <vfprintf+0x39e>
    127c:	85 32       	cpi	r24, 0x25	; 37
    127e:	39 f4       	brne	.+14     	; 0x128e <vfprintf+0x74>
    1280:	93 fd       	sbrc	r25, 3
    1282:	85 91       	lpm	r24, Z+
    1284:	93 ff       	sbrs	r25, 3
    1286:	81 91       	ld	r24, Z+
    1288:	6f 01       	movw	r12, r30
    128a:	85 32       	cpi	r24, 0x25	; 37
    128c:	21 f4       	brne	.+8      	; 0x1296 <vfprintf+0x7c>
    128e:	b7 01       	movw	r22, r14
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	c7 d1       	rcall	.+910    	; 0x1622 <fputc>
    1294:	e8 cf       	rjmp	.-48     	; 0x1266 <vfprintf+0x4c>
    1296:	51 2c       	mov	r5, r1
    1298:	31 2c       	mov	r3, r1
    129a:	20 e0       	ldi	r18, 0x00	; 0
    129c:	20 32       	cpi	r18, 0x20	; 32
    129e:	a0 f4       	brcc	.+40     	; 0x12c8 <vfprintf+0xae>
    12a0:	8b 32       	cpi	r24, 0x2B	; 43
    12a2:	69 f0       	breq	.+26     	; 0x12be <vfprintf+0xa4>
    12a4:	30 f4       	brcc	.+12     	; 0x12b2 <vfprintf+0x98>
    12a6:	80 32       	cpi	r24, 0x20	; 32
    12a8:	59 f0       	breq	.+22     	; 0x12c0 <vfprintf+0xa6>
    12aa:	83 32       	cpi	r24, 0x23	; 35
    12ac:	69 f4       	brne	.+26     	; 0x12c8 <vfprintf+0xae>
    12ae:	20 61       	ori	r18, 0x10	; 16
    12b0:	2c c0       	rjmp	.+88     	; 0x130a <vfprintf+0xf0>
    12b2:	8d 32       	cpi	r24, 0x2D	; 45
    12b4:	39 f0       	breq	.+14     	; 0x12c4 <vfprintf+0xaa>
    12b6:	80 33       	cpi	r24, 0x30	; 48
    12b8:	39 f4       	brne	.+14     	; 0x12c8 <vfprintf+0xae>
    12ba:	21 60       	ori	r18, 0x01	; 1
    12bc:	26 c0       	rjmp	.+76     	; 0x130a <vfprintf+0xf0>
    12be:	22 60       	ori	r18, 0x02	; 2
    12c0:	24 60       	ori	r18, 0x04	; 4
    12c2:	23 c0       	rjmp	.+70     	; 0x130a <vfprintf+0xf0>
    12c4:	28 60       	ori	r18, 0x08	; 8
    12c6:	21 c0       	rjmp	.+66     	; 0x130a <vfprintf+0xf0>
    12c8:	27 fd       	sbrc	r18, 7
    12ca:	27 c0       	rjmp	.+78     	; 0x131a <vfprintf+0x100>
    12cc:	30 ed       	ldi	r19, 0xD0	; 208
    12ce:	38 0f       	add	r19, r24
    12d0:	3a 30       	cpi	r19, 0x0A	; 10
    12d2:	78 f4       	brcc	.+30     	; 0x12f2 <vfprintf+0xd8>
    12d4:	26 ff       	sbrs	r18, 6
    12d6:	06 c0       	rjmp	.+12     	; 0x12e4 <vfprintf+0xca>
    12d8:	fa e0       	ldi	r31, 0x0A	; 10
    12da:	5f 9e       	mul	r5, r31
    12dc:	30 0d       	add	r19, r0
    12de:	11 24       	eor	r1, r1
    12e0:	53 2e       	mov	r5, r19
    12e2:	13 c0       	rjmp	.+38     	; 0x130a <vfprintf+0xf0>
    12e4:	8a e0       	ldi	r24, 0x0A	; 10
    12e6:	38 9e       	mul	r3, r24
    12e8:	30 0d       	add	r19, r0
    12ea:	11 24       	eor	r1, r1
    12ec:	33 2e       	mov	r3, r19
    12ee:	20 62       	ori	r18, 0x20	; 32
    12f0:	0c c0       	rjmp	.+24     	; 0x130a <vfprintf+0xf0>
    12f2:	8e 32       	cpi	r24, 0x2E	; 46
    12f4:	21 f4       	brne	.+8      	; 0x12fe <vfprintf+0xe4>
    12f6:	26 fd       	sbrc	r18, 6
    12f8:	5f c1       	rjmp	.+702    	; 0x15b8 <vfprintf+0x39e>
    12fa:	20 64       	ori	r18, 0x40	; 64
    12fc:	06 c0       	rjmp	.+12     	; 0x130a <vfprintf+0xf0>
    12fe:	8c 36       	cpi	r24, 0x6C	; 108
    1300:	11 f4       	brne	.+4      	; 0x1306 <vfprintf+0xec>
    1302:	20 68       	ori	r18, 0x80	; 128
    1304:	02 c0       	rjmp	.+4      	; 0x130a <vfprintf+0xf0>
    1306:	88 36       	cpi	r24, 0x68	; 104
    1308:	41 f4       	brne	.+16     	; 0x131a <vfprintf+0x100>
    130a:	f6 01       	movw	r30, r12
    130c:	93 fd       	sbrc	r25, 3
    130e:	85 91       	lpm	r24, Z+
    1310:	93 ff       	sbrs	r25, 3
    1312:	81 91       	ld	r24, Z+
    1314:	6f 01       	movw	r12, r30
    1316:	81 11       	cpse	r24, r1
    1318:	c1 cf       	rjmp	.-126    	; 0x129c <vfprintf+0x82>
    131a:	98 2f       	mov	r25, r24
    131c:	9f 7d       	andi	r25, 0xDF	; 223
    131e:	95 54       	subi	r25, 0x45	; 69
    1320:	93 30       	cpi	r25, 0x03	; 3
    1322:	28 f4       	brcc	.+10     	; 0x132e <vfprintf+0x114>
    1324:	0c 5f       	subi	r16, 0xFC	; 252
    1326:	1f 4f       	sbci	r17, 0xFF	; 255
    1328:	ff e3       	ldi	r31, 0x3F	; 63
    132a:	f9 83       	std	Y+1, r31	; 0x01
    132c:	0d c0       	rjmp	.+26     	; 0x1348 <vfprintf+0x12e>
    132e:	83 36       	cpi	r24, 0x63	; 99
    1330:	31 f0       	breq	.+12     	; 0x133e <vfprintf+0x124>
    1332:	83 37       	cpi	r24, 0x73	; 115
    1334:	71 f0       	breq	.+28     	; 0x1352 <vfprintf+0x138>
    1336:	83 35       	cpi	r24, 0x53	; 83
    1338:	09 f0       	breq	.+2      	; 0x133c <vfprintf+0x122>
    133a:	57 c0       	rjmp	.+174    	; 0x13ea <vfprintf+0x1d0>
    133c:	21 c0       	rjmp	.+66     	; 0x1380 <vfprintf+0x166>
    133e:	f8 01       	movw	r30, r16
    1340:	80 81       	ld	r24, Z
    1342:	89 83       	std	Y+1, r24	; 0x01
    1344:	0e 5f       	subi	r16, 0xFE	; 254
    1346:	1f 4f       	sbci	r17, 0xFF	; 255
    1348:	44 24       	eor	r4, r4
    134a:	43 94       	inc	r4
    134c:	51 2c       	mov	r5, r1
    134e:	54 01       	movw	r10, r8
    1350:	14 c0       	rjmp	.+40     	; 0x137a <vfprintf+0x160>
    1352:	38 01       	movw	r6, r16
    1354:	f2 e0       	ldi	r31, 0x02	; 2
    1356:	6f 0e       	add	r6, r31
    1358:	71 1c       	adc	r7, r1
    135a:	f8 01       	movw	r30, r16
    135c:	a0 80       	ld	r10, Z
    135e:	b1 80       	ldd	r11, Z+1	; 0x01
    1360:	26 ff       	sbrs	r18, 6
    1362:	03 c0       	rjmp	.+6      	; 0x136a <vfprintf+0x150>
    1364:	65 2d       	mov	r22, r5
    1366:	70 e0       	ldi	r23, 0x00	; 0
    1368:	02 c0       	rjmp	.+4      	; 0x136e <vfprintf+0x154>
    136a:	6f ef       	ldi	r22, 0xFF	; 255
    136c:	7f ef       	ldi	r23, 0xFF	; 255
    136e:	c5 01       	movw	r24, r10
    1370:	2c 87       	std	Y+12, r18	; 0x0c
    1372:	4c d1       	rcall	.+664    	; 0x160c <strnlen>
    1374:	2c 01       	movw	r4, r24
    1376:	83 01       	movw	r16, r6
    1378:	2c 85       	ldd	r18, Y+12	; 0x0c
    137a:	2f 77       	andi	r18, 0x7F	; 127
    137c:	22 2e       	mov	r2, r18
    137e:	16 c0       	rjmp	.+44     	; 0x13ac <vfprintf+0x192>
    1380:	38 01       	movw	r6, r16
    1382:	f2 e0       	ldi	r31, 0x02	; 2
    1384:	6f 0e       	add	r6, r31
    1386:	71 1c       	adc	r7, r1
    1388:	f8 01       	movw	r30, r16
    138a:	a0 80       	ld	r10, Z
    138c:	b1 80       	ldd	r11, Z+1	; 0x01
    138e:	26 ff       	sbrs	r18, 6
    1390:	03 c0       	rjmp	.+6      	; 0x1398 <vfprintf+0x17e>
    1392:	65 2d       	mov	r22, r5
    1394:	70 e0       	ldi	r23, 0x00	; 0
    1396:	02 c0       	rjmp	.+4      	; 0x139c <vfprintf+0x182>
    1398:	6f ef       	ldi	r22, 0xFF	; 255
    139a:	7f ef       	ldi	r23, 0xFF	; 255
    139c:	c5 01       	movw	r24, r10
    139e:	2c 87       	std	Y+12, r18	; 0x0c
    13a0:	2a d1       	rcall	.+596    	; 0x15f6 <strnlen_P>
    13a2:	2c 01       	movw	r4, r24
    13a4:	2c 85       	ldd	r18, Y+12	; 0x0c
    13a6:	20 68       	ori	r18, 0x80	; 128
    13a8:	22 2e       	mov	r2, r18
    13aa:	83 01       	movw	r16, r6
    13ac:	23 fc       	sbrc	r2, 3
    13ae:	19 c0       	rjmp	.+50     	; 0x13e2 <vfprintf+0x1c8>
    13b0:	83 2d       	mov	r24, r3
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	48 16       	cp	r4, r24
    13b6:	59 06       	cpc	r5, r25
    13b8:	a0 f4       	brcc	.+40     	; 0x13e2 <vfprintf+0x1c8>
    13ba:	b7 01       	movw	r22, r14
    13bc:	80 e2       	ldi	r24, 0x20	; 32
    13be:	90 e0       	ldi	r25, 0x00	; 0
    13c0:	30 d1       	rcall	.+608    	; 0x1622 <fputc>
    13c2:	3a 94       	dec	r3
    13c4:	f5 cf       	rjmp	.-22     	; 0x13b0 <vfprintf+0x196>
    13c6:	f5 01       	movw	r30, r10
    13c8:	27 fc       	sbrc	r2, 7
    13ca:	85 91       	lpm	r24, Z+
    13cc:	27 fe       	sbrs	r2, 7
    13ce:	81 91       	ld	r24, Z+
    13d0:	5f 01       	movw	r10, r30
    13d2:	b7 01       	movw	r22, r14
    13d4:	90 e0       	ldi	r25, 0x00	; 0
    13d6:	25 d1       	rcall	.+586    	; 0x1622 <fputc>
    13d8:	31 10       	cpse	r3, r1
    13da:	3a 94       	dec	r3
    13dc:	f1 e0       	ldi	r31, 0x01	; 1
    13de:	4f 1a       	sub	r4, r31
    13e0:	51 08       	sbc	r5, r1
    13e2:	41 14       	cp	r4, r1
    13e4:	51 04       	cpc	r5, r1
    13e6:	79 f7       	brne	.-34     	; 0x13c6 <vfprintf+0x1ac>
    13e8:	de c0       	rjmp	.+444    	; 0x15a6 <vfprintf+0x38c>
    13ea:	84 36       	cpi	r24, 0x64	; 100
    13ec:	11 f0       	breq	.+4      	; 0x13f2 <vfprintf+0x1d8>
    13ee:	89 36       	cpi	r24, 0x69	; 105
    13f0:	31 f5       	brne	.+76     	; 0x143e <vfprintf+0x224>
    13f2:	f8 01       	movw	r30, r16
    13f4:	27 ff       	sbrs	r18, 7
    13f6:	07 c0       	rjmp	.+14     	; 0x1406 <vfprintf+0x1ec>
    13f8:	60 81       	ld	r22, Z
    13fa:	71 81       	ldd	r23, Z+1	; 0x01
    13fc:	82 81       	ldd	r24, Z+2	; 0x02
    13fe:	93 81       	ldd	r25, Z+3	; 0x03
    1400:	0c 5f       	subi	r16, 0xFC	; 252
    1402:	1f 4f       	sbci	r17, 0xFF	; 255
    1404:	08 c0       	rjmp	.+16     	; 0x1416 <vfprintf+0x1fc>
    1406:	60 81       	ld	r22, Z
    1408:	71 81       	ldd	r23, Z+1	; 0x01
    140a:	88 27       	eor	r24, r24
    140c:	77 fd       	sbrc	r23, 7
    140e:	80 95       	com	r24
    1410:	98 2f       	mov	r25, r24
    1412:	0e 5f       	subi	r16, 0xFE	; 254
    1414:	1f 4f       	sbci	r17, 0xFF	; 255
    1416:	2f 76       	andi	r18, 0x6F	; 111
    1418:	b2 2e       	mov	r11, r18
    141a:	97 ff       	sbrs	r25, 7
    141c:	09 c0       	rjmp	.+18     	; 0x1430 <vfprintf+0x216>
    141e:	90 95       	com	r25
    1420:	80 95       	com	r24
    1422:	70 95       	com	r23
    1424:	61 95       	neg	r22
    1426:	7f 4f       	sbci	r23, 0xFF	; 255
    1428:	8f 4f       	sbci	r24, 0xFF	; 255
    142a:	9f 4f       	sbci	r25, 0xFF	; 255
    142c:	20 68       	ori	r18, 0x80	; 128
    142e:	b2 2e       	mov	r11, r18
    1430:	2a e0       	ldi	r18, 0x0A	; 10
    1432:	30 e0       	ldi	r19, 0x00	; 0
    1434:	a4 01       	movw	r20, r8
    1436:	27 d1       	rcall	.+590    	; 0x1686 <__ultoa_invert>
    1438:	a8 2e       	mov	r10, r24
    143a:	a8 18       	sub	r10, r8
    143c:	43 c0       	rjmp	.+134    	; 0x14c4 <vfprintf+0x2aa>
    143e:	85 37       	cpi	r24, 0x75	; 117
    1440:	29 f4       	brne	.+10     	; 0x144c <vfprintf+0x232>
    1442:	2f 7e       	andi	r18, 0xEF	; 239
    1444:	b2 2e       	mov	r11, r18
    1446:	2a e0       	ldi	r18, 0x0A	; 10
    1448:	30 e0       	ldi	r19, 0x00	; 0
    144a:	25 c0       	rjmp	.+74     	; 0x1496 <vfprintf+0x27c>
    144c:	f2 2f       	mov	r31, r18
    144e:	f9 7f       	andi	r31, 0xF9	; 249
    1450:	bf 2e       	mov	r11, r31
    1452:	8f 36       	cpi	r24, 0x6F	; 111
    1454:	c1 f0       	breq	.+48     	; 0x1486 <vfprintf+0x26c>
    1456:	18 f4       	brcc	.+6      	; 0x145e <vfprintf+0x244>
    1458:	88 35       	cpi	r24, 0x58	; 88
    145a:	79 f0       	breq	.+30     	; 0x147a <vfprintf+0x260>
    145c:	ad c0       	rjmp	.+346    	; 0x15b8 <vfprintf+0x39e>
    145e:	80 37       	cpi	r24, 0x70	; 112
    1460:	19 f0       	breq	.+6      	; 0x1468 <vfprintf+0x24e>
    1462:	88 37       	cpi	r24, 0x78	; 120
    1464:	21 f0       	breq	.+8      	; 0x146e <vfprintf+0x254>
    1466:	a8 c0       	rjmp	.+336    	; 0x15b8 <vfprintf+0x39e>
    1468:	2f 2f       	mov	r18, r31
    146a:	20 61       	ori	r18, 0x10	; 16
    146c:	b2 2e       	mov	r11, r18
    146e:	b4 fe       	sbrs	r11, 4
    1470:	0d c0       	rjmp	.+26     	; 0x148c <vfprintf+0x272>
    1472:	8b 2d       	mov	r24, r11
    1474:	84 60       	ori	r24, 0x04	; 4
    1476:	b8 2e       	mov	r11, r24
    1478:	09 c0       	rjmp	.+18     	; 0x148c <vfprintf+0x272>
    147a:	24 ff       	sbrs	r18, 4
    147c:	0a c0       	rjmp	.+20     	; 0x1492 <vfprintf+0x278>
    147e:	9f 2f       	mov	r25, r31
    1480:	96 60       	ori	r25, 0x06	; 6
    1482:	b9 2e       	mov	r11, r25
    1484:	06 c0       	rjmp	.+12     	; 0x1492 <vfprintf+0x278>
    1486:	28 e0       	ldi	r18, 0x08	; 8
    1488:	30 e0       	ldi	r19, 0x00	; 0
    148a:	05 c0       	rjmp	.+10     	; 0x1496 <vfprintf+0x27c>
    148c:	20 e1       	ldi	r18, 0x10	; 16
    148e:	30 e0       	ldi	r19, 0x00	; 0
    1490:	02 c0       	rjmp	.+4      	; 0x1496 <vfprintf+0x27c>
    1492:	20 e1       	ldi	r18, 0x10	; 16
    1494:	32 e0       	ldi	r19, 0x02	; 2
    1496:	f8 01       	movw	r30, r16
    1498:	b7 fe       	sbrs	r11, 7
    149a:	07 c0       	rjmp	.+14     	; 0x14aa <vfprintf+0x290>
    149c:	60 81       	ld	r22, Z
    149e:	71 81       	ldd	r23, Z+1	; 0x01
    14a0:	82 81       	ldd	r24, Z+2	; 0x02
    14a2:	93 81       	ldd	r25, Z+3	; 0x03
    14a4:	0c 5f       	subi	r16, 0xFC	; 252
    14a6:	1f 4f       	sbci	r17, 0xFF	; 255
    14a8:	06 c0       	rjmp	.+12     	; 0x14b6 <vfprintf+0x29c>
    14aa:	60 81       	ld	r22, Z
    14ac:	71 81       	ldd	r23, Z+1	; 0x01
    14ae:	80 e0       	ldi	r24, 0x00	; 0
    14b0:	90 e0       	ldi	r25, 0x00	; 0
    14b2:	0e 5f       	subi	r16, 0xFE	; 254
    14b4:	1f 4f       	sbci	r17, 0xFF	; 255
    14b6:	a4 01       	movw	r20, r8
    14b8:	e6 d0       	rcall	.+460    	; 0x1686 <__ultoa_invert>
    14ba:	a8 2e       	mov	r10, r24
    14bc:	a8 18       	sub	r10, r8
    14be:	fb 2d       	mov	r31, r11
    14c0:	ff 77       	andi	r31, 0x7F	; 127
    14c2:	bf 2e       	mov	r11, r31
    14c4:	b6 fe       	sbrs	r11, 6
    14c6:	0b c0       	rjmp	.+22     	; 0x14de <vfprintf+0x2c4>
    14c8:	2b 2d       	mov	r18, r11
    14ca:	2e 7f       	andi	r18, 0xFE	; 254
    14cc:	a5 14       	cp	r10, r5
    14ce:	50 f4       	brcc	.+20     	; 0x14e4 <vfprintf+0x2ca>
    14d0:	b4 fe       	sbrs	r11, 4
    14d2:	0a c0       	rjmp	.+20     	; 0x14e8 <vfprintf+0x2ce>
    14d4:	b2 fc       	sbrc	r11, 2
    14d6:	08 c0       	rjmp	.+16     	; 0x14e8 <vfprintf+0x2ce>
    14d8:	2b 2d       	mov	r18, r11
    14da:	2e 7e       	andi	r18, 0xEE	; 238
    14dc:	05 c0       	rjmp	.+10     	; 0x14e8 <vfprintf+0x2ce>
    14de:	7a 2c       	mov	r7, r10
    14e0:	2b 2d       	mov	r18, r11
    14e2:	03 c0       	rjmp	.+6      	; 0x14ea <vfprintf+0x2d0>
    14e4:	7a 2c       	mov	r7, r10
    14e6:	01 c0       	rjmp	.+2      	; 0x14ea <vfprintf+0x2d0>
    14e8:	75 2c       	mov	r7, r5
    14ea:	24 ff       	sbrs	r18, 4
    14ec:	0d c0       	rjmp	.+26     	; 0x1508 <vfprintf+0x2ee>
    14ee:	fe 01       	movw	r30, r28
    14f0:	ea 0d       	add	r30, r10
    14f2:	f1 1d       	adc	r31, r1
    14f4:	80 81       	ld	r24, Z
    14f6:	80 33       	cpi	r24, 0x30	; 48
    14f8:	11 f4       	brne	.+4      	; 0x14fe <vfprintf+0x2e4>
    14fa:	29 7e       	andi	r18, 0xE9	; 233
    14fc:	09 c0       	rjmp	.+18     	; 0x1510 <vfprintf+0x2f6>
    14fe:	22 ff       	sbrs	r18, 2
    1500:	06 c0       	rjmp	.+12     	; 0x150e <vfprintf+0x2f4>
    1502:	73 94       	inc	r7
    1504:	73 94       	inc	r7
    1506:	04 c0       	rjmp	.+8      	; 0x1510 <vfprintf+0x2f6>
    1508:	82 2f       	mov	r24, r18
    150a:	86 78       	andi	r24, 0x86	; 134
    150c:	09 f0       	breq	.+2      	; 0x1510 <vfprintf+0x2f6>
    150e:	73 94       	inc	r7
    1510:	23 fd       	sbrc	r18, 3
    1512:	12 c0       	rjmp	.+36     	; 0x1538 <vfprintf+0x31e>
    1514:	20 ff       	sbrs	r18, 0
    1516:	06 c0       	rjmp	.+12     	; 0x1524 <vfprintf+0x30a>
    1518:	5a 2c       	mov	r5, r10
    151a:	73 14       	cp	r7, r3
    151c:	18 f4       	brcc	.+6      	; 0x1524 <vfprintf+0x30a>
    151e:	53 0c       	add	r5, r3
    1520:	57 18       	sub	r5, r7
    1522:	73 2c       	mov	r7, r3
    1524:	73 14       	cp	r7, r3
    1526:	60 f4       	brcc	.+24     	; 0x1540 <vfprintf+0x326>
    1528:	b7 01       	movw	r22, r14
    152a:	80 e2       	ldi	r24, 0x20	; 32
    152c:	90 e0       	ldi	r25, 0x00	; 0
    152e:	2c 87       	std	Y+12, r18	; 0x0c
    1530:	78 d0       	rcall	.+240    	; 0x1622 <fputc>
    1532:	73 94       	inc	r7
    1534:	2c 85       	ldd	r18, Y+12	; 0x0c
    1536:	f6 cf       	rjmp	.-20     	; 0x1524 <vfprintf+0x30a>
    1538:	73 14       	cp	r7, r3
    153a:	10 f4       	brcc	.+4      	; 0x1540 <vfprintf+0x326>
    153c:	37 18       	sub	r3, r7
    153e:	01 c0       	rjmp	.+2      	; 0x1542 <vfprintf+0x328>
    1540:	31 2c       	mov	r3, r1
    1542:	24 ff       	sbrs	r18, 4
    1544:	11 c0       	rjmp	.+34     	; 0x1568 <vfprintf+0x34e>
    1546:	b7 01       	movw	r22, r14
    1548:	80 e3       	ldi	r24, 0x30	; 48
    154a:	90 e0       	ldi	r25, 0x00	; 0
    154c:	2c 87       	std	Y+12, r18	; 0x0c
    154e:	69 d0       	rcall	.+210    	; 0x1622 <fputc>
    1550:	2c 85       	ldd	r18, Y+12	; 0x0c
    1552:	22 ff       	sbrs	r18, 2
    1554:	16 c0       	rjmp	.+44     	; 0x1582 <vfprintf+0x368>
    1556:	21 ff       	sbrs	r18, 1
    1558:	03 c0       	rjmp	.+6      	; 0x1560 <vfprintf+0x346>
    155a:	88 e5       	ldi	r24, 0x58	; 88
    155c:	90 e0       	ldi	r25, 0x00	; 0
    155e:	02 c0       	rjmp	.+4      	; 0x1564 <vfprintf+0x34a>
    1560:	88 e7       	ldi	r24, 0x78	; 120
    1562:	90 e0       	ldi	r25, 0x00	; 0
    1564:	b7 01       	movw	r22, r14
    1566:	0c c0       	rjmp	.+24     	; 0x1580 <vfprintf+0x366>
    1568:	82 2f       	mov	r24, r18
    156a:	86 78       	andi	r24, 0x86	; 134
    156c:	51 f0       	breq	.+20     	; 0x1582 <vfprintf+0x368>
    156e:	21 fd       	sbrc	r18, 1
    1570:	02 c0       	rjmp	.+4      	; 0x1576 <vfprintf+0x35c>
    1572:	80 e2       	ldi	r24, 0x20	; 32
    1574:	01 c0       	rjmp	.+2      	; 0x1578 <vfprintf+0x35e>
    1576:	8b e2       	ldi	r24, 0x2B	; 43
    1578:	27 fd       	sbrc	r18, 7
    157a:	8d e2       	ldi	r24, 0x2D	; 45
    157c:	b7 01       	movw	r22, r14
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	50 d0       	rcall	.+160    	; 0x1622 <fputc>
    1582:	a5 14       	cp	r10, r5
    1584:	30 f4       	brcc	.+12     	; 0x1592 <vfprintf+0x378>
    1586:	b7 01       	movw	r22, r14
    1588:	80 e3       	ldi	r24, 0x30	; 48
    158a:	90 e0       	ldi	r25, 0x00	; 0
    158c:	4a d0       	rcall	.+148    	; 0x1622 <fputc>
    158e:	5a 94       	dec	r5
    1590:	f8 cf       	rjmp	.-16     	; 0x1582 <vfprintf+0x368>
    1592:	aa 94       	dec	r10
    1594:	f4 01       	movw	r30, r8
    1596:	ea 0d       	add	r30, r10
    1598:	f1 1d       	adc	r31, r1
    159a:	80 81       	ld	r24, Z
    159c:	b7 01       	movw	r22, r14
    159e:	90 e0       	ldi	r25, 0x00	; 0
    15a0:	40 d0       	rcall	.+128    	; 0x1622 <fputc>
    15a2:	a1 10       	cpse	r10, r1
    15a4:	f6 cf       	rjmp	.-20     	; 0x1592 <vfprintf+0x378>
    15a6:	33 20       	and	r3, r3
    15a8:	09 f4       	brne	.+2      	; 0x15ac <vfprintf+0x392>
    15aa:	5d ce       	rjmp	.-838    	; 0x1266 <vfprintf+0x4c>
    15ac:	b7 01       	movw	r22, r14
    15ae:	80 e2       	ldi	r24, 0x20	; 32
    15b0:	90 e0       	ldi	r25, 0x00	; 0
    15b2:	37 d0       	rcall	.+110    	; 0x1622 <fputc>
    15b4:	3a 94       	dec	r3
    15b6:	f7 cf       	rjmp	.-18     	; 0x15a6 <vfprintf+0x38c>
    15b8:	f7 01       	movw	r30, r14
    15ba:	86 81       	ldd	r24, Z+6	; 0x06
    15bc:	97 81       	ldd	r25, Z+7	; 0x07
    15be:	02 c0       	rjmp	.+4      	; 0x15c4 <vfprintf+0x3aa>
    15c0:	8f ef       	ldi	r24, 0xFF	; 255
    15c2:	9f ef       	ldi	r25, 0xFF	; 255
    15c4:	2c 96       	adiw	r28, 0x0c	; 12
    15c6:	0f b6       	in	r0, 0x3f	; 63
    15c8:	f8 94       	cli
    15ca:	de bf       	out	0x3e, r29	; 62
    15cc:	0f be       	out	0x3f, r0	; 63
    15ce:	cd bf       	out	0x3d, r28	; 61
    15d0:	df 91       	pop	r29
    15d2:	cf 91       	pop	r28
    15d4:	1f 91       	pop	r17
    15d6:	0f 91       	pop	r16
    15d8:	ff 90       	pop	r15
    15da:	ef 90       	pop	r14
    15dc:	df 90       	pop	r13
    15de:	cf 90       	pop	r12
    15e0:	bf 90       	pop	r11
    15e2:	af 90       	pop	r10
    15e4:	9f 90       	pop	r9
    15e6:	8f 90       	pop	r8
    15e8:	7f 90       	pop	r7
    15ea:	6f 90       	pop	r6
    15ec:	5f 90       	pop	r5
    15ee:	4f 90       	pop	r4
    15f0:	3f 90       	pop	r3
    15f2:	2f 90       	pop	r2
    15f4:	08 95       	ret

000015f6 <strnlen_P>:
    15f6:	fc 01       	movw	r30, r24
    15f8:	05 90       	lpm	r0, Z+
    15fa:	61 50       	subi	r22, 0x01	; 1
    15fc:	70 40       	sbci	r23, 0x00	; 0
    15fe:	01 10       	cpse	r0, r1
    1600:	d8 f7       	brcc	.-10     	; 0x15f8 <strnlen_P+0x2>
    1602:	80 95       	com	r24
    1604:	90 95       	com	r25
    1606:	8e 0f       	add	r24, r30
    1608:	9f 1f       	adc	r25, r31
    160a:	08 95       	ret

0000160c <strnlen>:
    160c:	fc 01       	movw	r30, r24
    160e:	61 50       	subi	r22, 0x01	; 1
    1610:	70 40       	sbci	r23, 0x00	; 0
    1612:	01 90       	ld	r0, Z+
    1614:	01 10       	cpse	r0, r1
    1616:	d8 f7       	brcc	.-10     	; 0x160e <strnlen+0x2>
    1618:	80 95       	com	r24
    161a:	90 95       	com	r25
    161c:	8e 0f       	add	r24, r30
    161e:	9f 1f       	adc	r25, r31
    1620:	08 95       	ret

00001622 <fputc>:
    1622:	0f 93       	push	r16
    1624:	1f 93       	push	r17
    1626:	cf 93       	push	r28
    1628:	df 93       	push	r29
    162a:	18 2f       	mov	r17, r24
    162c:	09 2f       	mov	r16, r25
    162e:	eb 01       	movw	r28, r22
    1630:	8b 81       	ldd	r24, Y+3	; 0x03
    1632:	81 fd       	sbrc	r24, 1
    1634:	03 c0       	rjmp	.+6      	; 0x163c <fputc+0x1a>
    1636:	8f ef       	ldi	r24, 0xFF	; 255
    1638:	9f ef       	ldi	r25, 0xFF	; 255
    163a:	20 c0       	rjmp	.+64     	; 0x167c <fputc+0x5a>
    163c:	82 ff       	sbrs	r24, 2
    163e:	10 c0       	rjmp	.+32     	; 0x1660 <fputc+0x3e>
    1640:	4e 81       	ldd	r20, Y+6	; 0x06
    1642:	5f 81       	ldd	r21, Y+7	; 0x07
    1644:	2c 81       	ldd	r18, Y+4	; 0x04
    1646:	3d 81       	ldd	r19, Y+5	; 0x05
    1648:	42 17       	cp	r20, r18
    164a:	53 07       	cpc	r21, r19
    164c:	7c f4       	brge	.+30     	; 0x166c <fputc+0x4a>
    164e:	e8 81       	ld	r30, Y
    1650:	f9 81       	ldd	r31, Y+1	; 0x01
    1652:	9f 01       	movw	r18, r30
    1654:	2f 5f       	subi	r18, 0xFF	; 255
    1656:	3f 4f       	sbci	r19, 0xFF	; 255
    1658:	39 83       	std	Y+1, r19	; 0x01
    165a:	28 83       	st	Y, r18
    165c:	10 83       	st	Z, r17
    165e:	06 c0       	rjmp	.+12     	; 0x166c <fputc+0x4a>
    1660:	e8 85       	ldd	r30, Y+8	; 0x08
    1662:	f9 85       	ldd	r31, Y+9	; 0x09
    1664:	81 2f       	mov	r24, r17
    1666:	19 95       	eicall
    1668:	89 2b       	or	r24, r25
    166a:	29 f7       	brne	.-54     	; 0x1636 <fputc+0x14>
    166c:	2e 81       	ldd	r18, Y+6	; 0x06
    166e:	3f 81       	ldd	r19, Y+7	; 0x07
    1670:	2f 5f       	subi	r18, 0xFF	; 255
    1672:	3f 4f       	sbci	r19, 0xFF	; 255
    1674:	3f 83       	std	Y+7, r19	; 0x07
    1676:	2e 83       	std	Y+6, r18	; 0x06
    1678:	81 2f       	mov	r24, r17
    167a:	90 2f       	mov	r25, r16
    167c:	df 91       	pop	r29
    167e:	cf 91       	pop	r28
    1680:	1f 91       	pop	r17
    1682:	0f 91       	pop	r16
    1684:	08 95       	ret

00001686 <__ultoa_invert>:
    1686:	fa 01       	movw	r30, r20
    1688:	aa 27       	eor	r26, r26
    168a:	28 30       	cpi	r18, 0x08	; 8
    168c:	51 f1       	breq	.+84     	; 0x16e2 <__ultoa_invert+0x5c>
    168e:	20 31       	cpi	r18, 0x10	; 16
    1690:	81 f1       	breq	.+96     	; 0x16f2 <__ultoa_invert+0x6c>
    1692:	e8 94       	clt
    1694:	6f 93       	push	r22
    1696:	6e 7f       	andi	r22, 0xFE	; 254
    1698:	6e 5f       	subi	r22, 0xFE	; 254
    169a:	7f 4f       	sbci	r23, 0xFF	; 255
    169c:	8f 4f       	sbci	r24, 0xFF	; 255
    169e:	9f 4f       	sbci	r25, 0xFF	; 255
    16a0:	af 4f       	sbci	r26, 0xFF	; 255
    16a2:	b1 e0       	ldi	r27, 0x01	; 1
    16a4:	3e d0       	rcall	.+124    	; 0x1722 <__ultoa_invert+0x9c>
    16a6:	b4 e0       	ldi	r27, 0x04	; 4
    16a8:	3c d0       	rcall	.+120    	; 0x1722 <__ultoa_invert+0x9c>
    16aa:	67 0f       	add	r22, r23
    16ac:	78 1f       	adc	r23, r24
    16ae:	89 1f       	adc	r24, r25
    16b0:	9a 1f       	adc	r25, r26
    16b2:	a1 1d       	adc	r26, r1
    16b4:	68 0f       	add	r22, r24
    16b6:	79 1f       	adc	r23, r25
    16b8:	8a 1f       	adc	r24, r26
    16ba:	91 1d       	adc	r25, r1
    16bc:	a1 1d       	adc	r26, r1
    16be:	6a 0f       	add	r22, r26
    16c0:	71 1d       	adc	r23, r1
    16c2:	81 1d       	adc	r24, r1
    16c4:	91 1d       	adc	r25, r1
    16c6:	a1 1d       	adc	r26, r1
    16c8:	20 d0       	rcall	.+64     	; 0x170a <__ultoa_invert+0x84>
    16ca:	09 f4       	brne	.+2      	; 0x16ce <__ultoa_invert+0x48>
    16cc:	68 94       	set
    16ce:	3f 91       	pop	r19
    16d0:	2a e0       	ldi	r18, 0x0A	; 10
    16d2:	26 9f       	mul	r18, r22
    16d4:	11 24       	eor	r1, r1
    16d6:	30 19       	sub	r19, r0
    16d8:	30 5d       	subi	r19, 0xD0	; 208
    16da:	31 93       	st	Z+, r19
    16dc:	de f6       	brtc	.-74     	; 0x1694 <__ultoa_invert+0xe>
    16de:	cf 01       	movw	r24, r30
    16e0:	08 95       	ret
    16e2:	46 2f       	mov	r20, r22
    16e4:	47 70       	andi	r20, 0x07	; 7
    16e6:	40 5d       	subi	r20, 0xD0	; 208
    16e8:	41 93       	st	Z+, r20
    16ea:	b3 e0       	ldi	r27, 0x03	; 3
    16ec:	0f d0       	rcall	.+30     	; 0x170c <__ultoa_invert+0x86>
    16ee:	c9 f7       	brne	.-14     	; 0x16e2 <__ultoa_invert+0x5c>
    16f0:	f6 cf       	rjmp	.-20     	; 0x16de <__ultoa_invert+0x58>
    16f2:	46 2f       	mov	r20, r22
    16f4:	4f 70       	andi	r20, 0x0F	; 15
    16f6:	40 5d       	subi	r20, 0xD0	; 208
    16f8:	4a 33       	cpi	r20, 0x3A	; 58
    16fa:	18 f0       	brcs	.+6      	; 0x1702 <__ultoa_invert+0x7c>
    16fc:	49 5d       	subi	r20, 0xD9	; 217
    16fe:	31 fd       	sbrc	r19, 1
    1700:	40 52       	subi	r20, 0x20	; 32
    1702:	41 93       	st	Z+, r20
    1704:	02 d0       	rcall	.+4      	; 0x170a <__ultoa_invert+0x84>
    1706:	a9 f7       	brne	.-22     	; 0x16f2 <__ultoa_invert+0x6c>
    1708:	ea cf       	rjmp	.-44     	; 0x16de <__ultoa_invert+0x58>
    170a:	b4 e0       	ldi	r27, 0x04	; 4
    170c:	a6 95       	lsr	r26
    170e:	97 95       	ror	r25
    1710:	87 95       	ror	r24
    1712:	77 95       	ror	r23
    1714:	67 95       	ror	r22
    1716:	ba 95       	dec	r27
    1718:	c9 f7       	brne	.-14     	; 0x170c <__ultoa_invert+0x86>
    171a:	00 97       	sbiw	r24, 0x00	; 0
    171c:	61 05       	cpc	r22, r1
    171e:	71 05       	cpc	r23, r1
    1720:	08 95       	ret
    1722:	9b 01       	movw	r18, r22
    1724:	ac 01       	movw	r20, r24
    1726:	0a 2e       	mov	r0, r26
    1728:	06 94       	lsr	r0
    172a:	57 95       	ror	r21
    172c:	47 95       	ror	r20
    172e:	37 95       	ror	r19
    1730:	27 95       	ror	r18
    1732:	ba 95       	dec	r27
    1734:	c9 f7       	brne	.-14     	; 0x1728 <__ultoa_invert+0xa2>
    1736:	62 0f       	add	r22, r18
    1738:	73 1f       	adc	r23, r19
    173a:	84 1f       	adc	r24, r20
    173c:	95 1f       	adc	r25, r21
    173e:	a0 1d       	adc	r26, r0
    1740:	08 95       	ret

00001742 <_exit>:
    1742:	f8 94       	cli

00001744 <__stop_program>:
    1744:	ff cf       	rjmp	.-2      	; 0x1744 <__stop_program>
